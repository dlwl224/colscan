{"title": "큐싱", "subtitle": "피싱 정의", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20303&postSeq=12005&attachSeq=1&lang_type=KO", "text": "피싱(phishing)은 개인정보(private data)와 낚시(fishing)의 합성어로, 금융기관 또는 공공기관 등을 사칭하여 전화나 이메일로 피싱 사이트 접속을 유도하여 개인정보(ID/PW) 또는 금융정보(보안카드, 공인인증서 정보) 등을 입력하도록 요구하여 사용자의 중요한 정보를 몰래 빼가는 수법이다."}
{"title": "큐싱", "subtitle": "스미싱 정의", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20303&postSeq=12005&attachSeq=1&lang_type=KO", "text": "2012년부터 등장하기 시작한 스미싱(smishing)은 SMS와 피싱의 합성어로, 신뢰할 수 있는 사람·기업·공공기관 등이 보낸 것처럼 가장한 휴대전화 문자에 악성앱의 링크(URL)를 포함시켜 사용자의 스마트폰에 악성앱을 설치하도록 유도하는 수법이다. 스마트폰 보급이 증가함에 따라 스미싱 악성앱의 악성행위는 진화되고 있으며, 이용자의 안전한 모바일 이용을 위협하고 있다."}
{"title": "큐싱", "subtitle": "서비스", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20303&postSeq=12005&attachSeq=1&lang_type=KO", "text": "2024년 5월부터는 일반 국민들이 카카오톡의 보호나라 채널을 통하여 수신된 문자의 스미싱 여부를 직접 확인할 수 있는 스미싱 확인 서비스를 제공하고 있다. 기존에 이동통신 사업자와 문자발송 사업자와 협력하여 발송 단계에서 스미싱 문자를 사전 차단하는 방법에 국민들이 직접 정상문자를 식별할 수 있는 수단을 추가하여 스미싱 피해를 최소화하기 위하여 노력하고 있다. 또한 QR코드를 이용한 큐싱(QR Code+phishing)과 같은 신규 위협에 선제적으로 대응하기 위하여 큐싱 확인 서비스를 추가하였다."}
{"title": "큐싱", "subtitle": "서비스", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20303&postSeq=12005&attachSeq=1&lang_type=KO", "text": "2012년 하반기부터 모바일 악성코드(악성앱)가 본격적으로 유포되기 시작하고 2013년부터 급증함에 따라 2014년 모바일 악성앱에 감염된 좀비 스마트폰을 대상으로 감염알림 및 치료제공이 가능한 ‘모바일 응급 사이버 치료 체계’를 시범 구축하였으며, 2015년부터 이동통신 3사(SKT, KT, LGU+)를 대상으로 악성앱 감염 스마트폰 치료서비스를 제공하였다. 모바일 응급 사이버 치료 체계는 이동통신사와 협조하여 이동통신 가입자를 대상으로 제공되며, 탐지한 악성앱의 유포지, 정보 유출지, C&C 정보를 바탕으로 이동통신사가 감염 의심 스마트폰을 식별하여 감염 사실을 알리고 악성앱에 대한 치료 서비스를 제공한다. 감염 알림은 스마트폰에 기본 탑재되는 보안앱 또는 문자메시지를 통하여 전송되며, 사용자의 스마트폰에 설치된 악성앱을 삭제하여 치료 서비스를 제공한다. 2015년 서비스를 개시한 이후 2024년까지 총 256,640건의 좀비 스마트폰을 발견하여 감염 사실을 안내하였다."}
{"title": "큐싱", "subtitle": "큐싱 예방", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20303&postSeq=12005&attachSeq=1&lang_type=KO", "text": "QR 코드를 활용한 큐싱(Qshing) 등 새로운 국민 정보 탈취 수법에 대한 다양한 대처 방법을 ‘정보보호의 달’과 연계하여 기업과 개인이 실천하여야 하는 정보보호 실천 수칙으로 만들어 다양한 온오프라인 매체(키오스크, 전광판, 사내 TV 등)에 송출함으로써 사이버위협에 대한 경각심을 고취하고 정보보호 인식 제고 효과를 증대시켰다."}
{"title": "큐싱", "subtitle": "큐싱 예방", "source": "https://pipc.go.kr/np/cop/bbs/selectBoardArticle.do?bbsId=BS074&mCode=C020010000%22&nttId=10698#LINK", "text": "<큐싱 사기 예방 수칙> ① 출처가 불분명한 웹사이트나 모르는 사람이 보낸 이메일에 포함된 QR코드는 스캔 금지! ② 공공장소 QR이 덧붙여진 스티커가 아닌지 확인(공유자전거 등 이용할 때 가짜 QR코드인지 살펴보기) ③ QR 스캔 시 연결되는 링크 주소(URL)가 올바른지 다시 한번 확인 ④ QR코드 접속 후 개인정보 입력을 요구하거나 수상한 앱은 설치 금지! ⑤ 모바일 전용 보안 앱, 스미싱 탐지 앱 설치 및 최신 버전 유지하기!"}
{"title": "큐싱", "subtitle": "큐싱 대응", "source": "https://pipc.go.kr/np/cop/bbs/selectBoardArticle.do?bbsId=BS074&mCode=C020010000%22&nttId=10698#LINK", "text": "<큐싱 피해 또는 의심되는 경우 조치방법>  큐싱에 속아 악성 앱 설치가 의심되면, 즉시 스마트폰을 비행기 모드로 변경하여 통신을 차단하고 모바일 백신으로 악성 앱을 삭제하여야 한다. 금융정보 유출이 의심되는 경우, 거래하는 금융회사 영업점을 방문하거나 콜센터에 전화하여 본인 계좌에 일괄 지급정지를 요청함으로써 피해를 최소화하고, 특히 사기 전화범에게 속아 피해금을 계좌로 송금한 경우에는 경찰청(☎112)에 피해사실을 신고하고 범인이 돈을 옮기지 못하도록 즉시 지급정지를 신청할 것을 당부했다.  큐싱이 의심되는 QR코드를 발견하였거나, 악성 앱 감염 등이 의심되는 경우 ‘사기전화지킴이(경찰청․금융감독원)’에 신고하거나, 국번없이 118 상담센터(KISA)에 연락하면 24시간 무료로 상담받을 수 있다."}
{"title": "큐싱", "subtitle": "큐싱 정의", "source": "https://www.fis.kr/ko/major_biz/cyber_safety_oper/attack_info/notice_issue?articleSeq=3732", "text": "큐싱이란? QR코드와 피싱의 합성어인 큐싱은 QR코드를 이용한 해킹을 의미합니다. 코로나 19 이후로 QR코드 활용 문화가 확산이 되면서 QR코드 사기인 큐싱 범죄가 늘고있습니다. 기존의 피싱수법들이 사용자들에게 널리 알려져 QR코드를 활용한 새로운 악성코드 유포, 개인정보 탈취 방식이 등장하였습니다."}
{"title": "큐싱", "subtitle": "큐싱 공격", "source": "https://www.fis.kr/ko/major_biz/cyber_safety_oper/attack_info/notice_issue?articleSeq=3732", "text": "공격의 기본 요소는 해커가 이메일을 퍼뜨리는 공격과 다르지 않습니다. 그러나 QR코드의 경우는 시각적으로 구별하는 것이 거의 불가능하여 정상 QR코드인지 알 수 있는 방법이 없습니다. 자료를 보면 69퍼센트의 사람들은 악성URL을 식별할 수 있었지만, 악성 QR코드는 오직 39퍼센트만이 식별할 수 있었습니다. 사실, 대부분의 사람들은 QR 코드를 통해 사기가 발생할 수 있다는 사실조차 모르고 어디를 가든지 스캔합니다. 때문에 이메일 기반의 피싱 공격보다 QR코드 기반 공격이 성공 가능성이 더 큽니다. 공격자는 정품 QR 코드를 악성 QR 코드로 교체하거나 전략적으로 악성 QR 코드를 공공 장소에 남겨 두어 이를 활용할 수 있습니다."}
{"title": "큐싱", "subtitle": "큐싱 공격", "source": "https://www.fis.kr/ko/major_biz/cyber_safety_oper/attack_info/notice_issue?articleSeq=3732", "text": "오프라인에서의 물리적 큐싱 공격 공격자는 QR 코드의 바코드에 악성 링크를 삽입합니다. 스캔 후 링크는 세부 정보를 요청하고 공격자가 정보를 훔칠 수 있는 페이지로 연결됩니다. 물리적 영역에서 악성 QR 코드는 기업 사무실, 기업 및 정부 서비스 지점의 벽에 있는 실제 QR 코드를 대체합니다. 물리적 QR 코드 피싱은 호텔, 쇼핑몰 및 등의 환경에서도 발생할 수 있습니다. 예를 들어, 병원이나 의료 센터에 있고 누군가가 벽에 QR 스티커를 부착했다고 가정합니다. 이 경우 일반 사용자는 해커가 붙이고 간 악성 QR 코드라고 생각하지 않을 것입니다. 이러한 형태의 소셜 엔지니어링 공격이 사람들의 개인 데이터를 훔치려는 사이버 범죄자들 사이에서 인기를 얻고 있습니다. 악성 QR 코드를 스캔한 경우 공격자가 알려진 브랜드를 가장한 정상적으로 보이는 웹사이트와 로고를 만들기 때문에 큐싱 공격을 발견하기 어려울 수 있습니다. 또한 피해자의 장치에 멀웨어를 자동으로 다운로드하도록 구성하여 공격자가 중요한 정보를 훔치거나 장치를 제어할 수 있도록 할 수 있습니다."}
{"title": "큐싱", "subtitle": "큐싱 예방", "source": "https://www.fis.kr/ko/major_biz/cyber_safety_oper/attack_info/notice_issue?articleSeq=3732", "text": "<큐싱 위협 예방 방법> 출처가 확실하지 않은 QR코드는 스캔하지 않는 것이 좋으며, QR코드를 스캔할 경우 웹 주소가 이상하지 않은지 한번 더 확인합니다. 모바일 전용 보안 앱이나 스미싱 탐지 앱을 설치하고, 최신버전을 유지하는 것이 중요합니다. QR코드로 들어간 사이트의 로그인, 개인 또는 금융 정보를 입력할 때에는 주의해야 합니다. QR코드에서 앱을 다운받지 않습니다. 더 안전한 다운로드를 위해 휴대폰의 앱스토어를 사용합니다. 아는 사람에게서 온 것으로 생각되는 QR코드를 받은 경우 해당 사람에게 연락하여 한번 더 확인합니다. QR코드를 통해 결제를 완료하라는 통지를 받으면 회사 웹사이트에 전화하거나 접속하여 확인해 봅니다."}
{"title": "큐싱", "subtitle": "큐싱 정의", "source": "https://www.skshieldus.com/blog-security/security-trend-idx-57", "text": "큐싱(Quishing)은 QR코드와 피싱(Phishing)의 합성어로, QR코드를 통해 사용자의 정보를 탈취하는 해킹 수법입니다. 해커는 가짜 QR코드를 제작해 사용자로 하여금 이를 스캔하도록 유도하고, 악성 웹사이트나 앱 설치 페이지로 연결되게 만듭니다. 겉보기엔 평범한 흑백 격자의 QR코드지만, 그 속에는 치밀하게 설계된 공격이 숨어 있는 것이죠. QR코드를 활용한 서비스가 오프라인과 온라인을 가리지 않고 확산되면서, 공격 수법도 점점 다양해지고 있습니다. 공유 킥보드나 자전거 등에 부착된 정상 QR코드 위에 조작된 스티커를 덧붙이는 방식부터, 온라인 광고나 이메일 본문에 QR코드를 삽입해 출처를 알 수 없는 앱 설치를 유도하는 사례까지 등장하고 있죠. 육안으로는 진짜와 가짜 QR코드를 구분하기 어려워, 스캔하는 순간 위협이 시작되는 경우가 많습니다. 세금 통지서나 무료 쿠폰, 상품권으로 위장한 QR코드도 사용자를 속이는 데 악용되고 있습니다."}
{"title": "큐싱", "subtitle": "큐싱 공격", "source": "https://www.skshieldus.com/blog-security/security-trend-idx-57", "text": "큐싱은 QR코드를 인식하기만 해도 악성 앱 설치부터 개인정보탈취, 금융 피해까지 이어질 수 있어 특히나 위험합니다. 해커는 일반 웹사이트처럼 보이는 가짜 로그인 페이지나 악성 앱 설치 링크를 QR코드로 생성한 뒤, 이를 광고물이나 안내판, 메신저 등을 통해 유포합니다. 사용자가 아무런 의심 없이 QR코드를 스캔하면 악성 웹사이트에 접속돼 사용자의 계정 정보 탈취로 이어지거나 출처를 알 수 없는 앱이 설치될 수 있습니다. 악성 앱이 설치되면 스마트폰 내 보안카드 정보, 전화번호, 문자 메시지 등 민감한 데이터가 해커에게 탈취될 수 있습니다. 나아가 원격 제어 기능을 통해 소액결제나 자금 이체와 같은 직접적인 금전적 피해로 이어질 수 있으며, 피해자는 시간이 지난 후에야 문제를 인지하게 됩니다. 특히 핸드폰 악성코드 검사를 하지 않는 이상 즉시 알아차리지 못하는 경우가 많아, 초기 대응이 어렵고 피해 범위가 커지기 쉽다는 점에서 주의가 필요합니다. 접속하기 전까지는 URL의 진위를 식별할 수 없다는 점도 해커들이 이러한 수법을 선호하는 주요 이유 중 하나입니다."}
{"title": "큐싱", "subtitle": "큐싱 예방", "source": "https://www.skshieldus.com/blog-security/security-trend-idx-57", "text": "(1) 신뢰하기 어려운 QR코드 인식 금지: 큐싱은 보통 우리가 무심코 스캔한 QR코드에서 시작됩니다. 특히 길거리 홍보물, 택배 문자, 이벤트 안내 등 출처가 명확하지 않은 QR코드는 그 자체로 위험 요소가 될 수 있습니다. QR코드는 그 모양만으로 악성여부를 판단하기어렵습니다. 따라서 QR코드 인식 전에는 출처와 신뢰도를 한 번 더 점검하는 습관이 필요합니다. (2) 출처를 알 수 없는 앱 설치 제한: QR코드 스캔 후 나타나는 웹페이지에서 앱 설치를 유도할 경우, 반드시 설치 경로와 개발자를 확인해야 합니다. 특히 APK와 같은 안드로이드 설치 패키지 파일은 공식 마켓이 아닌 출처에서 배포될 수 있으므로 주의가 필요합니다. 스마트폰 설정에서 ‘출처를 알 수 없는 앱 설치’를 차단해 두면, 이러한 악성 앱의 자동 설치를 사전에 막을 수 있어 보다 안전한 환경을 유지할 수 있습니다. (3) QR코드 인식 후 연결되는 URL 확인: 범죄자들은 가짜 로그인 페이지나 금융기관을 사칭한 사이트로 연결되는 QR코드를 활용해 개인 정보를 탈취합니다. 이때 중요한 건, QR코드 인식 이후 자동으로 열리는 URL을 꼼꼼히 확인하는 일입니다. 주소가 복잡하게 얽혀 있거나 공식 기관 명칭이 포함되지 않은 경우, 악성 페이지일 가능성이 크므로 즉시 접속을 중단해야 합니다. 웹페이지 주소만 잘 확인해도 상당수의 사고를 예방할 수 있습니다.‍"}
{"title": "큐싱", "subtitle": "큐싱 사례", "source": "https://www.joongboo.com/news/articleView.html?idxno=363642676", "text": "지난 14일 오전 11시 안양시에 거주하고 있는 A씨(24·여)는 개인형 이동장치(PM)인 공유 전동킥보드를 이용하기 위해 큐알코드를 보다 이상한 점을 발견했다. 자신이 대여할 전동킥보드의 큐알코드 진하기가 옆쪽에 진열돼있는 여타 킥보드와는 달랐기 때문이다. 순간 A씨는 최근 소셜네트워크와 언론을 통해 전해 들었던 큐알코드를 이용한 범죄 ‘큐싱범죄’가 떠올랐고 전동킥보드를 이용하지 않아 피해를 보지 않았다."}
{"title": "큐싱", "subtitle": "통계", "source": "https://www.joongboo.com/news/articleView.html?idxno=363642676", "text": "최근 경찰청이 발표한 통계자료에 따르면 정보통신망 이용범죄, 그중에서 사이버 금융범죄에 해당하는 피싱 발생 건수는 최근 증가 추이를 보이고 있다. 큐싱을 포함한 피싱 범죄는 ▶2020년 기준 1천519건(검거 446명) ▶2021년 2천731건(검거 401명) ▶2022년 3천28건(검거 650명)이 발생됐다."}
{"title": "큐싱", "subtitle": "큐싱 공격", "source": "https://www.joongboo.com/news/articleView.html?idxno=363642676", "text": "금융감독원이 공개한 큐싱사기 수법의 핵심은 큐알코드를 통해 스마트폰을 악성코드에 감염시켜 사용자가 가짜 금융사이트(피싱사이트)에 접속하게 한 후 피해를 준다. 큐싱사기는 기본적으로 ▶QR코드 인식을 통해 악성 앱 설치를 유도, 혹은 가짜 금융사이트에서 추가인증이 필요한 것처럼 QR코드를 보여준 후 악성 프로그램이 설치되도록 유도 ▶깔린 악성 앱을 통해 보안카드·전화번호·문자메시지 등의 정보를 탈취 ▶문자 수신방해, 착신전환 서비스 설정과 같은 모바일 환경 조작 ▶소액결제, 자금이체 등 금전적 이득을 취하는 단계로 진행된다."}
{"title": "큐싱", "subtitle": "큐싱 피해 사례", "source": "https://www.hankyung.com/article/2024021694047", "text": "최근 자영업자 A씨는 '소상공인 저금리 대출'과 관련된 메일을 받았다. 메일에는 대출 안내와 함께 금융사기 예방 앱 설치를 위한 QR코드를 촬영하라는 내용이 담겨 있었다. A씨가 스마트폰으로 QR코드를 촬영하자 그의 휴대전화에는 악성 앱이 설치됐다. 이는 개인정보 유출로 이어졌고 1000만원가량의 금전적 피해를 봤다. B씨는 모 은행의 스마트 뱅킹 앱을 이용해 자금 이체를 진행하던 중, 추가 인증이 필요하다며 QR코드가 담긴 문자 메시지를 받았다. 은행에서 보낸 메시지라고 생각한 B씨는 문자의 지시에 따라 앱을 설치하고 은행 보안 카드를 촬영했다. 순간 금융 사기라고 의심한 B씨는 동작을 중단했지만, 순식간에 통신사 소액결제로 게임머니 35만원이 결제돼있었다."}
{"title": "큐싱", "subtitle": "큐싱 해외 사례", "source": "https://www.hankyung.com/article/2024021694047", "text": "이탈리아와 중국에서는 가짜 QR코드가 인쇄된 주차 위반 딱지가 발견된 바 있다. 미국에서는 주차장 요금 정산기 QR코드가 있어야 할 위치에 악성 QR코드가 덧붙여진 사례가 발견돼 미국 연방거래위원회(FTC)가 최근 소비자 경고도 내놨다."}
{"title": "큐싱", "subtitle": "2025년 사이버보안 10대 이슈", "source": "http://www.itdaily.kr/news/articleView.html?idxno=228454", "text": "금융보안원(원장 김철웅)은 금융회사가 앞으로 다가올 디지털 금융 변화 및 사이버보안 위험을 사전에 진단하고 대응할 수 있도록 ‘2025년 디지털금융 및 사이버보안 10대 이슈’를 선정했다고 6일 밝혔다. 금융보안원은 △금융회사를 대상으로는 ‘금융보안, 갈라파고스를 넘어 글로벌 수준으로 도약’을 △금융소비자를 대상으로는 ‘큐빅(QUBIC)에 갇힌 금융소비자, 디지털 경계 주의보’를 핵심 메시지로 설정하고, 이슈 선정 과정에서 금융회사 현업종사자, 산·학계 전문가 등으로부터 다양한 의견을 수렴했다. 참고로 큐빅(QUBIC)은 큐싱(Qshing) + 신뢰할 수 없는 페르소나(Unreliable Persona) + 바이오메트릭(Biometric) + 모바일 집중(Intensive Mobile) + 암호화폐 시장(Crypto Market)을 뜻한다."}
{"title": "큐싱", "subtitle": "2025년 사이버보안 10대 이슈 - 금융회사", "source": "https://www.fsec.or.kr/bbs/detail?menuNo=69&bbsNo=11573", "text": "1. 금융보안 가치의 재정립, 10년의 뒤처짐을 넘어서자 ㅇ지난 10년간 국내 금융회사는 망분리에 의존하여 해외 대비 보안에 대한 투자가 소극적으로 이뤄졌던바, 망분리 규제 완화와 함께 자체 보안역량 강화를 위한 움직임이 가시화될 것이다. 2. 금융보안 DIY* 키트, 자율보안 프레임워크 정착 * Do It Yourself ㅇ자율보안-결과책임 원칙에 입각한 정부의 新금융보안 체계 전환 추진에 선제적으로 대응하기 위해 금융회사는 자사 환경에 맞는 `자율보안 프레임워크'를 구축･운영할 필요가 있다. 3. 혁신과 버블의 갈림길에 선 AI, 실효성 및 안전성 검증 본격화 ㅇ 망분리 규제 개선 등으로 AI를 적용한 금융서비스가 시장에 본격 출시될 것으로 보여, AI 실효성 검증과 함께 AI 거버넌스 및 위험관리 체계 구축에 대한 금융권의 움직임이 구체화될 것이다. 4. 제3자에서 전략적 동반자로, 금융권과 CSP간 안전한 협력 관계 모색 * Cloud Service Provider : 클라우드서비스 제공자 ㅇ금융 IT 분야에 클라우드의 영향력이 더욱 확대될 것으로 보이므로, 금융회사는 CSP를 단순 제3자가 아닌 영업 동반자(Big Player)로 인식하고 업무 협업 확대 등을 도모할 필요가 있다. 5. 암호 인프라의 지각변동, 양자컴퓨팅에 선제적 대비 ㅇ 양자컴퓨팅 기술의 발전으로 금융권 암호체계의 무력화가 점차 현실로 다가오고 있어 금융회사는 양자내성암호 등 양자위험 대응 전략을 선제적으로 검토해야 할 것이다."}
{"title": "큐싱", "subtitle": "2025년 사이버보안 10대 이슈 - 금융소비자", "source": "https://www.fsec.or.kr/bbs/detail?menuNo=69&bbsNo=11573", "text": "1. (Qshing*) QR코드를 스캔했을 뿐인데... 큐싱 경보 발령 * QR코드와 피싱(Phishing)의 합성어 ㅇ QR코드가 주문, 결제 등 생활 밀접 분야에 널리 활용되면서 이를 악용한 큐싱 공격이 본격화될 것으로 보이므로, 금융소비자는 QR코드 진위를 상시 확인하는 등 주의가 필요하다. 2. (Unreliable Persona) 당신 누구야? 신뢰할 수 없는 디지털 페르소나* 경계 * 고대 그리스 연극 배우들이 썼던 가면을 뜻하는 단어로, 디지털 세상에서는 온라인에서 개인의 정체성을 드러내고 소통하는 수단(ID, 아바타 등)으로 사용 ㅇ 전세계적으로 디지털 페르소나 악용 사례가 증가하고 AI와 접목하여 사기 기법이 고도화되고 있어, 금융소비자는 송금이나 개인정보 입력 등을 요구받는 경우 상대방의 신원을 철저히 검증해야 한다. 3. (Biometric) 내 지문이 왜 거기에? 생체정보 탈취 현실화 ㅇ 생체기반 결제 등 금융 분야에 생체정보 활용이 확대됨에 따라 이러한 정보를 탈취하려는 공격이 현실화될 것으로 보이며, 금융소비자는 신뢰할 수 있는 대상에게만 본인의 생체정보를 제공하는 등 활용에 만전을 기하여야 한다. 4. (Intensive Mobile) 내 모든 게 스마트폰에? 모바일 집중에 따른 위험 ㅇ 전자금융, 신원 증명 등 모바일 집중화 현상이 가속화됨에 따라 이를 노리는 공격도 확대･고도화될 것이므로, 금융소비자는 최신 운영체제 업데이트 등 기본적인 보안 조치를 생활화해야 한다. 5. (Crypto Market) 언제까지 차트만 볼래? Web 3.0과 연계한 가상자산의 미래 주목 ㅇ 국내 가상자산 시장은 코인투자에만 집중된 경향이 있으나 해외는 Web 3.0의 기술적 가치를 높게 보고 관련 생태계(ecosystem)를 구축하려는 시도가 활발하므로, 국내도 미래 금융 준비 관점에서 Web 3.0 시대를 위한 전략을 고민할 필요가 있다."}
{"title": "큐싱", "subtitle": "큐싱 정의", "source": "https://www.ahnlab.com/ko/contents/content-center/23719", "text": "최근 큐싱 사기 피해가 발생하면서 스마트폰 사용자들의 각별한 주의가 요구된다. 금융감독원에 따르면, 한 피해자는 거래 은행에서 스마트뱅킹으로 자금이체를 진행하던 중 추가인증이 필요하다며 QR코드가 나타난 메시지에 따라 앱 설치 후 보안카드를 비추었다. 순간 금융사기로 인식돼 동작은 중단됐지만 통신사에 확인한 결과 게임머니 35만 원이 소액결제 처리됐다.  이처럼 금융사기 수법은 점점 진화하고 있다. 이 글에서는 안드로이드 기반 스마트폰 사용자를 노리는 악성코드의 유포 방식 중 하나인 ‘큐싱(Qshing)’에 대해 알아본다. 큐싱이란, QR코드와 피싱(Fishing)의 합성어로, 사용자를 속이기 위한 한 단계 진화된 금융사기 수법이다. 해커는 안드로이드 기반의 스마트폰 뱅킹 사용자에게 인증이 필요한것처럼 속인 후, QR코드를 통해 악성 앱을 다운로드받도록 유도한다. 사용자 스마트폰에 악성 앱이 설치되면 이를 이용해 해커는 보안카드, 전화번호, 문자메시지 등의 정보를 탈취하고 문자 수신을 방해한다. 그동안 안드로이드 사용자를 겨냥한 대부분의 모바일 악성코드 유포는 스미싱을 통해 이루어졌다. 하지만, 이러한 스미싱 형태의 악성 앱에 대한 정보가 사용자들에게 널리 알려지면서 악성코드 제작자는 새로운 유포 방식이 필요했고, 그중 하나가 큐싱의 형태이다."}
{"title": "큐싱", "subtitle": "큐싱 흐름", "source": "https://www.ahnlab.com/ko/contents/content-center/23719", "text": "\"해커 → 악성코드 → 이용자 → 위조사이트 → 정보탈취 과정\", 해커가 파일공유사이트 등을 이용해 악성코드를 배포 → 이용자가 악성코드를 실행 → 위조 사이트로 리디렉션됨 → 이용자가 정상 사이트에 접속하려고 하지만, 악성코드는 위조된 가짜 사이트로 유도 → 해커는 위조 사이트를 통해 금융정보 탈취"}
{"title": "큐싱", "subtitle": "큐싱 사기 사례", "source": "https://www.ahnlab.com/ko/contents/content-center/23719", "text": "큐싱 사기 사례를 살펴보자. 뱅키(Banki)류 악성코드에 감염된 상태에서 사용자가 정상적인 포털 사이트 주소를 입력하고 접속했을 때의 화면이다. 하지만 악성코드에 의해 금융감독원을 사칭한 페이지가 나타나고, 각 은행별로 보안 인증절차를 요구하고 있다. 팝업 이미지를 통해 가짜 은행 사이트로 접속하면, 실제 은행 사이트와 매우 유사하거나 동일하게 구성된 페이지가 나타난다. 개인정보와 금융정보 입력을 요구하는 창이 뜬다. 팝업 이미지를 통해 가짜 은행 사이트로 접속하면, 실제 은행 사이트와 매우 유사하거나 동일하게 구성된 페이지가 나타난다. 이후 개인정보와 금융정보 입력을 요구하는 창이 뜬다. 이후 “전자 금융 사기 예방 서비스” 페이지에서 QR코드를 통해 추가로 악성 앱 설치를 유도한다. 스마트폰으로 QR코드를 스캔하면 http://www.sjdknn.com/appmgr.apk로 연결되며, 악성 앱을 다운로드받는다. 이러한 악성 앱은 개인정보 및 금융정보를 탈취하여 사용자에게 금전적인 피해를 줄 수 있다."}
{"title": "큐싱", "subtitle": "큐싱 사기 사례", "source": "https://www.ahnlab.com/ko/contents/content-center/23719", "text": "스마트폰 사용이 보편화되면서 금전을 목적으로 하는 악성 앱은 계속 진화하고 있다. 이러한 악성 앱은 문자 메시지에 포함된 URL, QR코드, SNS(Social Networking Service), 사설 앱 마켓 등을 통해 정상 앱을 사칭해 유포된다. 따라서 사용자는 공식 마켓 외에 출처가 불분명한 곳에서 다운로드 받지 않도록 주의하고, “알 수 없는 출처(소스)”의 허용 금지로 설정해야 한다. 공식 마켓에서도 악성 앱이 유포되는 경우가 있기 때문에 다운로드 전에는 평판 정보를 확인하는 것이 좋다. 또한, 모바일 전용 보안 앱이나 스미싱 탐지 앱을 설치하고 최신 버전을 유지하는 것이 중요하다. 이러한 악성 앱은 기기관리자 권한을 획득하는 경우가 많다. 기기관리자 권한을 획득한 악성 앱이 설치된 경우에는 스마트폰을 안전모드로 부팅한 후 [설정] → [보안] → [기기관리자(디바이스 관리자 or 휴대폰 관리자)] 메뉴에서 기기관리자 권한을 비활성화한 후 해당 앱을 삭제할 수 있다."}
{"title": "큐싱", "subtitle": "큐싱 사례", "source": "https://www.ahnlab.com/ko/contents/content-center/34273", "text": "안랩 분석팀이 최근 중화인민공화국 재정부를 사칭한 큐싱(Qshing) 메일이 임금 수령 통지서로 위장해 유포 중인 정황을 확인했다. 큐싱은 QR 코드와 피싱(Phishing)의 합성어로, 사용자가 QR 코드를 스캔하면 악성 앱 설치 또는 피싱 사이트 접속을 유도해 개인정보 및 금융정보를 빼내는 공격 수법이다. 해당 큐싱 메일의 유포 과정을 살펴보자. 유포 중인 메일은 2024년 1분기 임금 수령 통지서로 위장했다. 메일 본문에는 임금 보조금을 수령하려면 휴대폰으로 QR 코드를 스캔하도록 유도하는 문구가 적혀 있다. 공격자가 발신자 메일 주소를 ‘ahnlab.com’으로 작성한 것을 확인할 수 있다. 실제 발신자의 메일 주소는 메일 헤더를 통해 확인할 수 있지만, 일반적으로 메일 헤더까지 확인하는 사용자는 드물다. 따라서 대부분 발신자 메일 주소가 위조됐다는 사실을 알아채지 못한다. 사용자가 메일 본문에 존재하는 QR 코드를 스캔하면 아래 링크로 연결되며, 최종 피싱 사이트로 리다이렉트된다. QR 코드 연결 URL: 2024127[.]ltd  리다이렉트 URL: hxxps://km.pvncs157[.]sbs/, hxxp://dfxa.hwkltou.yoanka1r[.]sbs/ 리다이렉트된 페이지에서는 브라우저의 가로 넓이가 996보다 큰 경우 PC 환경으로 판단하고 모바일로 접속하도록 유도한다. 브라우저 가로 넓이 조건을 만족할 경우, 모바일로 접속한 것으로 판단하여 피싱 사이트로 연결된다. 해당 사이트에서는 보조금 수령 관련 문구를 포함한 알림창이 생성된다. 알림창 버튼을 클릭하면 개인정보 입력을 유도하는 페이지로 연결된다. 해당 페이지는 지원금 신청을 위해 사용자 이름, ID 번호를 입력하도록 유도한다. 사용자가 자신의 개인정보를 입력하면 이후 카드 및 휴대폰 번호, 패스워드 등 추가 정보를 입력하도록 하며, 입력된 사용자 정보는 아래 주소로 전송된다. hxxp://dfxa.hwkltou.yoanka1r[.]sbs/home/index/xyk.html  이처럼 공격자는 큐싱, 발신자 위조 등 다양한 기법을 사용해 공격을 시도한다. 사용자 정보가 유출되면 공격자가 이를 악용해 금전 요구를 하는 등 2차 피해로 이어질 수 있어 사용자는 발신자 주소를 꼼꼼히 확인한 후 메일을 열람해야 한다."}
{"title": "큐싱", "subtitle": "큐싱 해외 사례", "source": "https://www.ahnlab.com/ko/contents/content-center/34280", "text": "#1 최근 중국에서는 가짜 QR코드를 포함한 주차 위반 딱지가 발견됐다. 앞 유리 와이퍼 아래 주차 위반 딱지가 있어 QR코드를 카메라로 스캔하고 연결된 앱에서 개인정보를 입력했는데, 알고 보니 가짜였다. #2 스페인 마드리드에서는 공공자전거에 부착된 사기 QR코드가 발견됐다. 사용자들은 자전거 이용을 목적으로 로그인 및 결제하는 QR코드인 줄 알았지만, 사실은 피싱범들이 만든 사기 QR코드였다. #3 미국에서는 주차장 요금 정산기의 QR코드를 악성 QR코드로 덮어 사람들이 주차 요금을 결제하려고 할 때마다 피싱에 말려들게 하는 수법이 기승을 부리고 있다."}
{"title": "큐싱", "subtitle": "큐싱이란?", "source": "https://www.ahnlab.com/ko/contents/content-center/34280", "text": "모바일 피싱은 그동안 문자 메시지를 악용하는 경우가 많았다. 하지만 요즘에는 많은 사람들이 보안에 대한 인식이 높아져 메시지 본문에 포함된 URL을 섣불리 클릭하지 않는다. 이에 해커들은 악성코드 유포 및 개인정보 탈취를 위한 수단을 큐싱으로 전환한 것으로 보인다. 큐싱은 사용자가 스마트폰 카메라로 QR코드를 스캔하면 악성코드가 탑재된 앱 설치를 유도해 각종 개인정보와 금융정보를 빼가는 공격 방식이다. 공식 QR코드 위에 가짜 QR코드 스티커를 붙이거나 가짜 QR코드를 온라인이나 문자 메시지 등으로 유포해 악성 앱을 설치하도록 유도하는 등 다양한 형태로 나타나고 있다."}
{"title": "큐싱", "subtitle": "큐싱 - 가상화폐", "source": "https://www.ahnlab.com/ko/contents/content-center/34280", "text": "최근에는 가상화폐를 이용한 큐싱 사례도 등장했다. 가상화폐를 무료로 주겠다고 유인하며 악성 QR코드를 제공하는 사례가 발견되고 있다. 피해자가 QR코드를 스캔한 뒤 가상화폐를 받기 위해 코인 지갑을 인증하면 지갑의 주소와 가상화폐를 탈취해가는 수법이다. 보안 업계에서는 큐싱 수법에 당하지 않기 위해 공공장소 또는 보안이 허술한 웹 사이트에 노출된 출처가 불분명한 QR코드 스캔 시 주의할 것을 당부한다. 아울러, 간혹 이메일로 QR코드 인증을 요구하는 경우도 있어 이메일에 포함된 QR코드도 웬만해서는 접속하지 말라고 조언한다. 전문가들은 혹시 QR코드를 스캔하더라도 악성 앱이 설치되지 않도록 모바일 전용 보안 앱이나 스미싱 탐지 앱을 설치하고, 최신 버전을 유지하는 것이 중요하다고 강조한다. 만일 악성 앱이 이미 설치된 경우, 스마트폰을 안전 모드로 부팅한 후 기기 관리자 권한을 비활성화하면 해당 앱을 삭제할 수 있다."}
{"title": "큐싱", "subtitle": "큐싱 예방", "source": "https://www.ahnlab.com/ko/contents/content-center/34280", "text": "1. QR코드 위에 다른 QR코드가 덧입혀 있는지 확인한다: 피싱 범죄자들이 기존 QR코드와 크기가 동일한 QR코드를 붙이는 사례가 종종 발견된다. 따라서QR코드가 이중으로 겹쳐져 있지는 않은지 확인할 필요가 있다. 특히 공공기물에 부착된 QR코드는 더 조심해야 한다. 2. 앱을 설치하라는 안내 문구를 의심한다: 앱을 설치하라고 하는 안내 문구가 나온다면 큐싱 사기일 가능성이 매우 높으니 절대로 설치하면 안 된다. 링크나 QR을 통해서 스캔을 했는데 해당 문구가 나오면 바로 무시하고 설치를 중단해야 한다. 앱 설치는 공식 앱 스토어 외에는 설치하지 않는 것이 좋다. 3. 이메일을 통한 QR 인증 무시하기: 이메일을 통해 발송되는 QR코드도 무시하는 것도 큐싱 피해를 예방하는 방법이다. 모르는 번호나 이메일에 QR코드가 삽입돼 있다면 큐싱일 가능성이 높다. 4. QR코드 스캔 후 사이트 주소 확인하기: 스마트폰으로 QR코드를 스캔하면 일반적으로 연결되는 사이트 주소가 팝업 알림으로 뜬다. 이때 주소가 올바른 지 반드시 확인해야 한다. 사이트 주소 중 스펠링 하나만 바꿔 사용자에게 혼동을 줘 접속을 유도하는 사례가 빈번히 발생하고 있다. 5. 악성 앱이 설치된 경우 통신 기능 차단하기: 혹시 실수로 악성 앱을 설치했다면 즉시 휴대폰을 비행기 보드로 바꿔 통신 기능을 차단해야 한다. 피싱 범죄자들이 휴대폰을 원격으로 제어하지 못하도록 막기 위함이다. 그런 다음, 최신 버전으로 업데이트된 백신 앱으로 휴대폰을 검사하고 악성 앱을 삭제해야 한다. 만약 앱이 삭제되지 않는다면 휴대폰 데이터를 백업한 뒤 초기화하는 것이 좋다. 6. 악성코드를 탐지하는 백신 프로그램 설치: 악성코드를 탐지하는 백신 프로그램을 설치해도 큐싱 사기를 예방할 수 있다."}
{"title": "큐싱", "subtitle": "QR 코드", "source": "https://ko.wikipedia.org/wiki/QR_%EC%BD%94%EB%93%9C", "text": "QR 코드(영어: QR code, Quick Response code, 순화어: 정보무늬)는 컴퓨터로 만든 흑백 격자무늬 코드로, 정보를 나타내는 매트릭스 형식의 이차원 코드이다. 1994년에 일본 대형 자동차 부품업체인 덴소의 하라 마사히로(原昌宏)가 발명했다. QR코드는 주로 한국, 일본, 중국, 영국, 미국 등에서 많이 사용하며 명칭은 덴소 웨이브의 등록 상표 'Quick Response'에서 유래하였다. 종래에 많이 쓰던 바코드에 비해 정보 용량이 커진 바코드의 형식과 내용을 확장한 2차원 무늬다. 가로와 세로로 정보를 기록하여서 숫자 외에 문자 데이터도 저장한다. 보통 디지털카메라나 전용 스캐너로 읽어 활용한다. 국립국어원에서 QR 코드를 정보무늬로 다듬었다. 비슷한 용도로 먼저 사용한 이 차원 코드가 바코드다. 바코드는 이름 그대로 단순한 막대기 모양의 바를 이차원으로 나열한 무늬다."}
{"title": "큐싱", "subtitle": "QR 코드 역사", "source": "https://ko.wikipedia.org/wiki/QR_%EC%BD%94%EB%93%9C", "text": "1994년에 일본 토요타 자동차의 자회사인 덴소 웨이브가 토요타 자동차 전용 차 열쇠와 부품을 구별하고자 개발하면서 각 곳 부분에 이 코드를 부착하여 사용하였다. 1997년 10월에 AIM International 표준이 되었고 1998년 3월에 JEIDA 규격을 갖추었고 2000년 6월에 ISO/IEC 18004 표준이 되었다. 현재 특허권을 가진 덴소 웨이브는 이 표준화한 기술을 대상으로 한 특허권을 행사하지 않겠다고 선언하였다."}
{"title": "큐싱", "subtitle": "QR 코드 특징", "source": "https://ko.wikipedia.org/wiki/QR_%EC%BD%94%EB%93%9C", "text": "일반 바코드는 단방향 즉, 1차원으로 숫자나 문자 정보가 저장 가능한데 QR코드는 종횡으로 2차원 형태를 가져서 더 많은 정보를 담는다. 사진, 동영상, 지도, 명함 등 다양한 정보를 더 편리하게 기록한다. 버전1부터 버전40까지 다양한 버전을 지원하고 버전마다 최대로 포함하는 정보와 크기가 다르다. QR코드에는 데이터의 표현과 읽기를 수월하게 하고자 콰이어트 존, 위치 검출 패턴 (분리자 포함), 타이밍 패턴, 정렬 패턴, 포맷 정보, 버전 정보, 데이터 영역 (에러 정정 코드 영역 포함) 등의 영역을 나누었다. QR코드는 숫자 최대 7089 자, 영문자와 한글은 (코드표가 따로 존재) 최대 4296 자, 8비트 바이트 최대 2953 바이트, 한자 1817 자를 담는다."}
{"title": "큐싱", "subtitle": "QR 코드 용도", "source": "https://ko.wikipedia.org/wiki/QR_%EC%BD%94%EB%93%9C", "text": "건물 위 광고판에 있는 QR 코드를 사용자가 휴대전화 단말기로 찍어 인터넷 검색이 가능하다. 초기에는 자동차 부품 생산관리 등 상품관리에 널리 이용하여 기존 바코드를 대체하는 개념으로 많이 보급했다. 이후 일본에서 카메라폰을 이용해 확인하도록 QR코드를 다양한 매체에 인쇄했다. 사용자가 카메라로 촬영만 하면 연결한 인터넷 정보를 쉽게 검색하는 수단으로 발전하였다. 예컨대 잡지 광고에 삽입하여 카메라 폰으로 찍으면 코드를 인식하고 웹 사이트로 연결하여 더 자세한 정보를 보여준다. QR코드를 명함에 인쇄하여 개인 정보 입력을 쉽게 하는 등 다양한 활용 방법이 발달하였다. 현재 일본에서 판매하는 카메라폰 대부분이 이것을 지원하고 스마트폰에서도 이것을 지원하는 애플리케이션이 있다. 중국에서 알리 페이와 위챗 페이를 사용하여 대금 결제를 진행하는데, 노점상도 카드 단말기는 없어도 대금 결제용 QR코드는 다 제공한다. 한국에서도 서울시에서 제로페이라는 시스템을 사용한다. 구매자 임시 코드 생성 방식으로 3분만에 코드를 새로 바꾸는 구조로 결제한다."}
{"title": "큐싱", "subtitle": "바코드", "source": "https://ko.wikipedia.org/wiki/%EB%B0%94%EC%BD%94%EB%93%9C", "text": "바코드(영어: barcode)는 컴퓨터가 판독할 수 있도록 고안된 코드이다. 굵기가 다른 흑백 막대로 조합시켜 만든 코드로, 주로 제품의 포장지에 인쇄된다. 이런 전통적인 형태의 바코드를 선형(1차원) 바코드라고 한다. 그러나 이 방법으로는 많은 정보를 담기 어렵기 때문에 매트릭스(2차원) 코드가 개발되었으며, 육각형이나 사각형 배열의 점으로 이루어져 있다. 매트릭스 코드는 엄밀히 말해 바(bar) 코드가 아니지만 흔히 2차원 바코드로 일컬어진다. 현재 제품 고유 번호를 나타내는 바코드가 대부분의 제품 포장지에 인쇄되어 계산대에서 널리 활용되고 있다. RFID 기술은 칩 하나의 가격이 500원 정도이지만 바코드는 5원 수준으로 거의 돈이 들지 않기 때문에, 지속적인 연구에도 불구하고 RFID가 바코드를 대체하지는 못하고 있다."}
{"title": "큐싱", "subtitle": "바코드 역사", "source": "https://ko.wikipedia.org/wiki/%EB%B0%94%EC%BD%94%EB%93%9C", "text": "1948년, 미국 펜실베이니아주 필라델피아에 위치한 드렉셀 대학교에 다니던 버나드 실버는 푸드 페어의 사장이 체크아웃을 할 때 제품 정보를 자동으로 읽는 시스템의 연구를 학장 중 한 명에게 요청한다는 말을 우연히 들었다.실버는 그의 친구 노만 조셉 우드랜드에게 이 요청에 대해 이야기하였으며 그들은 다양한 시스템에 대해 작업을 시작했다. 이들이 작업한 시스템은 자외선 잉크를 사용하였으나 이 잉크는 너무 희미해지기 쉬웠고 가격이 비쌌다. 일부 출처에 따르면 바코드의 개념은 1969년 IBM이 달에 착지한 아폴로 우주인이 만든 발자국을 보다가 개발한 것이라고 한다. 한국에서는 1988년 하계 올림픽이 개최되었던 1988년 5월 20일에 도입되었으며 북한은 1999년 5월부터 사용 중이다."}
{"title": "큐싱", "subtitle": "바코드 원리", "source": "https://ko.wikipedia.org/wiki/%EB%B0%94%EC%BD%94%EB%93%9C", "text": "우선 세계상품코드(UPC) 등의 기준에 따라 부호화한 뒤, 바코드 스캐너와 암호 해독기로 구성된 판독기를 통해 해석되며, 이렇게 스캐너가 바코드를 읽으면 코드가 암호 해독기에 전달되며, 이것이 해독되어 알아볼 수 있는 정보로 변환된다."}
{"title": "큐싱", "subtitle": "바코드 장단점", "source": "https://ko.wikipedia.org/wiki/%EB%B0%94%EC%BD%94%EB%93%9C", "text": "상품의 종류를 나타내거나, 점포 등에서 매출정보, 도서관의 도서 관리 등 여러 가지 용도로 사용할 수 있으며, 종이 외에도 다양한 재질에 인쇄할 수 있으며, 원하는 정보에 빨리 접근할 수 있다는 장점을 가지고 있다. 또한 일부가 손상되더라도 다른 부분을 읽어서 정상적인 정보를 얻을 수 있다는 것이다. 다만, 바코드는 정보 용량에 한계가 있으므로 바코드가 붙어 있는 물건에 대한 정보를 충분히 알 수 없다는 단점을 가지고 있다. 이런 한계를 보완하기 위해 최근 2차원 바코드(다른 말로 매트릭스 코드)가 개발되었다. 2차원 바코드는 기존의 바코드와 큰 차이는 없으나, 기존의 선형 바코드에서 흑백 네모 모양을 모자이크식으로 배열하는 방식으로 종류에 따라 약 4천 바이트까지 코드화할 수 있기 때문에, 더 많은 정보를 담을 수 있게 되었다."}
{"title": "큐싱", "subtitle": "바코드 부호화", "source": "https://ko.wikipedia.org/wiki/%EB%B0%94%EC%BD%94%EB%93%9C", "text": "바코드는 부호화 방법에 따라 구분된다. 부호화 방법은 바코드가 나타내는 원문의 한 자리 숫자나 한 글자를 흑백 막대의 조합으로 표현하는 방법을 비롯해 바코드의 시작과 끝, 체크섬 등을 제공한다. 부호화 방법은 대개 크게 두 가지 기준에 의해 구분된다. 연속(continuous) 바코드와 불연속(discrete) 바코드. 연속 바코드에서 숫자나 글자를 나타내는 부호는 연속해 있으며, 이를 구분하기 위해 처음과 끝이 다르다. (예: 흑으로 시작해서 백으로 끝나거나 백으로 시작해서 흑으로 끝남.) 반면에 불연속 바코드에서 숫자나 글자를 나타내는 부호는 모두 떨어져 있으며 처음과 끝이 모두 흑색인 경우가 대부분이다. 불연속 바코드에서 한 자리 숫자나 한 글자 사이의 간격은 (떨어진 숫자나 글자들이 하나의 코드로 인식될 수만 있다면) 제한이 없다. 두 폭(two-width) 바코드와 여러 폭(many-width) 바코드. 두 폭 바코드에서 흑색 막대나 백색 막대의 너비는 좁거나 넓은 두 가지로 구분된다. 즉 넓은 막대가 좁은 막대에 비해 얼마나 넓은지는 아무런 의미가 없다. 그러나 여러 폭 바코드에서 모든 막대의 너비는 좁은 막대의 정수배이다. 여러 폭 바코드에서 좁은 막대의 너비를 모듈이라고 한다. 예를 들어, 네 폭 바코드는 1, 2, 3, 4 모듈 막대로 이루어진다."}
{"title": "큐싱", "subtitle": "QR 코드 정의", "source": "https://nordvpn.com/ko/blog/what-is-a-qr-code/", "text": "‘큐알코드’라고 읽는 QR Code는 ‘빠른 응답 코드’ (Quick Response Code)의 약자입니다. 일반적으로 정사각형 모양의 격자로 표시되는 그래픽의 2차원 바코드이며, 모바일 장치에 탑재되어 있는 리더를 통해 쉽게 QR코드 인식이 가능합니다. 이제 우리의 일상에서 QR 코드는 웹사이트, 결제 링크, 개인 연락처 정보 및 기타 새로운 데이터 형식과 같은 다양한 정보로 연결되는 징검다리 역할을 합니다. QR코드는 1994년 일본 도요타의 자회사인 덴소 웨이브가 발명했습니다. Toyota는 자동차의 다양한 부품을 고속으로 스캔하고 추적할 수 있는 방법을 찾고 있었는데요, QR 코드를 만들어 조립 라인의 병목 현상을 해결할 수 있는 솔루션을 마련할 수 있었습니다. 이제 이 기술은 전 세계가 디지털화되고 스마트 기기가 일상화되면서 우리 곁에 가까이 자리 잡게 되었습니다."}
{"title": "큐싱", "subtitle": "QR 코드 작동 방식", "source": "https://nordvpn.com/ko/blog/what-is-a-qr-code/", "text": "1. QR코드 인식: 스마트폰 카메라 또는 지정된 레이저 스캐너가 QR코드 이미지를 캡쳐합니다. 즉시 QR코드 이미지 패턴과 모듈을 분석하고 식별합니다.  2.이미지 처리: 스캔한 이미지를 정제하여 QR 코드의 흑백 패턴에서 정보를 추출합니다.  3. 디코딩 및 오류 수정: 그런 다음 QR코드 스캐너 또는 스마트폰 QR코드 스캔 소프트웨어가 오류 수정 알고리즘을 적용하여 코드의 왜곡 및 손상된 부분을 수정합니다. 마지막으로 인코딩된 정보가 바이너리 데이터에서 추출됩니다.  4. 작업 수행: 모든 정보가 디코딩되면 QR 코드는 해당 코드에 저장된 데이터에 따라 지정된 작업을 수행합니다. 예를 들어 사용자를 다양한 웹사이트로 리디렉션하거나 결제를 시작하거나 기타 디지털 작업을 수행할 수 있습니다."}
{"title": "큐싱", "subtitle": "QR 코드 구성", "source": "https://nordvpn.com/ko/blog/what-is-a-qr-code/", "text": "1. 위치 지정 패턴(Positioning Pattern): 이 큰 사각형 패턴은 QR 코드의 세 모서리에 있습니다. 내부의 작은 사각형은 QR코드 리더 또는 스마트폰 카메라의 기준점으로 설계되었습니다. 이러한 고유한 패턴은 리더가 QR 코드의 크기, 방향 및 위치를 식별하는 데 도움이 됩니다. 2. 타이밍 패턴(Timing Pattern): 타이밍 패턴은 QR코드 내에서 고유한 격자를 디자인하는 흑백 모듈이 번갈아 가며 나타나는 세로 및 가로 선으로 정의됩니다. 타이밍 패턴은 코드 영역 내에서 개별 모델의 크기와 더 중요한 정렬을 설정하는 데 도움이 됩니다. QR코드 리더기는 이러한 타이밍 패턴에 의존하여 주어진 데이터를 올바르게 읽고 해석하기 때문에 이러한 패턴은 매우 중요합니다. 3. 정렬 패턴(Alignment patterns): 대부분의 경우 정렬 패턴은 QR코드에 있는 작은 정사각형 패턴입니다. 정렬 패턴은 오류 수정을 돕고 다양한 각도에서 스캔할 때에도 정확한 QR코드 스캔을 보장하기 때문에 배치가 중요합니다. 정렬 패턴은 왼쪽 상단 위치 지정 패턴에서 대각선으로 배치되며 코드의 중앙을 향해 기울어집니다. 4. 형식 정보(Format information): 포맷 정보는 QR코드 내의 지정된 영역입니다. 이 영역은 QR코드 자체의 형식과 관련된 데이터를 저장하는 역할을 합니다. 코드 리더와 스마트폰은 디코딩 과정에서 이 정보를 활용하여 코드를 정확하게 디코딩합니다. 5. 버전 정보(Version information): 버전 정보는 QR 코드의 크기와 데이터 용량을 나타내며, 이는 코드의 가독성에 영향을 줄 수 있습니다. 보다 정확하게 말하면 버전 정보는 코드 그리드에서 열과 행의 수를 지정합니다."}
{"title": "큐싱", "subtitle": "QR 코드 역사", "source": "https://www.qrcode-tiger.com/ko/how-do-qr-codes-work", "text": "하라 마사히로는 1994년 일본 기업에 근무하던 중 QR코드를 처음 발명했다. 덴소 웨이브 회사는 제조 과정에서 예비 부품을 추적할 수 있는 방법을 찾고 있었고, QR 코드는 기존 바코드보다 더 많은 정보를 저장할 수 있는 솔루션을 제공했습니다. 처음에는 QR 코드가 일본에서 재고 관리, 물류 등 산업 분야에 주로 사용되었습니다. 그러나 기존 바코드보다 더 많은 정보를 저장할 수 있고 스마트폰을 사용해 쉽게 스캔할 수 있어 곧 광고 및 마케팅으로 유명해졌습니다. 오늘날 QR 코드 소프트웨어를 사용하면 QR 코드를 쉽게 생성할 수 있습니다. 이러한 플랫폼을 통해 사용자는 다양한 QR 코드 솔루션을 선택하고 맞춤화 옵션을 제공할 수 있습니다. 2000년대 초반에 스마트폰이 일반화되면서 QR 코드는 미국과 유럽 일부 지역에서 인기를 얻었습니다. 마케팅 담당자들은 또한 소비자에게 제품 정보나 특별 제안을 안내하기 위해 광고 캠페인에 QR 코드를 사용하기 시작했습니다."}
{"title": "큐싱", "subtitle": "QR 코드 역사", "source": "https://www.qrcode-tiger.com/ko/how-do-qr-codes-work", "text": "최근에는 QR코드가 더욱 보편화되었습니다. 레스토랑에서는 코로나19 팬데믹 기간 동안 안전한 영업을 위한 CDC(질병통제예방센터) 지침을 준수하기 위해 인쇄된 메뉴를 QR 코드로 교체했습니다. 이제 산업계에서는 QR코드 기술을 다양한 방식으로 활용하고 있습니다. QR 코드는 사람들을 중요한 데이터로 즉시 이동시켜 사람들이 빠른 삶의 속도를 따라갈 수 있도록 도와줍니다. 이는 또한 기업이 고객에게 정보와 판촉 행사에 쉽게 액세스할 수 있도록 하는 귀중한 도구이기도 합니다. 스마트폰 사용이 증가하고 터치리스 솔루션에 대한 필요성이 증가함에 따라 QR 코드는 앞으로 더욱 가치가 높아질 것입니다."}
{"title": "큐싱", "subtitle": "큐싱 피해 사례", "source": "https://www.mk.co.kr/news/society/11043900", "text": "자영업자 박 모씨는 최근 소상공인을 상대로 낮은 이자로 대출해주겠다는 이메일을 받았다. 마침 대출을 알아보고 있던 그는 \"자세한 내용을 확인하려면 QR코드 촬영 후 전자금융사기 예방 서비스 앱을 설치하라\"는 문구를 보고 의심 없이 카메라 앱으로 QR코드를 비춰 애플리케이션(앱)을 다운받았다. 하지만 해당 앱은 개인정보를 빼내가는 해킹 앱이었고 박씨가 입력한 공인인증서 비밀번호 등 금융정보가 고스란히 해커의 손으로 넘어갔다. 며칠 뒤 박씨의 통장에서는 1000만원이 빠져나갔다."}
{"title": "큐싱", "subtitle": "큐싱 피해 사례", "source": "https://www.mk.co.kr/news/society/11043900", "text": "큐싱 사기는 직접 스캔하기 전까지 정상 QR코드 여부는 물론 QR코드 발행자가 누군지 알 수 없다는 점을 노린다. 그러다 보니 수사기관이나 금융기관을 사칭해 돈을 빼가는 보이스피싱, 문자메시지에 악성 사이트 주소를 첨부하는 스미싱과 비교해 사기임을 구분하기가 더 어려워졌다는 지적이다. QR코드는 스마트폰 보급 확대로 활용도가 높아졌고 별도 스캐너 없이 카메라 앱으로 쉽게 접속이 가능하다. 흑백 격자무늬 패턴에 사진뿐 아니라 동영상, 지도, 명함 등 방대한 정보를 담을 수 있어 활용도가 높다는 것이 특징이다. 특히 코로나19 팬데믹 시기를 거치며 출입기록 관리 등 QR코드 사용이 잦아지면서 이를 악용한 사기가 더욱 기승을 부리고 있다. 범죄 수법은 갈수록 다양해지고 있다. 전동킥보드를 이용하기 위한 QR코드 위에 가짜 QR코드를 덧씌우는가 하면 고객 사은 이벤트로 위장한 QR코드를 넣은 홍보 전단을 뿌리는 수법도 등장했다. 주차된 차에 '불법 주차 경고장' 딱지를 붙여놓고 QR코드를 통해 벌금을 납부하라고 요구하는 사기까지 등장했다. 보안업체 SK쉴더스에 따르면 지난해 온라인 보안 공격 가운데 17%가 큐싱 방식으로 이뤄졌다. 전년 대비 60%나 늘어난 수치다."}
{"title": "큐싱", "subtitle": "해외 큐싱 사례", "source": "https://www.mk.co.kr/news/society/11043900", "text": "해외에서도 큐싱 사기에 대한 경각심이 커지고 있다. 올해 초에는 중국에서 정부를 사칭한 '임금 보조금 지급' 안내 메일이 유포됐다. 이 또한 큐싱 사기였다. 보조금을 받으려면 메일에 첨부된 QR코드를 스캔한 뒤 중국 정부 사이트로 위장된 가짜 사이트에 카드 번호 등 개인정보를 입력하도록 유도하는 수법을 썼다. 미국 연방거래위원회(FTC)는 지난해 12월 홈페이지에 QR코드 스캔 과정에서 개인정보 유출 피해가 발생할 수 있다는 소비자 대상 경고 메시지를 올렸다. FTC는 유료 주차장에 게시된 QR코드를 해킹 코드가 담긴 QR로 교체하거나 문자메시지 또는 이메일에 QR코드를 첨부해 이를 스캔하도록 유도한다고 밝힌 바 있다."}
{"title": "큐싱", "subtitle": "피싱의 종류", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "피싱의 종류에는 이메일 피싱(E-mail Phishing), 보이스피싱(Voice Phishing), 스미싱(Smishing), 큐싱(Qshing) 등이 있으며, 대표적인 피싱 수단으로 스팸(Spam)이 있음. 이메일 피싱(E-mail Phishing): 공격자는 은행이나 온라인 서비스 등 합법적인 출처에서 보낸 것처럼 보이는 사기성 이메일 전송. 보이스피싱(Voice Phishing): 전화를 통해 실행되는 피싱으로 통화상으로 긴박감을 조성하여 피해자의 실수를 유도. 스미싱(Smishing): SMS를 전송해 수신자를 속여 개인정보 등의 민감한 정보를 탈취. 큐싱(Qshing): QR코드를 스캔하면 악성 웹사이트로 연결하거나, 유해한 콘텐츠를 다운로드하도록 유도하는 방식"}
{"title": "큐싱", "subtitle": "피싱 정의", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "피싱(Phishing)은 대표적인 디지털 민생범죄 중 하나로, 메시지 또는 이메일 등을 악용해 사용자 또는 기업의 정보를 탈취하여 금전적 이득 등을 편취하는 행위. 현재 피싱은 우리나라뿐만 아니라 전 세계적으로 발생하고 있는 범죄로, AI 보안 기업 Bolster에 따르면 ’20년 이후 피싱 활동은 94% 이상 증가한 것으로 조사·분석됨."}
{"title": "큐싱", "subtitle": "국외 피싱 범죄 대응", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "국외 주요국은 피싱 등 다양한 디지털 민생범죄로부터 국민을 보호하고, 범죄 예방 및 대응 전담 조직을 구성하여 범죄를 규제하고 관련 정책을 수립·시행. (미국) 연방거래위원회(FTC), 연방통신위원회(FCC), 사이버보안 인프라 보안청(CISA)을 중심으로 피싱 등 범죄 대응 가이드라인 개발, 범죄 처벌 규정 제·개정, 피해자 보호 방안 등 추진. (EU) 유럽연합 집행위원회(EC)를 통해 피싱 등과 같은 사기 행위로부터 소비자를 보호하기 위해 스팸 방지법을 제정 및 개정하고 있으며, GDPR, eIDAS 등을 통해서도 디지털 범죄 규제. (영국) 온라인 사기 전담 조직을 설치함으로써 피싱을 비롯하여, 스미싱 등 범죄 문제에 대해 정부가 적극적으로 해결하고, 피해자를 보호하고자 노력하고 있음.  (독일) 연방정보보안청(BSI)을 중심으로 연방금융감독청(BaFi) 등이 협력하여 피싱 예방적 보안 조치 방법, 피해 사례 등의 정보를 공유하고 있으며, 금융사기 예방 등은 BaFi에서 제공. (일본) 경찰청을 중심으로 국민 대상 피싱 예방·대응책을 교육·홍보하여 범죄에 대한 인식을 제고하는 한편 피싱 대책 협의회를 통해 민간 분야의 피싱 대응에 필요한 활동 추진. (중국) ‘정보통신망 범죄 활동 방조죄’를 신설하는 형법을 '15년에 개정하고, '22년에는 전기통신금융사기 방지법을 제정하여 피싱 등을 범죄로써 강력하게 규제 중"}
{"title": "큐싱", "subtitle": "국내 피싱 범죄 대응", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "우리나라는 국무조정실을 중심으로 보이스피싱 등 범죄 대응 및 근절하기 위해 범정부 전담팀을 운영하는 동시에 관련 정책을 수립·시행 중. 국무조정실은 과학기술정보통신부, 방송통신위원회, 경찰청 등과 함께 2021년 ‘전화금융사기 대응 범정부 전담팀’을 발족하였으며, 통신·금융 대책 마련 및 보이스피싱 범죄에 엄정 대응. 또한, 과학기술정보통신부와 방송통신위원회에서는 통신 분야 보이스피싱 대응을 위한 대책을 발굴하여 추진하고 있으며, 민·관 협력 및 AI 등 신기술을 활용한 범죄 차단 기술 개발 중"}
{"title": "큐싱", "subtitle": "이메일 피싱 (E-mail Phishing)", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "공격자는 은행이나 온라인 서비스 등 합법적인 출처에서 보낸 것처럼 보이는 사기성 이메일 전송. 예시: 로그인 자격 증명이나 개인정보를 도용하도록 설계된 가짜 웹사이트로 연결되는 링크가 포함. 은행에서 보낸 이메일로 가장하여 메시지 내 링크를 클릭하여 계정 상세 정보를 확인."}
{"title": "큐싱", "subtitle": "보이스피싱 (Voice Phishing)", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "SMS를 전송해 수신자를 속여 개인정보 등의 민감한 정보를 탈취. 예시: 공격자는 은행이나 서비스 제공업체와 같이 신뢰할 수 있는 출처에서 보낸 것처럼 보이는 문자를 전송. 전송 메시지에는 문자에는 개인정보를 훔치거나 멀웨어를 설치하도록 설계된 사기성 웹사이트로의 연결 링크 포함. 계정 유출 등의 긴박감을 조성하여 즉각적인 조치를 취하도록 유도."}
{"title": "큐싱", "subtitle": "스미싱 (Smishing)", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "SMS를 전송해 수신자를 속여 개인정보 등의 민감한 정보를 탈취. 예시: 공격자는 은행이나 서비스 제공업체와 같이 신뢰할 수 있는 출처에서 보낸 것처럼 보이는 문자를 전송. 전송 메시지에는 문자에는 개인정보를 훔치거나 멀웨어를 설치하도록 설계된 사기성 웹사이트로의 연결 링크 포함. 계정 유출 등의 긴박감을 조성하여 즉각적인 조치를 취하도록 유도."}
{"title": "큐싱", "subtitle": "큐싱 (Qshing)", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "QR코드를 스캔하면 악성 웹사이트로 연결하거나, 유해한 콘텐츠를 다운로드하도록 유도하는 방식. 예시: 전동킥보드 이용을 위한 QR코드 위에 가짜 QR코드를 덧씌워 연결 유도 후 개인정보 탈취. 고객 사은 이벤트로 위장한 QR코드 홍보 전단에 삽입하여 연결 유도. 주차된 차에 '불법 주차 경고장' 딱지를 붙여놓고 QR코드를 통해 벌금을 납부하라고 요구하는 것처럼 가장하여 연결 유도."}
{"title": "큐싱", "subtitle": "스팸", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "피싱과 유사한 스팸(Spam)이 있으나, 스팸은 일반적으로 수신을 원하지 않는 이용자에게 대량의 메일·문자 메시지·SNS 메시지(DM) 등을 전송하는 행위로 주로 광고·홍보 목적. 본래 스팸은 저렴한 비용으로 불특정 다수의 이용자에게 대량으로 기업 또는 제품, 서비스를 홍보하는 수단으로 사용되었으나 최근에는 스팸을 통해서도 금전을 목적으로 피싱 사이트 주소 또는 악성코드가 포함된 URL 등을 첨부하는 등의 피싱 행위의 수단으로 악용되는 중. 스팸이 피싱에 악용됨으로 인해 심각한 경제적 피해를 유발하는 등 민생범죄로 사회적 문제가 되고 있음."}
{"title": "큐싱", "subtitle": "피싱", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "AI 보안 기업 Bolster에 따르면 2020년 이후 전 세계적으로 피싱 활동은 94% 이상 증가한 가운데 2023년은 1,343만 개 이상의 사기 사이트가 관측돼 전년 대비 27.8% 증가. 가장 활발한 피싱이 관찰되었던 2023년 8월에는 220만 개의 사기 사이트가 탐지. 클라우드 기반 코드 제공 기업인 Spacelift의 자체 조사에 따르면, ’23년 한 해 94%에 달하는 조직이 피싱 공격을 경험했으며, 성공한 피싱 공격의 74%는 사람의 실수에 기인. 사용자가 피싱 이메일에 속아 넘어가는 평균 시간은 1분 미만. 이메일을 열어본 후 악성 링크를 클릭하는 데 걸리는 시간의 중앙값은 21초이며, 공격자가 요청하는 정보를 제공하는 데 걸리는 시간은 28초에 불과. 피싱 공격을 통한 데이터 침해의 동기는 재무적인 이유가 전체 공격이 95%를 차지."}
{"title": "큐싱", "subtitle": "디지털 범죄 관련 법령 및 제도 - 피해 예방·처벌", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "피싱은 현행 형법상 “권한 없는 자에 의한 정보처리로 재산상의 이익을 취득하는 범죄행위”로 규정하고 있으며, “컴퓨터사용사기죄” 적용이 가능. 컴퓨터 등 정보처리장치에 허위의 정보 또는 부정한 명령을 입력하거나 권한 없이 정보를 입력·변경해서 정보처리를 하게 함으로써 재산상의 이익을 취득하거나 제3자에게 취득하게 해서는 안 됨(형법 제347조의265)) - 이를 위반할 경우, 10년 이하의 징역 또는 2천만 원 이하의 벌금에 처해질 수 있음. 누구든지 다른 사람을 속여 재산상 이익을 취하거나 폭언‧협박‧희롱 등의 위해를 입힐 목적으로 전화(문자메시지를 포함)를 하면서 송신인의 전화번호를 변작하는 등 거짓으로 표시하여서는 안 됨(전기통신사업법 제84조의 2) - 이를 위반할 경우, 3년 이하의 징역 또는 1억 원 이하의 벌금에 처해질 수 있음"}
{"title": "큐싱", "subtitle": "디지털 범죄 관련 법령 및 제도 - 피해 구제", "source": "https://www.kisa.or.kr/post/fileDownload?menuSeq=20301&postSeq=29&attachSeq=1&lang_type=KO", "text": "(이용자계좌에 대한 임시조치) 금융회사는 자체 점검을 통하여 이용자의 계좌가 전기통신금융 사기의 피해를 초래할 수 있는 의심 거래 계좌에 대해 해당 이용자 계좌의 이체, 송금 또는 출금을 지연시키거나 일시 정지하는 조치를 취해야 함(통신사기피해환급법 제2조의5, ’24.2 개정67)) - 금융위원회는 ’24.2월 개정된 「통신사기피해환급법」에 따른 시행령 개정을 ’24.8월까지 완료할 계획으로, 이에 따라 간편 송금 시에도 신속한 지급정지가 가능하고, 통장 협박 피해자에 대한 구제도 신속해질 것으로 예상. (피해 환급금 지급) 전기통신금융사기를 통해 재산상의 피해를 입은 피해자는 피해금을 송금ㆍ이체한 계좌를 관리하거나, 사기 이용계좌를 관리하는 금융회사에 대하여 사기이용계좌의 지급 정지 등 전기통신금융사기의 피해구제를 신청할 수 있음(통신사기피해환급법 제3조의168)- 금융감독원은 채권이 소멸된 날부터 14일 이내에 피해환급금을 지급받을 자 및 그 금액을 결정하여 그 내역을 피해구제를 신청한 피해자 및 금융회사에 통지하여야 하고, 통지를 받은 금융회사는 지체 없이 피해환급금을 피해자에게 지급하여야 함(동법 제10조제1항). (소액결제 피해) 통신서비스 이용자는 통신과금 서비스가 자신의 의사에 반하여 제공되었음을 안 때에는 해당 통신사업자에게 이에 대한 정정을 요구할 수 있음(정보통신망법 제58조4의③) - 통신과금서비스제공자는 이용자의 정정요구가 이유 있을 경우 판매자에 대한 이용 대금의 지급을 유보하고 그 정정 요구를 받은 날부터 2주 이내에 처리 결과를 알려주어야 함 - 즉, 통신요금으로 과금된 소액결제금에 대해 이용자가 이의를 제기할 시 통신사가 아닌 결제 대행사와 콘텐츠 제공사가 협의하여 결제금 청구 취소 여부를 결정해야 함."}
{"title": "큐싱", "subtitle": "Quishing 정의 (QR 코드 피싱)", "source": "https://www.cyber.gc.ca/en/guidance/security-considerations-qr-codes-itsap00141", "text": "Quishing은 공격자가 피싱 이메일에 QR 코드를 삽입하거나, 사용자를 피싱 웹사이트로 유도하여 개인정보를 입력하도록 하는 방식의 공격이다."}
{"title": "큐싱", "subtitle": "이메일을 이용한 QR 코드 피싱", "source": "https://www.cyber.gc.ca/en/guidance/dont-take-bait-recognize-and-avoid-phishing-attacks", "text": "Quishing은 스캐머가 이메일을 통해 QR 코드를 전송하고, 이를 스캔한 사용자가 악성 웹사이트로 이동하게 만드는 피싱 공격 방식이다."}
{"title": "큐싱", "subtitle": "Quishing 개념과 최근 증가 추세", "source": "https://www.ualberta.ca/en/information-services-and-technology/news/ciso-news/qr-codes-quishing-risks-and-tips-to-stay-safe.html", "text": "2023년 중반부터 QR 코드를 활용한 피싱 캠페인(Quishing)이 증가하고 있다. 일반적으로 긴급한 메시지와 함께 QR 코드가 포함된 이메일이 전송되며, 사용자가 이를 스캔하면 악성 웹사이트로 연결된다."}
{"title": "큐싱", "subtitle": "Quishing 공격 방식 요약", "source": "https://www.ualberta.ca/en/information-services-and-technology/news/ciso-news/qr-codes-quishing-risks-and-tips-to-stay-safe.html", "text": "일반적인 Quishing 공격은 사용자의 브라우저에서 악성 웹사이트를 열고, 그 과정에서 악성코드를 설치하거나 로그인 정보, 카드번호 등 민감한 정보를 탈취한다."}
{"title": "큐싱", "subtitle": "Quishing에 대한 Norton의 정의", "source": "https://us.norton.com/blog/online-scams/quishing", "text": "Quishing은 사이버 범죄자가 QR 코드를 활용해 악성코드를 유포하거나 개인정보를 탈취하거나 사기 행위를 하는 사이버 공격이다."}
{"title": "큐싱", "subtitle": "헬스케어 부문에서의 Quishing 위협", "source": "https://www.hhs.gov/sites/default/files/qr-codes-and-phishing-as-a-threat-to-the-hph-white-paper.pdf", "text": "QR 코드는 헬스케어 분야에서 편의성을 위해 널리 사용되지만, 이로 인해 Quishing(큐싱) 공격에 노출될 수 있다. 공격자는 QR 코드를 통해 가짜 로그인 페이지로 유도하거나, 환자 정보를 탈취하는 웹사이트로 연결하여 민감한 정보를 수집한다. 의료기관은 이메일 또는 문서에 삽입된 QR 코드에 대해 사용자 인식 제고 및 기술적 필터링이 필요하다."}
{"title": "큐싱", "subtitle": "QR코드를 이용한 피싱 실험 연구", "source": "https://www.ndss-symposium.org/wp-content/uploads/usec2024-50-paper.pdf", "text": "본 연구는 QR 코드 기반 피싱 공격이 실제 사용자에게 어떻게 작용하는지 실험을 통해 분석하였다. 연구진은 공공장소에 가짜 QR 코드를 설치하고 사용자가 얼마나 쉽게 속는지를 조사했으며, 전체 참여자의 약 20%가 아무런 의심 없이 QR을 스캔하고 링크를 클릭했다. 이는 Quishing이 실제 상황에서도 매우 효과적인 공격 수단이 될 수 있음을 보여준다."}
{"title": "큐싱", "subtitle": "QR코드를 이용한 피싱 실험 연구", "source": "https://www.ndss-symposium.org/wp-content/uploads/usec2024-50-paper.pdf", "text": "본 연구는 QR 코드 기반 피싱 공격이 실제 사용자에게 어떻게 작용하는지 실험을 통해 분석하였다. 연구진은 공공장소에 가짜 QR 코드를 설치하고 사용자가 얼마나 쉽게 속는지를 조사했으며, 전체 참여자의 약 20%가 아무런 의심 없이 QR을 스캔하고 링크를 클릭했다. 이는 Quishing이 실제 상황에서도 매우 효과적인 공격 수단이 될 수 있음을 보여준다."}
{"title": "큐싱", "subtitle": "헬스케어 산업에서의 Quishing 위협", "source": "https://www.hhs.gov/sites/default/files/qr-codes-and-phishing-as-a-threat-to-the-hph-white-paper.pdf", "text": "의료기관은 환자 편의를 위해 QR 코드를 널리 사용하지만, 공격자는 이를 악용해 가짜 포털, 설문 링크 등으로 환자 정보를 수집할 수 있다. HHS 백서는 Quishing이 피싱 공격의 시작점이 되어 결국 랜섬웨어 등 2차 피해로 이어질 수 있다고 경고한다."}
{"title": "큐싱", "subtitle": "머신러닝 기반 Quishing 탐지 프레임워크", "source": "https://arxiv.org/abs/2505.03451", "text": "이 연구는 URL이나 웹 분석 없이 QR 코드 이미지 자체의 패턴만으로 악성 여부를 판단하는 머신러닝 모델을 제안한다. XGBoost 모델을 통해 AUC 0.91 이상의 성능을 보였으며, Quishing 탐지에 있어 사전 차단의 가능성을 제시했다."}
{"title": "큐싱", "subtitle": "QR 기반 Browser-in-The-Browser(BiTB) 공격", "source": "https://arxiv.org/abs/2505.18944", "text": "이 논문은 QR코드를 통해 BiTB 팝업창을 띄워 사용자가 진짜 사이트로 착각하게 만드는 고도화된 Quishing 기술을 소개한다. 특히 LLM으로 만든 피싱 문구와 결합하여 방어가 매우 어렵다는 점을 강조한다."}
{"title": "큐싱", "subtitle": "Quishing 효과는 일반 피싱과 유사", "source": "https://arxiv.org/abs/2505.12104", "text": "71,000건의 공격 시뮬레이션 결과, QR코드를 통한 피싱은 클릭형 링크 기반 피싱과 비슷한 성공률을 보였다. 특히 Quishing은 모바일 장치에서 탐지가 어려워 보안 필터 우회에 효과적이다."}
{"title": "큐싱", "subtitle": "Quishing 2.0: 다단계 리디렉션 공격", "source": "https://perception-point.io/blog/quishing-evolves-two-step-attacks-sharepoint-abuse/", "text": "PDF 첨부에 포함된 QR 코드가 me-qr.com → SharePoint → 악성 페이지로 리디렉션되는 2단계 공격 사례가 증가하고 있다. 이 방식은 이메일 보안 필터를 우회하고, 사용자의 의심을 줄이는 데 효과적이다."}
{"title": "큐싱", "subtitle": "QR 피싱 통계 및 고위험군", "source": "https://keepnetlabs.com/blog/understanding-quishing", "text": "2025년 기준 전체 계정 탈취 시도 중 Quishing이 12.5%를 차지했고, 임원 대상 Quishing 공격 비율이 일반 직원보다 42배 높았다. 공격자는 업무 긴급성을 악용해 QR 코드 피싱 성공률을 높이고 있다."}
{"title": "큐싱", "subtitle": "주차장 QR 피싱 실제 피해 사례", "source": "https://www.theguardian.com/money/2025/may/25/qr-code-scam-what-is-quishing-drivers-app-phone-parking-payment", "text": "영국에서는 가짜 주차 결제 QR 코드를 통해 1,300건 이상의 사기 피해가 발생했으며, 피해자 중 일부는 1만 파운드(약 1,700만 원) 이상을 탈취당했다. 공격자는 진짜 결제 안내 위에 QR 스티커를 부착해 사용자를 속였다."}
{"title": "큐싱", "subtitle": "Signal 앱을 노린 QR 피싱 대응 사례", "source": "https://www.wired.com/story/russia-signal-qr-code-phishing-attack", "text": "러시아 해커 그룹은 Signal 앱 로그인 절차에 QR 코드를 악용해 공격을 시도했다. 이에 대해 Signal은 장치 인증 구조를 강화하고, 사용자 확인 과정을 추가하여 QR 기반 인증 피싱에 대응했다."}
{"title": "큐싱", "subtitle": "도메인 보안 현황 (CSC Domain Security Report 2020)", "source": "https://www.cscdbs.com/assets/pdfs/Domain-Security-Report-2020-June_EN.pdf", "text": "Forbes Global 2000 대상 조사에서 83%가 도메인 하이재킹 방지 장치(Registry Lock)를 미도입했으며, DNSSEC 도입은 단 3%, CAA 레코드 설정은 4%에 불과했다. 금융권은 더욱 취약해 FDIC 등록 은행의 1%만 Registry Lock 사용."}
{"title": "큐싱", "subtitle": "단축 URL 서비스의 보안·프라이버시 위험 (IEEE 연구)", "source": "https://www.ieee-security.org/TC/W2SP/2011/papers/urlShortening.pdf", "text": "단축 URL은 원본 주소를 숨기고, 열거 공격(whacking), 추적 쿠키, SSLStrip 우회, 검색엔진 인덱싱 유출 등을 통해 악용될 수 있다. 트위터 인기 단축서비스를 분석한 결과, 스팸·피싱 메시지에 7년간 등장."}
{"title": "큐싱", "subtitle": "단축 URL 기반 피싱 vs 악성코드 비교 (APWG 연구, 2018)", "source": "https://docs.apwg.org/ecrimeresearch/2018/5351273.pdf", "text": "7,000개 단축 URL 분석 결과, 피싱 링크는 클릭률이 더 높지만 수명이 짧으며, 멀웨어 링크는 장기간 활성 상태 유지. 단축 URL은 리디렉션 전략에도 활용됨."}
{"title": "큐싱", "subtitle": "WHOIS 프록시 오남용 현황 (ICANN GNSO 연구)", "source": "https://gnso.icann.org/sites/default/files/filefield_12327/whois-proxy-abuse-studies-28apr10-en.pdf", "text": "조사 대상 도메인의 15–25%가 프라이버시 프록시 서비스 사용. 그중 약 38%가 피싱 연루 웹사이트로 확인되어 WHOIS 데이터의 투명성 및 대응 지연 문제 대두."}
{"title": "큐싱", "subtitle": "WHOIS와 RDAP 정보 일관성 분석 (arXiv, 2024)", "source": "https://arxiv.org/pdf/2406.02046.pdf", "text": "1.64억 도메인 비교 결과, 7.6%에서 IANA ID, 생성일, 네임서버 등 주요 자료 불일치 발견. 이는 자동화 보안 시스템의 의사결정을 방해할 수 있음."}
{"title": "큐싱", "subtitle": "피싱 도메인 등록/종료 패턴 분석 (arXiv, 2025)", "source": "https://arxiv.org/pdf/2502.09549.pdf", "text": "약 69만 피싱 도메인 중 66%가 악의적 등록이며, 평균 탐지 지연 16일, 종료 지연 11.5일. .top, .shop 등 신규 gTLD 선호 및 Fast-clux(플럭스) 전략 활용."}
{"title": "큐싱", "subtitle": "WHOIS 기반 피싱 도메인 차단 사례 (APWG 메모)", "source": "https://docs.apwg.org/reports/APWG_MemoOnDomainWhoisTake-Downs.pdf", "text": "APWG 분석에 따르면 매일 평균 1,000건 이상의 피싱 도메인이 WHOIS 정보 기반 분석으로 차단되며, WHOIS는 대응의 핵심 데이터 수단임."}
{"title": "큐싱", "subtitle": "단축 URL 보안 솔루션 프레임워크 (Scitepress 논문)", "source": "https://www.scitepress.org/Papers/2011/35798/35798.pdf", "text": "단축 URL에 대한 동적·정적 분석을 결합해 최종 목적지를 사전 확인하는 보안 솔루션 제안. QR 코드 기반 공격을 예방하려면 URL 단축 후 분석 체계가 반드시 포함돼야 함."}
{"title": "큐싱", "subtitle": "QR 코드 및 AI 기반 피싱 증가 분석 (Recorded Future, 2024)", "source": "https://go.recordedfuture.com/hubfs/reports/cta-2024-0718.pdf", "text": "Recorded Future 보고서에 따르면, 2023년 하반기부터 Quishing(QR 코드 피싱)이 대폭 증가했으며, PhaaS 플랫폼들까지 이를 악용하고 있다. 임원들은 일반 직원보다 42배 더 많은 QR 피싱 공격을 받았고, 약 27%의 악성 QR 코드가 2차 인증(MFA) 메시지로 위장됐다."}
{"title": "큐싱", "subtitle": "헬스케어 분야 QR 코드 피싱 대응 가이드 (HHS 백서)", "source": "https://www.hhs.gov/sites/default/files/qr-codes-and-phishing-as-a-threat-to-the-hph-white-paper.pdf", "text": "HHS HC3는 Quishing을 통한 랜섬웨어 도입이나 데이터 유출 가능성을 경고하며, MFA 사용, 보안 소프트웨어 업데이트, 알 수 없는 QR 코드 스캔 금지, 발신자 확인 등을 권장한다."}
{"title": "큐싱", "subtitle": "실생활 환경에서의 QR 피싱 연구 (NDSS 2024)", "source": "https://www.ndss-symposium.org/wp-content/uploads/usec2024-50-paper.pdf", "text": "카페, 도서관 등 자연스러운 환경에서 실시된 실험 결과, QR 코드의 URL 앞부분에 ‘phish’라는 단어가 있을 때만 44%의 사용자가 스캔을 중단했으며, 그렇지 않을 경우 92%가 스캔을 진행했다. 사용자 스캐너 앱 UI 개선 필요성도 함께 제언됨."}
{"title": "큐싱", "subtitle": "Quishing 2.0: 다단계 SharePoint 리디렉션 공격 (Perception Point, 2024)", "source": "https://perception-point.io/blog/quishing-evolves-two-step-attacks-sharepoint-abuse/", "text": "공격자는 PDF 내 삽입된 QR 코드로 me‑qr.com → SharePoint → 악성 페이지로 리디렉트하는 다단계 공격을 수행, 기존 이메일 보안 필터를 우회하며 신뢰도를 유지한다."}
{"title": "큐싱", "subtitle": "실세계 QR 피싱 캠페인 연구 (Hooked: Real‑World Study, 2024)", "source": "https://arxiv.org/pdf/2407.16230v1", "text": "Garching 연구 캠퍼스에서 일반형/프로페셔널형 QR 포스터 두 가지를 배포한 결과, 프로페셔널형이 더 많이 스캔되었으며, 기술 숙련도가 낮은 사용자는 더 쉽게 속았다. 이 연구는 QR 피싱 훈련 가이드 및 UI 개선 연구에도 기여했다."}
{"title": "큐싱", "subtitle": "QR‑BiTB 공격: 브라우저 내 가짜 브라우저 (arXiv, 2025)", "source": "https://arxiv.org/abs/2505.18944", "text": "BiTB(Browser-in‑The‑Browser)와 Quishing이 결합된 신종 공격으로, LLM(예: Gemini)을 활용해 팝업형 가짜 브라우저를 띄워 인증 정보를 탈취하도록 유도한다."}
{"title": "큐싱", "subtitle": "머신러닝 기반 Quishing 탐지 (arXiv, 2025)", "source": "https://arxiv.org/abs/2505.03451", "text": "QR 코드 이미지 구조와 픽셀 패턴만으로 XGBoost 모델(AUC 0.9133)을 활용해 악성 여부를 판별. URL 분석 없이도 탐지가 가능하며, Quishing 예방에 기여할 수 있음."}
{"title": "큐싱", "subtitle": "실사용 QR 피싱 캠페인 분석 (Sophos, 2024)", "source": "https://news.sophos.com/en-us/2024/10/16/quishing/", "text": "Sophos X‑Ops 조사에 따르면, PDF 이메일 첨부 속 QR 코드로 인해 모바일 사용자들이 회사 보안망 우회, 자격 증명을 노출하는 피해 사례가 보고되었다. QR는 URL 프리뷰 시간이 짧아 사용자의 주의를 방해함."}
{"title": "큐싱", "subtitle": "Quishing 정의 및 방어 (Proofpoint, 2025)", "source": "https://www.proofpoint.com/us/threat-reference/quishing", "text": "Proofpoint에 따르면 Quishing은 전통적 피싱 필터 우회를 위해 QR 코드를 악용하며, 사용자를 사기 사이트 유도 또는 악성 파일 다운로드하도록 하는 공격이라고 정의된다. 기업은 이 공격을 대비해 교육 강화 및 보안 정책 보완이 필요하다고 권고함."}
{"title": "URL", "subtitle": "프로토콜 정의", "source": "https://aws.amazon.com/ko/blogs/korea/what-happens-when-you-type-a-url-into-your-browser/", "text": "통신 규약 (Protocol) https://는 통신 프로토콜입니다. HTTPS는 Hypertext Transfer Protocol Secure를 나타냅니다. 이 스키마는 브라우저에 전송 계층 보안(TLS)을 사용하여 서버에 연결하도록 지시합니다. TLS는 인터넷을 통한 통신을 보호하는 암호화 프로토콜입니다. HTTPS를 사용하면 암호나 신용 카드 정보와 같이 브라우저와 서버 간에 교환되는 데이터가 암호화됩니다. ftp://, mailto:// 또는 file://도 보셨을 수 있습니다. 이는 브라우저가 처리하는 방법을 알고 있는 다른 프로토콜입니다."}
{"title": "URL", "subtitle": "경로 정의", "source": "https://aws.amazon.com/ko/blogs/korea/what-happens-when-you-type-a-url-into-your-browser/", "text": "경로 (Path) URL에 리소스에 대한 추가 경로가 있는 경우가 있습니다. 예를 들어, 이 URL https://channy.creation.net/blog/hello-world의 경우 blog는 서버에서 요청된 리소스인 hello-world로 이어지는 경로입니다. 이를 컴퓨터에 있는 파일의 디렉터리 구조나 기타 디렉터리처럼 생각할 수 있습니다. 정적 HTML, CSS, Javascript, 이미지 파일, 동적으로 생성된 콘텐츠에 상관없이 리소스를 구성하는 방법입니다."}
{"title": "URL", "subtitle": "리소스 정의", "source": "https://aws.amazon.com/ko/blogs/korea/what-happens-when-you-type-a-url-into-your-browser/", "text": "리소스 (Resource) 이 URL을 브라우저에 입력하면 hello-world는 보려는 웹 사이트의 리소스 이름입니다. 때로 .html과 같은 파일 확장자로 볼 수 있는데, 이는 HTML 콘텐츠가 있는 서버의 정적 파일임을 나타냅니다. 이 URL과 같은 확장자가 없으면 일반적으로 서버가 이 콘텐츠를 생성했음을 나타냅니다. 예를 들어 뉴스 사이트는 사용자 지정, 최신 및 지역 뉴스 콘텐츠를 표시하며, 이는 사용자 또는 요청의 출처를 알 때만 수행할 수 있습니다."}
{"title": "URL", "subtitle": "URL 접속 과정", "source": "https://aws.amazon.com/ko/blogs/korea/what-happens-when-you-type-a-url-into-your-browser/", "text": "웹 브라우저에서 URL을 입력했을 때, 일어나는 일들을 간단하게 살펴보았습니다. 1. 웹 브라우저에 URL을 입력하고 Enter 키를 누릅니다. 2. 웹 브라우저가 도메인의 IP 주소를 조회합니다. (먼저 캐시를 찾고, 그 다음 DNS를 검색합니다.) 3. 웹 브라우저가 찾은 IP 주소를 기반으로 서버와의 TCP 연결을 시작합니다. 4. 웹 브라우저가 HTTP 요청을 서버로 전송합니다. (필요한 경우, HTTPS 보안 통신이 진행됩니다.) 5. 웹 서버가 요청을 처리하고 응답을 다시 웹 브라우저로 전송합니다. 6. 웹 브라우저가 전송 받은 콘텐츠를 렌더링합니다."}
{"title": "URL", "subtitle": "DNS 정의", "source": "https://aws.amazon.com/ko/route53/what-is-dns/?nc1=h_ls", "text": "DNS 또는 Domain Name System은 사람이 읽을 수 있는 도메인 이름(예: www.amazon.com)을 머신이 읽을 수 있는 IP 주소(예: 192.0.2.44)로 변환합니다."}
{"title": "URL", "subtitle": "DNS 기본 사항", "source": "https://aws.amazon.com/ko/route53/what-is-dns/?nc1=h_ls", "text": "스마트폰이나 노트북부터 대규모 소매 웹 사이트의 콘텐츠를 서비스하는 서버에 이르기까지 인터넷상의 모든 컴퓨터는 숫자를 사용하여 서로를 찾고 통신합니다. 이러한 숫자를 IP 주소라고 합니다. 웹 브라우저를 열고 웹 사이트로 이동할 때는 긴 숫자를 기억해 입력할 필요가 없습니다. 대신, example.com과 같은 도메인 이름을 입력해도 원하는 웹 사이트로 이동하게 됩니다. DNS 서비스는 전 세계에 배포된 서비스로서, www.example.com과 같이 사람이 읽을 수 있는 이름을 192.0.2.1과 같은 숫자 IP 주소로 변환하여 컴퓨터가 서로 통신할 수 있도록 합니다. 인터넷의 DNS 시스템은 이름과 숫자 간의 매핑을 관리하여 마치 전화번호부와 같은 기능을 합니다. DNS 서버는 이름을 IP 주소로 변환하여 도메인 이름을 웹 브라우저에 입력할 때 최종 사용자를 어떤 서버에 연결할 것인지를 제어합니다. 이 요청을 쿼리라고 부릅니다."}
{"title": "URL", "subtitle": "URL 구조", "source": "https://developer.mozilla.org/ko/docs/Learn_web_development/Howto/Web_mechanics/What_is_a_URL", "text": "ex) http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument → URL은 일반 우편 주소와 비슷하다고 생각할 수 있습니다. scheme(스키마)는 사용하려는 우편 서비스, domain name(도메인 이름)은 시 또는 마을, port(포트)는 우편 번호, path(경로)는 메일이 배달되어야 하는 건물, parameters(매개변수)는 건물의 아파트 번호와 같은 추가 정보, 마지막으로 anchor(앵커)는 메일을 보낸 실제 사람을 나타냅니다."}
{"title": "URL", "subtitle": "스키마 정의", "source": "https://developer.mozilla.org/ko/docs/Learn_web_development/Howto/Web_mechanics/What_is_a_URL", "text": "스키마: URL의 첫 번째 부분은 브라우저가 리소스를 요청하는 데 사용해야 하는 프로토콜을 나타냅니다.(프로토콜은 컴퓨터 네트워크에서 데이터를 교환하거나 전송하기 위한 설정 방법입니다). 일반적으로 웹사이트의 경우 프로토콜은 HTTPS 또는 HTTP(보안되지 않은 버전)입니다. 웹 페이지의 주소를 지정하려면 이 두 가지 중 하나가 필요하지만 브라우저는 mailto: (메일 클라이언트를 열기 위해)와 같은 다른 체계를 처리하는 방법도 알고 있으므로 다른 프로토콜이 보이더라도 놀라지 마세요. 그 다음에는 권한(authority)이 뒤따르며 문자 패턴 ://에 의해 스키마와 구분됩니다. 만약 존재한다면 권한에는 콜론으로 구분된 도메인(예: www.example.com)과 포트(80)가 모두 포함됩니다. 도메인은 요청하는 웹 서버를 나타냅니다. 도메인은 일반적으로 도메인 이름이지만 IP 주소도 사용될 수 있습니다. (그러나 이것은 훨씬 불편하기 때문에 자주 사용하지 않습니다.) 참고 : 스키마와 권한 사이의 구분 기호는 ://입니다. 콜론은 스키마를 URL의 다음 부분과 구분하고 //는 URL의 다음 부분이 권한임을 나타냅니다. 권한을 사용하지 않는 URL의 한 예시는 메일 클라이언트(mailto:foobar)입니다. 스키마는 포함하지만 권한 구성 요소는 사용하지 않습니다. 따라서 콜론 뒤에 두 개의 슬래시가 오지 않고 콜론은 스키마와 메일 주소 사이의 구분 기호 역할만 합니다."}
{"title": "URL", "subtitle": "포트 정의", "source": "https://developer.mozilla.org/ko/docs/Learn_web_development/Howto/Web_mechanics/What_is_a_URL", "text": "포트는 웹 서버의 리소스에 접근하는 데 사용되는 기술적인 \"게이트\"를 나타냅니다. 웹 서버가 리소스에 대한 액세스 권한을 부여하기 위해 HTTP 프로토콜의 표준 포트(HTTP의 경우 80, HTTPS의 경우 443)를 사용하는 경우엔 일반적으로 생략합니다. 그렇지 않으면 필수입니다."}
{"title": "URL", "subtitle": "리소스 경로 정의", "source": "https://developer.mozilla.org/ko/docs/Learn_web_development/Howto/Web_mechanics/What_is_a_URL", "text": "리소스 경로(Path to resource): /path/to/myfile.html은 웹 서버에 있는 리소스의 경로입니다. 웹 초기에는 이와 같은 경로가 웹 서버의 실제 파일 위치를 나타냈습니다. 요즘에는 대부분 물리적 실체가 없는 웹 서버가 추상적으로 처리합니다."}
{"title": "URL", "subtitle": "매개변수 정의", "source": "https://developer.mozilla.org/ko/docs/Learn_web_development/Howto/Web_mechanics/What_is_a_URL", "text": "매개변수(Parameters): ?key1=value1&key2=value2는 웹 서버에 제공되는 추가 매개변수입니다. 이러한 매개변수는 & 기호로 구분된 키/값 쌍 목록입니다. 웹 서버는 리소스를 반환하기 전에 이러한 매개변수를 사용하여 추가 작업을 수행할 수 있습니다. 각 웹 서버에는 매개변수에 관한 고유한 규칙이 있으며 특정 웹 서버가 매개변수를 처리하는지 알 수 있는 신뢰할 수 있는 유일한 방법은 웹 서버 소유자에게 물어보는 것입니다."}
{"title": "URL", "subtitle": "앵커 정의", "source": "https://developer.mozilla.org/ko/docs/Learn_web_development/Howto/Web_mechanics/What_is_a_URL", "text": "앵커(Anchor): #SomewhereInTheDocument는 리소스 자체의 어떤 부분에 대한 앵커입니다. 앵커는 리소스 내부에서 일종의 \"책갈피\" 역할을 하며, 브라우저에 해당 \"책갈피\" 지점의 콘텐츠를 표시하도록 지시합니다. 예를 들어 HTML 문서에서는 브라우저가 앵커가 정의된 지점으로 스크롤합니다. 비디오 또는 오디오 문서에서 브라우저는 앵커가 나타내는 시간으로 이동하려고 시도합니다. 프래그먼트 식별자라고도 하는 # 뒤의 부분은 요청과 함께 서버로 전송되지 않는다는 점은 주목할 가치가 있습니다."}
{"title": "URL", "subtitle": "쿼리 매개변수", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "URL에서 쿼리 매개변수는 어떻게 유용하나요? 쿼리 매개변수를 사용하면 서버로 보내는 요청을 사용자 지정할 수 있습니다. 웹사이트의 특정 정보를 필터링, 정렬 또는 검색하는 데 사용할 수 있습니다. 예를 들어 온라인 쇼핑 웹사이트에서 쿼리 매개변수를 사용하여 원하는 제품 카테고리, 정렬 순서 또는 가격 범위를 지정할 수 있습니다."}
{"title": "URL", "subtitle": "URL 대소문자 구분", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "URL은 대소문자를 구분할 수 있나요? 아니요, URL은 일반적으로 대소문자를 구분하지 않습니다. 대부분의 웹 서버는 URL의 대문자와 소문자를 동일하게 취급합니다. 하지만 URL 내의 경로 및 쿼리 매개변수는 서버가 처리하는 방식에 따라 대소문자를 구분할 수 있다는 점에 유의할 필요가 있습니다."}
{"title": "URL", "subtitle": "인코딩", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "URL 인코딩의 목적은 무엇인가요? 퍼센트 인코딩이라고도 하는 URL 인코딩은 URL에서 허용되지 않거나 특별한 의미를 갖는 문자를 표현하는 데 사용됩니다. 예를 들어 공백은 URL에 허용되지 않으므로 인코딩 중에 \"%20\"으로 대체됩니다. URL 인코딩은 URL의 모든 문자가 충돌이나 문제를 일으키지 않고 올바르게 해석되어 전송되도록 합니다."}
{"title": "URL", "subtitle": "프로토콜 종류", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "하이퍼텍스트 전송 프로토콜(HTTP) 및 HTTP 보안(HTTPS) 외에 일반적인 URL 프로토콜에는 어떤 것이 있나요? HTTP와 HTTPS 외에도 일반적으로 사용되는 몇 가지 다른 URL 프로토콜이 있습니다. 파일 전송을 위한 파일 전송 프로토콜(FTP), 이메일 전송을 위한 단순 메일 전송 프로토콜(SMTP), 서버에 대한 보안 원격 액세스를 위한 보안 셸(SSH) 등이 그 예입니다. 각 프로토콜은 특정 용도로 사용되며 고유한 규칙과 규칙이 있습니다."}
{"title": "URL", "subtitle": "앵커", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "URL이 웹페이지 내의 특정 섹션을 가리킬 수 있나요? 예, URL이 웹페이지 내의 특정 섹션을 가리킬 수 있습니다. 이는 앵커 또는 조각 식별자를 사용하여 가능합니다. 앵커는 페이지의 특정 위치나 섹션으로 바로 이동할 수 있는 웹페이지 내의 참조입니다. 앵커는 URL에 해시 기호(\"#\") 뒤에 앵커 이름 또는 식별자(ID)를 추가하여 표시합니다."}
{"title": "URL", "subtitle": "URL 길이", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "URL에 길이 제한이 있나요? 예, URL에는 사용 중인 웹 브라우저, 서버 및 기술에 따라 길이 제한이 있습니다. 도메인 이름, 경로, 쿼리 매개변수 등 URL의 구성 요소마다 고유한 길이 제한이 있을 수 있습니다. 일반적으로 호환성을 보장하고 잠재적인 문제를 방지하기 위해 URL을 간결하게 유지하고 지나치게 긴 URL은 피하는 것이 좋습니다."}
{"title": "URL", "subtitle": "URL 민감 정보 포함될 수 있나요?", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "URL에 비밀번호와 같은 민감한 정보가 포함될 수 있나요? 비밀번호와 같은 민감한 정보는 URL에 직접 포함하지 않는 것이 좋습니다. 민감한 정보가 포함된 URL을 제출하면 브라우저 기록, 서버 로그, 추천 헤더 등 다양한 곳에서 해당 정보가 표시될 수 있습니다. 대신, 민감한 데이터는 HTTP 보안(HTTPS)과 같은 암호화 프로토콜을 사용하거나 적절한 보안 조치가 적용된 양식 제출과 같은 기타 안전한 방법을 통해 안전하게 전송해야 합니다."}
{"title": "URL", "subtitle": "시간이 지나면 URL이 변경될 수 있나요?", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "예, URL은 시간이 지남에 따라 변경될 수 있습니다. 웹사이트의 도메인 이름은 일반적으로 동일하게 유지되지만 콘텐츠가 추가, 제거 또는 수정되면 URL 내의 경로와 쿼리 매개변수가 변경될 수 있습니다. URL이 변경되면 이전 URL을 가리키는 모든 링크가 끊어져 더 이상 의도한 리소스로 연결되지 않을 수 있다는 점에 유의하세요."}
{"title": "URL", "subtitle": "URL을 단축할 수 있나요?", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "예, URL 단축 서비스를 사용하여 URL을 단축할 수 있습니다. 이러한 서비스는 긴 URL을 더 짧고 간결한 버전으로 만들어 줍니다. URL 단축 서비스는 특히 소셜 미디어와 같이 글자 수 제한이 있는 플랫폼에서 URL을 더 쉽게 공유할 수 있도록 하기 위해 일반적으로 사용됩니다. 하지만 단축 URL이 항상 투명하지 않을 수 있으며 잠재적인 보안 위험을 피하기 위해 신뢰할 수 있는 URL 단축 서비스를 사용하는 것이 좋습니다."}
{"title": "URL", "subtitle": "URL 처리", "source": "https://www.lenovo.com/kr/ko/glossary/url/?orgRef=https%253A%252F%252Fwww.perplexity.ai%252F", "text": "애플리케이션 프로그래밍 인터페이스(API) 요청에 URL을 사용할 수 있나요? 예, URL은 API 요청에 자주 사용됩니다. API 엔드포인트는 일반적으로 URL로 표시됩니다. 개발자는 적절한 HTTP 메서드(예: GET, POST, PUT, DELETE)를 사용하여 특정 URL로 하이퍼텍스트 전송 프로토콜(HTTP) 요청을 전송함으로써 API와 상호 작용하여 데이터를 검색하거나 데이터를 제출하거나 API의 기능에 정의된 대로 기타 작업을 수행할 수 있습니다."}
{"title": "URL", "subtitle": "ccTLD 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "국가 코드 최상위 도메인 (ccTLD): ISO 3166-1 국가 코드 목록에 정의된 최상위 도메인입니다. https://example.org.au의 경우 ccTLD는 au입니다. https://example.io의 경우 ccTLD는 io입니다."}
{"title": "URL", "subtitle": "eTLD 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "유효한 최상위 도메인 (eTLD): 공개 접미사 목록의 항목으로, TLD 및(여러 부분으로 구성된 eTLD의 경우) 그 아래에 있는 추가 도메인(2차, 3차 등)을 포함합니다. 예를 들면 com, com.au, github.io, sa.edu.au, schools.nsw.edu.au입니다. 이러한 예와 같은 '공용 접미사'는 도메인을 등록할 수 있는 이름입니다. 공개 접미사 목록은 알려진 모든 공개 접미사의 목록이며 자주 업데이트됩니다. Chromium 및 Firefox를 비롯한 브라우저는 빌드에서 이 목록을 사용합니다."}
{"title": "URL", "subtitle": "eTLD+1 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "eTLD+1: eTLD와 그 앞에 오는 하위 도메인입니다. 예를 들면 example.com, example.org.au, example.github.io, example.sa.edu.au, example.schools.nsw.edu.au입니다."}
{"title": "URL", "subtitle": "앵커", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "해시 (또는 앵커): URL 끝에 있는 # 문자 뒤에 오는 문자열로, 프래그먼트 식별자를 제공합니다. 일부 맥락에서는 이를 '앵커'라고 합니다. #를 제외한 부분을 프래그먼트라고 합니다. 텍스트 프래그먼트에 링크하고 강조 표시할 수도 있습니다. 해시는 프래그먼트가 아닌 URL API에서 반환합니다."}
{"title": "URL", "subtitle": "호스트 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "호스트: URL 표준에 정의된 대로 호스트는 도메인 이름, IP v4 주소, IPv6 주소, 불투명 호스트 또는 빈 호스트일 수 있습니다. URL 표준의 host 정의에는 포트가 포함되지 않습니다. 포트가 스키마의 기본 포트가 아닌 경우 URL.host에는 포트가 포함됩니다. URL.hostname에는 포트가 포함되지 않습니다."}
{"title": "URL", "subtitle": "포트번호 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "포트번호: URL에서 네트워크 포트를 식별하는 : 뒤의 숫자입니다. 예를 들어 URL https://example.com:1234/tabby의 경우 포트 번호는 1234입니다. 포트 번호는 16비트 부호 없는 정수여야 합니다. 즉, 0과 65535 사이의 정수여야 합니다(양 끝값 포함). HTTP URL의 기본 포트는 80이고 HTTPS의 기본 포트는 443입니다. 기본 포트가 아닌 포트를 사용하지 않는 한 URL은 포트 번호를 지정할 필요가 없습니다. 포트가 스키마의 기본값인 경우 API는 빈 문자열을 반환합니다."}
{"title": "URL", "subtitle": "SLD (2차 도메인) 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "2차 도메인: 최상위 도메인 앞에 오는 도메인입니다. URL https://www.example.com의 경우 2차 도메인은 최상위 도메인 com의 하위 도메인인 example.com입니다. https://example.org.au의 경우 최상위 도메인은 au, 2차 도메인은 org, 3차 도메인은 example입니다. 이 예에서 org.au는 au의 하위 도메인이고 example.org.au는 org.au의 하위 도메인입니다."}
{"title": "URL", "subtitle": "하위 도메인 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "하위 도메인: 상위 도메인 내의 도메인입니다. com 또는 org와 같이 단일 부분 최상위 도메인이 있는 사이트의 경우 최상위 도메인 앞에 있는 부분으로, 각각 점으로 구분됩니다. www.example.com는 example.com의 하위 도메인입니다. support.api.example.org은 example.org의 하위 도메인인 api.example.org의 하위 도메인입니다. 3단계 등록만 허용되는 두 부분으로 된 eTLD(예: co.uk 및 github.io와 같은 공개 접미사 목록의 항목)의 경우 하위 도메인은 그 앞에 있는 도메인 이름의 일부입니다. 예를 들어 cat.example.co.uk은 example.co.uk의 하위 도메인입니다."}
{"title": "URL", "subtitle": "TLD (최상위 도메인) 정의", "source": "https://web.dev/articles/url-parts?hl=ko", "text": "최상위 도메인(TLD): 루트 영역 데이터베이스에 등록된 도메인 이름(예: com 또는 org) 일부 최상위 도메인은 uk 및 tv와 같은 국가 코드 최상위 도메인입니다. HTTP 또는 HTTPS URL의 부분을 설명할 때 TLD는 마지막 점 뒤에 오는 도메인 이름입니다. https://example.org의 경우 URL의 최상위 도메인은 org입니다. https://example.org.au의 경우 URL의 최상위 도메인은 au이고 org는 2차 도메인입니다 (org도 최상위 도메인임). org.au는 두 부분으로 구성된 eTLD입니다. eTLD의 공개 접미사 목록에는 1개, 2개 이상의 부분으로 구성된 도메인이 포함되므로 TLD가 eTLD일 수도 있습니다. 예를 들면 다음과 같습니다. https://example.com의 경우 URL의 eTLD는 TLD이기도 한 com입니다."}
{"title": "URL", "subtitle": "FQDN 정의", "source": "https://ko.wikipedia.org/wiki/%EC%A0%84%EC%B2%B4_%EC%A3%BC%EC%86%8C_%EB%8F%84%EB%A9%94%EC%9D%B8_%EB%84%A4%EC%9E%84", "text": "전체 주소 도메인 네임(Fully Qualified Domain Name, FQDN)은 호스트 이름과 도메인 이름을 포함한 전체 도메인 이름을 일컫는 용어이다. 절대 도메인 네임(absolute domain name)이라고도 한다."}
{"title": "URL", "subtitle": "FQDN 정의", "source": "https://www.f5.com/ko_kr/glossary/fqdn", "text": "FQDN(정규화된 도메인 이름)은 인터넷상의 서버, 웹사이트, 서비스 등의 네트워크 리소스의 정확한 위치를 지정하는 완전하고 명확한 도메인 이름입니다. FQDN은 온라인 리소스의 구성, 식별 및 액세스를 용이하게 하여 다양한 네트워크 환경에서 상호 운용성을 보장합니다. FQDN(정규화된 도메인 이름)은 인터넷상의 서버, 웹사이트, 서비스 등의 네트워크 리소스의 정확한 위치를 지정하는 완전하고 명확한 도메인 이름입니다. FQDN은 온라인 리소스의 구성, 식별 및 액세스를 용이하게 하여 다양한 네트워크 환경에서 상호 운용성을 보장합니다. FQDN은 도메인 이름 시스템(DNS) 계층 내에서 컴퓨팅 리소스의 정확한 위치를 보여주는 데 사용됩니다. FQDN은 전통적으로 도메인 레이블 목록으로 작성됩니다. 즉, 최상위 도메인, 2차 도메인 이름, 하위 도메인(사용되는 경우), 호스트 도메인으로 구성되며 각각은 점이나 마침표로 구분됩니다. 라벨 계층 구조는 오른쪽에서 왼쪽으로 읽습니다."}
{"title": "URL", "subtitle": "TLD (최상위 도메인) 정의", "source": "https://www.f5.com/ko_kr/glossary/fqdn", "text": "최상위 도메인(TLD)은 도메인 이름의 계층 구조에서 가장 높은 단계이며, 도메인의 가장 일반적인 분류를 나타냅니다. .com 외에도 일반적인 TLD로는 .org, .net, .info 등이 있습니다. 국가 코드 TLD도 사용됩니다: .ca(캐나다), .us(미국), .de(독일)."}
{"title": "URL", "subtitle": "SLD (2차 도메인) 정의", "source": "https://www.f5.com/ko_kr/glossary/fqdn", "text": "2차 도메인(SLD)은 TLD의 바로 왼쪽에 있습니다. SLD는 일반적으로 도메인 소유자 또는 관리자가 선택하며 종종 조직, 웹사이트 또는 서비스의 이름이나 브랜드와 연관됩니다. 2차 도메인과 최상위 도메인을 결합하면 루트 도메인이 생성됩니다. 루트 도메인은 웹사이트 및 기타 인터넷 리소스에 접근하는 데 사용되는 독특하고 인식 가능한 주소입니다."}
{"title": "URL", "subtitle": "하위 도메인 정의", "source": "https://www.f5.com/ko_kr/glossary/fqdn", "text": "하위 도메인은 도메인 내의 다양한 섹션이나 서비스를 구성하고 분류하는 데 사용되며, 기본 도메인 아래에 고유한 네임스페이스와 계층적 조직을 만드는 방법을 제공합니다. 하위 도메인은 종종 웹사이트의 특정 서비스, 부서 또는 섹션을 나타내는 데 사용됩니다. 예를 들어, \"shop.example.com\"은 온라인 상점의 주소가 될 수 있습니다."}
{"title": "URL", "subtitle": "호스트 이름 정의", "source": "https://www.f5.com/ko_kr/glossary/fqdn", "text": "호스트 이름은 도메인 이름의 가장 왼쪽에 있는 요소입니다. 호스트 이름은 웹 서버(\"www\"), 메일 서버(\"mail\"), FTP 서버(\"ftp\") 등을 식별하는 등 다양한 목적으로 사용될 수 있습니다. 예를 들어, www.example.com은 example.com 도메인과 연관된 웹 서버의 주소입니다. 호스트 이름은 도메인 내의 다양한 서비스를 구성하고 분류하는 방법을 제공합니다."}
{"title": "URL", "subtitle": "ICANN 정의", "source": "https://www.f5.com/ko_kr/glossary/fqdn", "text": "ICANN(인터넷 주소 할당 기관)은 글로벌 도메인 이름 시스템의 안정성과 보안을 보장하기 위해 도메인 이름과 TLD의 할당과 관리를 담당합니다."}
{"title": "URL", "subtitle": "국제 도메인(IDN) 이름", "source": "https://www.f5.com/ko_kr/glossary/fqdn", "text": "기존 도메인 이름은 라틴 알파벳과 제한된 문자 집합을 포함하는 ASCII 문자 집합을 기반으로 합니다. 그러나 전 세계의 많은 언어는 ASCII로 표현되지 않는 문자가 있는 스크립트를 사용합니다. 국제 도메인 이름(IDN)은 지역 언어 및 스크립트로 도메인 이름을 등록하고 사용할 수 있도록 허용하여 이러한 제한을 해결합니다. IDN은 부호가 있는 문자나 라틴 문자가 아닌 문자 등 ASCII가 아닌 문자 집합의 문자가 포함된 도메인 이름입니다. IDN은 영어 이외의 언어로 된 도메인 이름을 사용할 수 있게 하고, 다양한 문자와 필기 시스템의 문자를 포함할 수 있도록 지원하여 인터넷의 포용성과 언어적 다양성을 증진합니다. IDN은 ASCII가 아닌 문자를 표현하기 위해 표준화된 문자 인코딩 시스템인 유니코드를 사용합니다. 유니코드는 사실상 전 세계 모든 문자 체계의 문자와 기호에 고유한 숫자 값을 할당하므로 도메인 이름에 ASCII 문자 집합에서 사용할 수 있는 제한된 문자 집합을 넘어 키릴 문자, 아랍어, 중국어, 일본어, 한국어 등 다양한 문자의 문자를 포함할 수 있습니다. 이어서, 퓨니코드라는 또 다른 인코딩 시스템이 비 ASCII IDN을 ASCII 호환 표현으로 변환합니다. 이를 통해 다양한 스크립트의 문자가 포함된 도메인 이름을 DNS에서 도메인 이름에 전통적으로 사용되는 ASCII 문자 집합과 호환되는 형식으로 표현할 수 있습니다."}
{"title": "URL", "subtitle": "DNS", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name/", "text": "도메인 이름은 영숫자 IP 주소에 매핑되는 텍스트 문자열로, 클라이언트 소프트웨어에서 웹 사이트에 액세스하는 데 사용됩니다.일반 영어로 된 도메인 이름은 사용자가 특정 웹 사이트에 도달하기 위해 브라우저 창에 입력하는 텍스트입니다.예를 들어 Google의 도메인 이름은 'google.com'입니다. 웹 사이트의 실제 주소는 복잡한 숫자형 IP 주소입니다 (예 :192.0.2.2). 그러나 DNS 덕분에 사용자는 인간 친화적인 도메인 이름을 입력하고 원하는 웹 사이트로 라우팅될 수 있습니다.이 프로세스를 DNS 조회라고 합니다."}
{"title": "URL", "subtitle": "도메인 이름은 누가 관리할까요?", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name/", "text": "도메인 이름은 모두 도메인 레지스트리에서 관리하며, 레지스트리에서는 도메인 이름 예약을 등록기관에 위임합니다. 웹 사이트를 만들고자 하는 사람은 누구나 등록기관을 선택하여 도메인 이름을 등록할 수 있으며 현재 3억 개가 넘는 도메인 이름이 등록되어 있습니다."}
{"title": "URL", "subtitle": "DNS 구조", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name/", "text": "도메인 이름은 일반적으로 각각 점으로 구분된 두어 부분으로 나뉩니다. 오른쪽에서 왼쪽으로 읽어나가면 도메인 이름의 식별자가 가장 일반적인 것에서 가장 구체적인 것으로 바뀝니다. 도메인 이름의 마지막 점 오른쪽 부분은 최상위 도메인(TLD)입니다. 여기에는 '.com', '.net', '.org' 등의 '일반' TLD와 '.uk', '.jp' 등의 국가별 TLD가 포함됩니다. TLD의 왼쪽에는 두 번째 레벨 도메인(2LD)이 있고 2LD의 왼쪽에 무언가가 있으면 세 번째 레벨 도메인(3LD)이라고 합니다. 몇 가지 예를 살펴보겠습니다. Google의 미국 도메인 이름의 경우 'google.com': '.com'은 TLD(가장 일반적)입니다. 'google'은 2LD(가장 구체적)입니다. 그러나 Google UK의 도메인 이름 'google.co.uk'의 경우: ’.uk’는 TLD(가장 일반적)임. '.co'*는 2LD입니다. 'google'은 3LD(가장 구체적)입니다. *이 경우 2LD는 도메인을 등록한 조직의 유형을 나타냅니다(영국의 경우 .co는 회사에서 등록한 사이트용)."}
{"title": "URL", "subtitle": "도메인 이름 보안이 중요한 이유는?", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name/", "text": "신뢰할 수 있는 등록 기관을 선택하는 것은 도메인 스쿼팅(만료된 도메인을 높은 가격에 사고파는 행위)이나 도메인 하이재킹(악의적인 당사자가 도메인 이름을 장악하는 행위)과 같은 약탈적 행위를 피하는 데 있어 중요합니다. 신뢰할 수 있는 등록 기관은 도메인을 안전하게 유지하는 데 도움이 됩니다."}
{"title": "URL", "subtitle": "레지스트리 정의", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name-registrar/", "text": "레지스트리는 최상위 도메인(TLD) '.com' 및 '.net'을 관리하는 조직으로, 특히 개별 도메인이 어떤 사람과 조직에 속하는지에 대한 레코드를 유지 관리합니다. 이러한 레지스트리는 인터넷의 기본 기능을 지원하는 여러 프로세스와 데이터베이스를 조정하는 글로벌 조직인 국제 인터넷 주소 관리 기구(ICANN)의 부서인 인터넷 할당 번호 관리 기관(IANA)에서 관리합니다. 레지스트리는 도메인 이름 등록의 상업적 판매를 등록 기관에 위임합니다. 예를 들어, 등록기관에서 '.com' 도메인 등록을 최종 사용자(또는 '등록자')에게 판매하는 경우 등록 기관에서는 '.com' 도메인의 레지스트리인 VeriSign에 알려야 합니다. 등록 기관은 또한 VeriSign에 수수료를 지불해야 하며, 이 수수료는 등록기관이 최종 사용자에게 청구하는 가격에 반영됩니다."}
{"title": "URL", "subtitle": "등록기관", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name-registrar/", "text": "등록자(registarnt): 도메인 이름을 등록하는 개인 또는 그룹. 레지스트라(registrars): 등록자로부터 주문을 받을 수 있도록 등록 기관과 ICANN의 인증을 받았습니다. 레지스트리 운영자(registry operators): 도메인 등록자 및 DNS 설정 기록 유지. ICANN: 도메인 네임 시스템(DNS)을 조정하는 비영리 단체"}
{"title": "URL", "subtitle": "DNS", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name-registrar/", "text": "사람들은 종종 도메인 이름을 구매하고 소유한다고 이야기하지만, 사실은 레지스트리에서 모든 도메인 이름을 소유하고 등록 기관에서는 고객에게 한정된 시간 동안 해당 도메인 이름을 예약할 수 있는 기회를 제공하는 것에 불과합니다. 도메인 이름의 최장 예약 기간은 10년입니다. 사용자는 10년 이상 도메인 이름을 유지할 수 있으며, 등록기관이 도메인 이름이 만료되도록 허용하지 않는 한, 일반적으로 사용자가 도메인 이름을 계속 갱신할 수 있도록 합니다. 그러나 사용자는 도메인 이름을 실제로 소유하는 것이 아니라 임대하는 것입니다."}
{"title": "URL", "subtitle": "등록기관은 어떤 역할을 할까?", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name-registrar/", "text": "등록기관은 도메인 등록을 판매하고 등록 정보에 액세스할 수 있는 조직으로서, 악의적인 행위자로부터 데이터와 액세스를 안전하게 유지해야 합니다. 도메인 보호는 등록기관 서비스의 중요한 부분이어야 합니다. 과거에는 일부 등록 기관에서 도메인 하이재킹 공격에서 역할을 했으며, 이 공격에서는 원래 등록자의 허락 없이 도메인 이름 등록을 변경하거나 도메인 호스팅 및 등록 기관 소프트웨어 시스템의 권한을 남용할 수 있습니다. 도메인 하이재킹의 한 가지 예는 공격자가 원래 사이트를 가장하거나 비즈니스를 방해하기 위해 특정 도메인을 다른 웹 사이트로 연결하는 것입니다."}
{"title": "URL", "subtitle": "등록기관은 어떤 역할을 할까? - ICANN", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-a-domain-name-registrar/", "text": "ICANN은 등록 기관의 도메인 하이재킹을 방지하기 위해 다음을 포함하여 여러 단계를 수행할 것을 권장합니다. AuthInfo 코드의 관리 개선 — AuthInfo 코드는 도메인 이전 프로세스에서 역할을 하는 무작위로 생성된 코드입니다. 도메인 잠금의 더 나은 구현 — 도메인이 이전되지 않도록 하는 설정, 모든 등록 절차에 대한 신원 확인 개선, 도메인 변경에 대한 기록 보관 개선"}
{"title": "URL", "subtitle": "DNS", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "DNS 확인 프로세스에는 호스트 이름(예: www.example.com)을 컴퓨터 친화적인 IP 주소(예: 192.168.1.1)로 변환하는 과정이 포함됩니다. IP 주소는 인터넷의 각 기기에 제공되며, 거리 주소가 특정한 집을 찾는 데 사용되는 것처럼, 적절한 인터넷 기기를 찾기 위해서는 IP 주소가 필요합니다. 사용자가 어떤 웹페이지를 로드하려고 할 때에는 사용자가 웹브라우저에 입력한 내용(예: example.com)을 example.com 웹페이지를 찾는 데 필요한 컴퓨터 친화적 주소로 변환해야 합니다. DNS 확인의 기반 프로세스를 이해하려면, DNS 쿼리가 통과해야 하는 다양한 하드웨어 구성 요소에 대해 알아야 합니다. 웹브라우저 입장에서는 DNS 확인이 \"막후에서\" 발생하며 최초의 사용자 요청 외에 사용자 컴퓨터와의 추가적인 대화는 필요하지 않습니다."}
{"title": "URL", "subtitle": "DNS 서버", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "1. DNS 리커서 - 리커서는 도서관의 어딘가에서 특정한 책을 찾아달라고 요청받는 사서로 생각할 수 있습니다. DNS 리커서는 웹 브라우저 등의 애플리케이션을 통해 클라이언트 컴퓨터로부터 쿼리를 받도록 고안된 서버입니다. 일반적으로, 리커서는 클라이언트의 DNS 쿼리를 충족시키기 위해 추가 요청을 수행합니다. 2. 루트 이름 서버 - 루트 서버는 사람이 읽을 수 있는 호스트 이름을 IP 주소로 변환(확인)하는 첫 번째 단계입니다. 도서관에서 책장 위치를 가리키는 색인으로 생각할 수 있으며, 일반적으로 다른 더욱 특정한 위치에 대한 참조로 사용됩니다. 3. TLD 이름 서버 - TLD(최상위 도메인) 서버는 도서관의 특정 책장으로 생각할 수 있습니다. 이 이름 서버는 특정 IP 주소 검색의 다음 단계이며 호스트 이름의 마지막 부분을 호스팅합니다(example.com에서 TLD 서버는 “com”입니다). 4. 권한 있는 이름 서버 - 최종 이름 서버로서, 책장에 있는 사전처럼 특정 이름을 해당 정의로 변환합니다. 권한있는 이름 서버는 이름 서버 쿼리의 종착점입니다. 권한있는 이름 서버가 요청한 레코드에 대한 액세스 권한이 있다면, 요청한 호스트 이름의 IP 주소를 초기 요청을 한 DNS 리커서(사서)에게 돌려 보냅니다."}
{"title": "URL", "subtitle": "재귀 확인자", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "차이점에 대해 생각하는 한 가지 방법은, 재귀 확인자는 DNS 쿼리의 시작 부분에 있고 권한 있는 이름 서버는 끝부분에 있다는 것입니다. 재귀 확인자는 클라이언트의 재귀 요청에 응답하고 DNS 레코드를 추적하는 데 시간을 투자하는 컴퓨터입니다. 요청한 레코드에 대해, 권한있는 DNS 이름 서버에 도달할 때까지 일련의 요청을 하는 방식으로 이를 수행합니다(또는 레코드가 없으면 시간 초과되거나 오류를 반환). 다행히 재귀 DNS 확인자가 클라이언트에 응답하는 데 필요한 레코드를 추적하기 위해 항상 다수의 요청을 해야 하는 것은 아닙니다. 캐싱은 DNS 조회 초기에, 요청한 자원 레코드를 제공하여 필요한 요청을 단락시키는 데 도움이 되는 데이터 지속성 프로세스입니다."}
{"title": "URL", "subtitle": "DNS 조회", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "DNS 조회 정보는 쿼리 컴퓨터 내부에서 로컬로 또는 DNS 인프라에서 원격으로 캐시되는 경우가 많습니다. DNS 조회에는 일반적으로 8단계가 있지만, DNS 정보가 캐시되어 있으면 DNS 조회 프로세스에서 몇 단계를 건너 뛸 수 있으므로, 더 빨라집니다. DNS 조회의 8단계: ①사용자가 웹 브라우저에 'example.com'을 입력하면, 쿼리가 인터넷으로 이동하고 DNS 재귀 확인자가 이를 수신합니다. ②이어서 확인자가 DNS 루트 이름 서버(.)를 쿼리합니다. ③다음으로, 루트 서버가, 도메인에 대한 정보를 저장하는 최상위 도메인(TLD) DNS 서버(예: .com 또는 .net)의 주소로 확인자에 응답합니다. example.com을 검색할 경우의 요청은 .com TLD를 가리킵니다. ④이제, 확인자가 .com TLD에 요청합니다. ⑤이어서, TLD 서버가 도메인 이름 서버(example.com)의 IP 주소로 응답합니다. ⑥마지막으로, 재귀 확인자가 도메인의 이름 서버로 쿼리를 보냅니다. ⑦이제, example.com의 IP 주소가 이름 서버에서 확인자에게 반환됩니다. ⑧이어서, DNS 확인자가, 처음 요청한 도메인의 IP 주소로 웹 브라우저에 응답합니다. DNS 조회의 8단계를 거쳐 example.com의 IP 주소가 반환되면, 이제 브라우저가 웹 페이지를 요청할 수 있습니다. ⑨브라우저가 IP 주소로 HTTP 요청을 보냅니다. ⑩해당 IP의 서버가 브라우저에서 렌더링할 웹 페이지를 반환합니다(10단계)."}
{"title": "URL", "subtitle": "DNS 쿼리", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "일반적인 DNS 조회에서는 세 가지 유형의 쿼리가 발생합니다. 이러한 쿼리 조합을 사용하면 DNS 확인을 위한 최적화된 프로세스가 되어 이동 거리를 줄일 수 있습니다. 이상적인 상황에서는, 캐시된 레코드 데이터를 사용할 수 있으므로, DNS 이름 서버가 비재귀 쿼리를 반환할 수 있습니다. 세 가지 유형의 DNS 쿼리: 재귀 쿼리, 반복 쿼리, 비재귀 쿼리"}
{"title": "URL", "subtitle": "DNS 쿼리 - 재귀 쿼리", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "재귀 쿼리 - 재귀 쿼리에서는, 확인자가 레코드를 찾을 수 없는 경우, DNS 클라이언트는 DNS 서버(일반적으로 DNS 재귀 확인자)가, 요청한 자원 레코드 또는 오류 메시지를 사용하여 클라이언트에 응답하도록 요구합니다."}
{"title": "URL", "subtitle": "DNS 쿼리 - 반복 쿼리", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "반복 쿼리 - 이 경우, DNS 클라이언트는 DNS 서버가 가능한 최상의 응답을 반환하도록 합니다. 쿼리한 DNS 서버가 쿼리 이름과 일치하는 이름을 갖고 있지 않은 경우, 하위 수준의 도메인 네임스페이스에 대해 권한 있는 DNS 서버에 대한 참조를 반환합니다. 그러면 DNS 클라이언트가 참조 주소를 쿼리합니다. 이 프로세스는 오류 또는 제한 시간 초과가 발생할 때까지 추가 DNS 서버가 쿼리 체인을 중단한 상태로 계속됩니다."}
{"title": "URL", "subtitle": "DNS 쿼리 - 비재귀 쿼리", "source": "https://www.cloudflare.com/ko-kr/learning/dns/what-is-dns/", "text": "비재귀 쿼리 - 일반적으로, DNS 확인자 클라이언트의 쿼리를 받은 DNS 서버가 해당 레코드에 대한 권한이 있거나 캐시 내부에 해당 레코드를 갖고 있어, DNS 서버가 액세스 권한을 갖고 있는 레코드를 쿼리할 때 발생합니다. 일반적으로, DNS 서버는 추가 대역폭 소비 및 업스트림 서버의 부하를 방지하기 위해 DNS 레코드를 캐시합니다."}
{"title": "URL", "subtitle": "TLD 유형 - 일반 TLD(gTLD)", "source": "https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/", "text": "일반 TLD(gTLD)에는 '.com', '.net', '.org' 등 웹에서 볼 수 있는 보다 일반적인 도메인 이름이 포함됩니다.국제 인터넷 주소 관리 기구(ICANN)는 새로운 gTLD의 생성을 엄격하게 제한했지만, 2010년에 이러한 제한이 완화되었습니다. 이제 '.top', '.xyz', '.loan' 등의 잘 알려지지 않은 수백 개의 gTLD가 있습니다."}
{"title": "URL", "subtitle": "TLD 유형 - 국가 코드 TLD(ccTLD)", "source": "https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/", "text": "국가 코드 TLD(ccTLD)는 국가, 주권 국가, 영토에서 사용하도록 지정되어 있습니다.몇 가지 예로는 '.uk', '.au'(호주), '.jp'(일본)가 있습니다.ICANN에서 운영하는 인터넷 할당 번호 관리 기관(IANA)에서는 각 지역에서 ccTLD를 관리할 적절한 조직을 선택하는 업무를 담당합니다."}
{"title": "URL", "subtitle": "TLD 유형 - 후원 TLD", "source": "https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/", "text": "후원 TLD: 이러한 TLD는 일반적으로 전문, 민족, 지리적 커뮤니티를 나타냅니다.각 후원 TLD(sTLD)에는 해당 커뮤니티를 대표하는 위임된 후원 기관이 있습니다.예를 들어 '.app'은 개발자 커뮤니티를 위한 TLD이며 Google의 후원을 받습니다.마찬가지로 '.gov'는 미국 정부에서 사용하기 위한 것이며 총무청의 후원을 받습니다."}
{"title": "URL", "subtitle": "TLD 유형 - 인프라 TLD", "source": "https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/", "text": "인프라 TLD: 이 범주에는 단일 TLD('.arpa')만 포함됩니다.현대 인터넷을 개발하는 데 도움을 준 미군 연구 기관인 DARPA의 이름을 딴 '.arpa'는 최초의 TLD였으며 현재는 리버스 DNS 조회 촉진과 같은 인프라용으로 지정되어 있습니다."}
{"title": "URL", "subtitle": "TLD 유형 - 지정된 TLD", "source": "https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/", "text": "지정된 TLD: 일부 TLD는 지정 목록에 있으므로 영구적으로 사용할 수 없습니다.예를 들어 '.localhost'는 로컬 컴퓨터 환경용으로 지정되어 있고 '.example'은 예제 데모용으로 지정되어 있습니다."}
{"title": "URL", "subtitle": "IP 주소 정의", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/", "text": "'IP' 는 인터넷 프로토콜(Internet Protocol)의 약자로, 장치들이 인터넷을 통해 통신할 수 있도록 하는 규칙의 집합을 말합니다. 매일 수십억 명의 사람들이 인터넷에 접속하고 있으므로 누가 무엇을 하고 있는지를 추적하려면 고유의 식별자가 필요합니다. 인터넷 프로토콜은 인터넷에 액세스하는 모든 장치에 IP 번호를 할당함으로써 이를 해결합니다."}
{"title": "URL", "subtitle": "IPv4와 IPv6", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/", "text": "IPv4와 IPv6는 인터넷 프로토콜의 다른 버전입니다. IPv4는 1983년부터 실행되었으며 현재도 사용 중입니다. IPv4 주소의 형식은 점으로 구분된 네 개의 숫자(예: '192.0.2.1')입니다. 이는 32비트 형식이므로, 232개, 즉 약 43억 개의 고유 IP 주소가 있을 수 있지만, 현재 인터넷을 이용하는 장치의 수에 비해 부족합니다. 더 많은 IP 주소가 필요해져서 IPv6*가 탄생하게 됐습니다. IPv6 주소는 보다 복잡한 형식을 사용하며, 숫자와 문자가 하나 또는 두 개의 콜론으로 구분됩니다(예: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'). 이 128비트 형식은 2128개(이 숫자는 39자리 숫자입니다!)의 고유 주소를 지원할 수 있습니다. IPv6는 보안 및 개인 정보 보호 등의 측면에서도 IPv4를 개선하였습니다. 둘 사이에 차이점이 있지만, IPv4와 IPv6 둘 다 10여 년 동안 웹에서 동시에 사용되었습니다. 두 버전은 동시에 실행할 수 있지만, IPv4와 IPv6 장치 간의 통신을 용이하게 하기 위해서는 특별한 조치를 구현해야 했습니다. 웹의 상당히 많은 부분이 여전히 IPv4 주소를 이용하고 있었으므로 이러한 절충안이 나올 수밖에 없었습니다. *IPv5는 어떻게 됐습니까? IPv5는 실험적인 스트리밍 데이터 프로토콜이었으며 구현되지는 않았습니다. 이는 IPv4와 마찬가지로 32비트 형식을 사용했기 때문에 고유한 IP 주소의 부족 문제를 충분히 해결하지 못했습니다. 이러한 이유로, IPv6가 IPv4의 뒤를 잇게 된 것입니다."}
{"title": "URL", "subtitle": "정적 IP와 동적 IP 차이점", "source": "https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/", "text": "정적 IP와 동적 IP의 차이점은? IPv4는 주소가 부족하기 때문에 IP 주소를 동적으로 지정하게 되었으며, 이는 아직도 널리 사용되는 방법입니다. 인터넷에 연결된 대부분의 장치에는 임시 IP 주소가 할당됩니다. 예를 들어, 가정 내 사용자가 자신의 노트북으로 인터넷에 접속하면 사용자의 ISP가 공유 IP 주소 풀에서 임시 IP 주소를 할당합니다. 이는 동적 IP 주소라고 합니다. ISP로서는 이렇게 하는 것이 사용자마다 영구적 또는 정적 IP 주소를 할당하는 것보다 비용 효과적입니다."}
{"title": "URL", "subtitle": "인코딩", "source": "https://developer.mozilla.org/ko/docs/Glossary/Percent-encoding", "text": "퍼센트 인코딩(Percent-encoding)은 URL 맥락에서 특정 의미를 갖는 8비트 문자로 인코딩하는 메커니즘입니다. URL 인코딩이라고도 합니다. 인코딩은 '%' 다음에 변경할 문자를 ASCII 값으로 표현되는 16진수가 위치하는 대체 문자열로 구성됩니다. 인코딩이 필요한 특수문자는 ':', '/', '?', '#', '[', ']', '@', '!', '$', '&', \"'\", '(', ')', '*', '+', ',', ';', '=' 그리고 '%' 그 자체입니다. 다른 문자는 인코딩 할 수 있지만 인코딩을 할 필요는 없습니다. ':' → %3A, '/' → %2F, '?' → %3F, '#' → %23, '[' → %5B, ']' → %5D, '@' → %40, '!' → %21, '$' → %24, '&' → %26, \"'\" → %27, '(' → %28, ')' → %29, '*' → %2A, '+' → %2B, ',' → %2C, ';' → %3B, '=' → %3D, '%' → %25, ' ' → %20 or +"}
{"title": "URL", "subtitle": "레지스트리(Registry) 정의", "source": "https://library.gabia.com/contents/4918/", "text": "레지스트리는 등록된 도메인명의 데이터베이스를 유지 관리하는 기관입니다. 같은 도메인명이 이중 등록되지 않도록 레지스트리는 데이터베이스를 일원적으로 관리해야 하기 때문에 최상위 도메인(TLD) 별로 레지스트리는 하나만 존재하며, 하나의 레지스트리가 복수의 최상위 도메인을 관리하기도 합니다. 예를 들어, 「.com」의 레지스트리는 VeriSign이며, VeriSign은 「.com」 이외에 「.net」도 관리하고 있습니다. 또한 레지스트리는 등록된 도메인명이 인터넷 상에서 접속될 수 있도록 최상위 도메인(TLD)의 도메인 네임 서버(DNS)를 운용하고 있습니다."}
{"title": "URL", "subtitle": "레지스트라(Registrar) 정의", "source": "https://library.gabia.com/contents/4918/", "text": "레지스트라는 도메인 네임 등록 대행 업체로, 등록자로부터 도메인 네임의 등록 신청을 접수하여 그 등록 데이터를 레지스트리의 데이터베이스에 등록합니다. 최상위 도메인 당 하나만 존재하는 레지스트리와 달리, 등록 서비스를 제공하는 레지스트라는 레지스트리와의 계약 하에 복수 존재합니다. 때문에 도메인 등록•관리 비용은 레지스트라에 따라 차이가 있습니다. 레지스트라로 인정되기 위해서는 국제 인터넷 주소 관리 기구(ICANN)에 의한 심사에 합격할 필요가 있습니다."}
{"title": "URL", "subtitle": "리셀러(Reseller) 정의", "source": "https://library.gabia.com/contents/4918/", "text": "리셀러는 레지스트라를 경유하여 도메인 등록 업무를 대행하는 업자를 말합니다. 리셀러는 SRS(Shared Registry System)이라는 도메인 관리 시스템의 접속 권한이 없기 때문에 반드시 레지스트라를 경유하여 도메인을 관리하게 됩니다."}
{"title": "URL", "subtitle": "ICANN 정의", "source": "https://library.gabia.com/contents/4918/", "text": "ICANN은 「The Internet Corporation for Assigned Names and Numbers」의 약자로, 국제 인터넷 주소 관리 기구를 뜻합니다. 인터넷 주소 체제(DNS)의 효율적인 관리를 목적으로 설립된 비영리 기관으로, 인터넷 도메인 관리와 정책을 결정하는 도메인 관련 국제 최고 기구입니다."}
{"title": "URL", "subtitle": "단축 URL 피해 사례", "source": "https://www.boannews.com/media/view.asp?idx=114178", "text": "URL 단축 기술을 통해 피싱 링크 숨겨...이번에는 지오링크라는 서비스가 악용돼 보안 외신 핵리드에 의하면 최근 피싱 공격자들이 지오링크(Geo Link)라는 서비스를 활용해 피해자들을 속이기 시작했다고 한다. 지오링크는 URL을 단축시켜 주는 서비스로 지오타게틀리(Geo Targetly)라는 기업에서 제공한다. 긴 URL을 짧게 단축시켜 주는 서비스이기 때문에 피싱 링크를 감출 수 있고, 이 서비스에 익숙한 사용자들은 별 의심 없이 줄어든 악성 링크를 클릭하게 된다."}
{"title": "URL", "subtitle": "단축 URL 피해 사례", "source": "https://www.boannews.com/media/view.asp?idx=114178", "text": "URL 단축 서비스 중 가장 유명한 건 비틀리(Bitly)이다. 이미 사이버 공격자들인 오래 전부터 비틀리를 활용해 자신들의 악성 주소를 짧게 줄여 피해자들을 속여 왔다. 콜롬비아의 사용자들에게 지오링크로 만들어진 링크를 보내기 위해 공격자들은 가짜 체포 영장 이메일을 발송하기도 한다고 한다. 그렇다고 공격이 남미 사용자들에게 국한되어 있는 건 아니다."}
{"title": "URL", "subtitle": "도메인의 중요성", "source": "https://library.gabia.com/contents/domain/13761/", "text": "웹사이트의 고유 주소인 도메인은 왜 중요한 걸까요? 그 이유는 도메인이 단순한 주소 이상의 의미를 가지기 때문입니다. 도메인은 온라인에서 기업의 신뢰성과 전문성을 전달하며, 브랜드의 첫인상을 결정짓는 중요한 역할을 합니다. 또한, 잘 설계된 도메인은 검색 엔진 최적화(SEO)의 핵심적인 요소로 작용하기도 합니다. 결국, 도메인은 온라인에서 기업의 정체성을 성공적으로 구축하는 데 필수적인 디지털 자산입니다. → 기업의 신뢰성, 브랜드 인지도, 검색엔진 최적화(SEO), 트래픽 유입"}
{"title": "URL", "subtitle": "무료 도메인", "source": "https://library.gabia.com/contents/domain/13761/", "text": "무료 도메인은 보통 ‘서브도메인’의 형태로 제공됩니다. 서브도메인은 기본 도메인 이름 앞에 추가되는 부분으로, 예를 들어 example.companyname.com이나 shop.companyname.com과 같은 주소가 이에 해당합니다. 이 경우, 사용자는 도메인을 완전히 소유하는 것이 아니라, 해당 플랫폼에서 관리하는 도메인 사용 권한만 부여받게 됩니다. 도메인 제공자가 무료 도메인을 제공하는 이유는 다른 방식으로 수익을 창출하거나 사용자를 유료 서비스로 유도하기 위함입니다. 예를 들어, 웹사이트 빌더나 블로그 플랫폼은 사용자에게 무료 도메인을 제공하고, 광고를 노출하거나 유료 플랜으로 업그레이드를 유도합니다. 또한, 일부 서비스는 가입이나 사용을 무료로 제공한 뒤, 도메인 갱신 시 유료로 전환하거나 추가 서비스를 유도하기도 합니다. 무료 도메인은 초기 비용 부담을 줄여주는 장점이 있지만, 장기적으로는 더 높은 비용이 발생할 수 있습니다. 이에 따라 많은 기업들은 초기 비용이 더 들더라도 유료 도메인을 선택하고 있습니다."}
{"title": "URL", "subtitle": "무료 도메인, 유료 도메인의 장단점", "source": "https://library.gabia.com/contents/domain/13761/", "text": "무료 도메인은 초기 비용을 절감할 수 있고, 간단한 블로그나 테스트 용도로 적합합니다. 그러나 제공 업체에 소유권이 귀속되어 도메인을 잃을 위험이 있으며, 브랜드 신뢰도나 SEO 측면에서 불리할 수 있습니다. 반면, 유료 도메인은 고유 도메인을 소유할 수 있어 브랜드 신뢰도와 SEO 최적화에 유리합니다. 하지만 구매 및 갱신을 위한 비용이 필요합니다. 도메인 선택 시 이와 같은 장단점과 향후 필요를 고려해 신중히 결정해야 합니다."}
{"title": "URL", "subtitle": "도메인 등록업체 선택 체크리스트", "source": "https://library.gabia.com/contents/domain/13761/", "text": "특히, 유료 도메인을 등록할 때는 신뢰할 수 있는 등록업체를 선택하는 것이 중요합니다. 등록업체는 단순히 도메인을 제공하는 것이 아니라, 장기적인 관리와 지원에도 중요한 역할을 하기 때문입니다. 도메인 등록업체를 선택할 때는 가격뿐만 아니라 여러 항목을 점검해야 합니다. 먼저, 공식 도메인 관리 기관인, ICANN(국제인터넷주소관리기구) 및 KISA(한국인터넷진흥원)의 인증을 받은 공식 등록대행자인지 확인해야합니다. 또한, 오랜 서비스 경험을 바탕으로 신뢰할 수 있는 업체를 선택해야 합니다. 또한, 갱신 알림이나 DNS 설정 등 체계적인 관리 서비스를 제공하는지 점검해야 합니다. 마지막으로, 문제가 발생했을 때 신속하게 대응할 수 있는 고객 지원이 있는지 확인하는 것도 중요합니다."}
{"title": "URL", "subtitle": "단축 URL 대응", "source": "https://www.press9.kr/news/articleView.html?idxno=22884", "text": "단축URL(인터넷접속주소)이 사이버 위협 수단으로 악용되자 네이버 등 서비스 제공업체가 대응에 나섰다. 단축 URL은 복잡하고 긴 주소를 짧게 줄여주지만 실제로 접속되는 웹페이지 정보를 미리 알 수 없다. 피싱 사이트 접속 유도와 악성코드 유포 등 문제가 꾸준히 제기됐다."}
{"title": "URL", "subtitle": "단축 URL 피해 사례 - 네이버", "source": "https://www.press9.kr/news/articleView.html?idxno=22884", "text": "미투두는 2011년 5월부터 모바일 환경 등에서 간편한 단축URL 이용·공유 기능을 제공한 서비스다. 입력창에 URL을 입력하면 단축 형태(http://me2.do/********)로 변환한다. 네이버 서비스뿐만 아니라 외부 웹페이지나 게시글도 모두 같은 포맷으로 변환 가능하다. 생성한 단축URL 목록과 해당 단축URL 클릭 수 등을 한 페이지에서 관리한다. 편의성이 높지만 네이버 카페와 지식인 등에 미투두 단축URL 주소를 이용한 피싱 댓글·답변이 등장해 피해가 발생했다. 네이버 자체 서비스 단축URL과 도메인이 같은데다 실제로 연결되는 URL을 사전에 확인하기 어려운 탓이다. 답변 등에 달린 단축URL을 클릭하면 네이버 로그인 페이지와 동일한 디자인으로 위장한 피싱 페이지로 연결된다. 그 이후 아이디와 비밀번호 입력을 유도하는 형태가 대표적이다. 피싱 페이지를 이용한 계정 정보 탈취는 비교적 단순한 기법이지만 피해가 끊이지 않는다. 최근에는 개인 계정 도용을 넘어 기업과 기관 등을 노린 지능형지속위협(APT) 공격 초기 단계로 활용된다."}
{"title": "URL", "subtitle": "단축 URL 피해 사례", "source": "https://www.press9.kr/news/articleView.html?idxno=22884", "text": "보안업체 빛스캔은 올해 초 단축URL 기법을 활용한 대규모 악성코드 유포 활동을 포착했다. 보안업계는 사이버 범죄 피해 예방을 위해 단축URL 링크를 함부로 클릭하지 않을 것을 권고한다. 업계 관계자는 “모바일 환경에서도 청첩장, 택배 배송 알림, 이벤트 정보·광고 등이 단축URL로 전송되면서 무심코 눌러보는 사람이 많다”며 “악성코드 감염을 막으려면 연결 정보를 미리 알기 어려운 단축URL은 실행하지 않는 편이 좋다”고 조언했다. 일부 서비스가 제공하는 미리보기 기능도 유용하다. 국내 사용자가 많은 해외 단축URL 서비스 비틀리는 단축된 주소 뒤에 더하기 표시(+)를 붙여 주소창에 입력하면 사이트 내에서 단축 전 원문 주소와 클릭 수 정보 등을 보여준다."}
{"title": "URL", "subtitle": "단축 URL 피해 사례 - 네이버", "source": "https://www.newsis.com/view/NISX20240903_0002874055", "text": "네이버 단축 URL 'me2.do', 내달 종료…\"피싱 악용 방지\" 2011년 서비스 시작 후 13년 만에 종료 기존 단축URL도 향후 연결 중단 예정 - 네이버가 2011년부터 운영하던 단축 URL 서비스 'me2.do'를 다음 달 종료한다. 이날 이후로는 앞으로 'me2.do'라는 URL을 만들 수 없다. 단축 URL을 악용한 피싱 사례가 급증하면서 이용자 보호 차원이라는 게 회사 측 설명이다. 4일 네이버에 따르면 'me2.do' 단축 URL 서비스가 다음 달 7일 종료한다."}
{"title": "URL", "subtitle": "프래그먼트(Fragment)", "source": "https://en.wikipedia.org/wiki/URI_fragment", "text": "컴퓨터 하이퍼텍스트에서 URI 조각은 다른 기본 리소스에 종속된 리소스를 참조하는 문자열 입니다 . 기본 리소스는 URI( Uniform Resource Identifier )로 식별되고, 조각 식별자는 종속 리소스를 가리킵니다. 해시 마크로 시작하는 조각 식별자는 문서 URL# 의 마지막 부분(선택 사항)입니다 . 일반적으로 해당 문서의 일부를 식별하는 데 사용됩니다. 프래그먼트 식별자는 URI의 나머지 부분과 다르게 작동합니다. 웹 서버 의 개입 없이 클라이언트 측에서만 처리됩니다."}
{"title": "URL", "subtitle": "앵커 정의", "source": "https://developer.mozilla.org/en-US/docs/Web/URI/Reference/Fragment", "text": "프래그먼트는 리소스 자체의 다른 부분을 가리키는 앵커입니다. 다음 URL http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument 에서 #SomewhereInTheDocumentURL의 일부로 , 리소스 자체의 다른 부분에 대한 앵커 역할을 합니다. 앵커는 리소스 내부의 일종의 \"북마크\" 역할을 하며, 브라우저에 해당 지점의 콘텐츠를 표시할 방향을 알려줍니다. 예를 들어 HTML 문서에서 브라우저는 앵커가 정의된 지점까지 스크롤합니다. 앵커는 요소의 속성일 수 있으며 ,id 브라우저는 해당 요소까지 스크롤합니다."}
{"title": "URL", "subtitle": "URI 정의", "source": "https://auth0.com/blog/url-uri-urn-differences/", "text": "URI는 Uniform Resource Identifier 의 약자입니다 . 간단히 말해, 리소스를 식별하는 문자열입니다. 구문적 관점에서 URI 문자열은 대부분 URL과 동일한 형식을 따릅니다! URL과 URI는 같은 걸까요? 글쎄요, 사실은 그렇지 않습니다. URL과 URI는 모두 RFC 3986 이라는 동일한 사양을 따릅니다 . 하지만 URL은 리소스의 위치를 ​​알려주는 반면 , URI는 단순히 리소스를 식별할 뿐입니다. 즉, URI는 리소스를 가져오는 주소로 사용되는 것이 아니라 식별자로 사용됩니다. 반면 URL은 URI입니다. 동일한 URI 구문을 사용한다는 점 외에도, URL은 주소를 통해 리소스를 식별합니다. 다시 말해, URL은 리소스를 식별하는 동시에 해당 리소스에 접근할 수 있는 방법을 알려주는 식별자입니다. 간단히 말해서 URL은 URI의 하위 집합입니다."}
{"title": "URL", "subtitle": "URN 정의", "source": "https://auth0.com/blog/url-uri-urn-differences/", "text": "URN은 URL과 URI만큼 널리 쓰이지는 않지만, 같은 계열에 속합니다. URN은 Uniform Resource Name의 약자로, 리소스가 더 이상 존재하지 않더라도 영구적 으로 리소스를 식별하는 데 사용됩니다. URL과 달리 URN은 리소스의 위치에 대한 정보를 제공하지 않고, 순수 URI처럼 단순히 리소스를 식별합니다. 특히 URN은 RFC 2141 urn에 명시된 바와 같이 다음과 같은 구조를 갖는 URI입니다. URN의 예는 다음과 같습니다. urn:isbn:1234567890, urn:ISSN:0167-6423, urn:ietf:rfc:2648 이러한 URN은 다양한 유형의 객체를 식별합니다. 예를 들어, ISBNurn:isbn:1234567890 시스템을 통해 출판물을 식별하거나, ISSN 시스템을 통해 출판물을 식별하거나, IETF 에서 발행한 RFC를 식별합니다. URI와 달리 URN은 공공 표준 기관에서 발급한 식별자이며, 컴퓨터 및 소프트웨어 시스템뿐만 아니라 인간 활동에서 표준 식별자가 필요한 모든 것을 포함할 수 있습니다."}
{"title": "URL", "subtitle": "RFC 정의", "source": "https://www.rfc-editor.org/", "text": "RFC 시리즈(ISSN 2070-1721)에는 인터넷 엔지니어링 태스크포스( IETF ), 인터넷 연구 태스크포스(IRTF), 인터넷 아키텍처 위원회( IAB ) , 독립 제출 및 편집 의 5개 부문에서 생산된 사양 및 정책 문서를 비롯하여 인터넷에 대한 기술 및 조직 문서가 포함되어 있습니다."}
{"title": "URL", "subtitle": "URL 프래그먼트", "source": "https://developers.google.com/search/docs/crawling-indexing/url-structure?hl=ko&rut=0b7d977527e108607d967a006b821a81fbc2d99fdceee5052b3b49168ff6c275", "text": "프래그먼트를 사용해 페이지의 콘텐츠를 변경하지 마세요. Google 검색은 일반적으로 URL 프래그먼트를 지원하지 않습니다. 다음은 URL 프래그먼트의 예입니다. https://example.com/#/potatoes"}
{"title": "URL", "subtitle": "URL 매개변수", "source": "https://developers.google.com/search/docs/crawling-indexing/url-structure?hl=ko&rut=0b7d977527e108607d967a006b821a81fbc2d99fdceee5052b3b49168ff6c275", "text": "URL 매개변수를 지정할 때는 다음과 같은 일반적인 인코딩을 사용하세요. 등호(=)를 사용하여 키-값 쌍을 구분하고 앰퍼샌드(&)를 사용하여 매개변수를 추가합니다. 키-값 쌍 내에 동일한 키의 값을 여러 개 나열하려면 쉼표(,)와 같이 IETF STD 66과 충돌하지 않는 문자를 사용하면 됩니다."}
{"title": "URL", "subtitle": "URL 매개변수 - 권장", "source": "https://developers.google.com/search/docs/crawling-indexing/url-structure?hl=ko&rut=0b7d977527e108607d967a006b821a81fbc2d99fdceee5052b3b49168ff6c275", "text": "① 등호(=)를 사용하여 키-값 쌍을 구분하고 앰퍼샌드(&)를 사용하여 매개변수를 추가합니다. https://example.com/category?category=dresses&sort=low-to-high&sid=789 ② 쉼표(,)를 사용하여 동일한 키의 여러 값을 나열하고, 등호(=)를 사용하여 키-값 쌍을 구분하고, 앰퍼샌드(&)를 사용하여 매개변수를 추가합니다."}
{"title": "URL", "subtitle": "URL 매개변수 - 권장하지 않음", "source": "https://developers.google.com/search/docs/crawling-indexing/url-structure?hl=ko&rut=0b7d977527e108607d967a006b821a81fbc2d99fdceee5052b3b49168ff6c275", "text": "① 콜론(:)을 사용하여 키-값 쌍을 구분하고 각괄호([ ])를 사용하여 매개변수를 추가합니다. https://example.com/category?[category:dresses][sort:price-low-to-high][sid:789] 쉼표(,)를 사용하여 동일한 키의 여러 값을 나열하고, 등호(=)를 사용하여 키-값 쌍을 구분하고, 앰퍼샌드(&)를 사용하여 매개변수를 추가합니다. https://example.com/category?category=dresses&color=purple,pink,salmon&sort=low-to-high&sid=789 ② 쉼표 한 개(,)를 사용하여 키-값 쌍을 구분하고 쉼표 두 개(,,)를 사용하여 매개변수를 추가합니다. https://example.com/category?category,dresses,,sort,lowtohigh,,sid,789 또는 https://example.com/category?category=dresses&color=purple,pink,salmon&sort=low-to-high&sid=789"}
{"title": "URL", "subtitle": "URL 길이", "source": "https://developers.google.com/search/docs/crawling-indexing/url-structure?hl=ko&rut=0b7d977527e108607d967a006b821a81fbc2d99fdceee5052b3b49168ff6c275", "text": "권장하지 않음(읽을 수 없는 긴 ID 번호) https://example.com/index.php?topic=42&area=3a5ebc944f41daa6f849f730f1"}
{"title": "URL", "subtitle": "URL 대소문자 구분", "source": "https://developers.google.com/search/docs/crawling-indexing/url-structure?hl=ko&rut=0b7d977527e108607d967a006b821a81fbc2d99fdceee5052b3b49168ff6c275", "text": "URL은 대소문자를 구분함: IETF STD 66을 준수하는 다른 HTTP 클라이언트와 마찬가지로 Google 검색의 URL 처리는 대소문자를 구분합니다. 예를 들어 Google은 /APPLE과 /apple을 모두 자체 콘텐츠가 있는 고유한 URL로 취급합니다. URL의 대소문자 텍스트가 웹 서버에서 동일하게 처리되는 경우 모든 텍스트의 대소문자를 동일하게 변환하세요. 그러면 Google에서 URL이 동일한 페이지를 참조하는지 더 쉽게 판단할 수 있습니다."}
{"title": "URL", "subtitle": "Punycode", "source": "https://abnormal.ai/blog/punycode-attack-protecting-your-inbox-from-deceptive-domains", "text": "퓨니코드(Punycode)는 ASCII가 아닌 문자로 구성된 IDN을 ASCII 문자만 지원하는 도메인 이름 시스템(DNS)과 호환되는 형식으로 인코딩하는 방법입니다. é, а, 日과 같은 문자를 ASCII 호환 형식으로 변환함으로써, 퓨니코드는 악센트 부호가 있는 문자나 라틴 문자가 아닌 문자가 포함된 도메인 이름을 사용할 수 있도록 하여 기존 인프라와의 상호 운용성을 유지하면서도 인터넷을 더욱 포용적으로 만듭니다. 퓨니코드로 인코딩된 도메인 이름은 특수 접두사 \"xn--\"로 구분됩니다. 예를 들어, 움라우트 \"ü\"를 포함하는 IDN münchen.com은 퓨니코드로 xn--mnchen-3ya.com으로 표현됩니다. 이 과정을 통해 DNS 시스템과의 호환성을 보장하는 동시에 사용자는 브라우저와 이메일 클라이언트에서 인코딩되지 않은 원본 도메인 이름을 볼 수 있습니다."}
{"title": "URL", "subtitle": "Punycode를 악용하는 방법 - 동형이의어(homograph) 공격 수행", "source": "https://abnormal.ai/blog/punycode-attack-protecting-your-inbox-from-deceptive-domains", "text": "동형이의어 공격(homograph phishing)은 유니코드와 ASCII 문자의 시각적 유사성을 이용하여 정상적인 도메인과 동일하게 보이는 악성 도메인을 생성합니다. 예를 들어, 공격자는 키릴 문자 \"о\"를 ASCII 문자 \"o\"로 대체하여 \"microsоft.com\"과 같은 사기성 도메인을 생성할 수 있습니다. 이러한 도메인은 진짜 도메인처럼 보이지만 악성 사이트로 리디렉션됩니다. 최신 브라우저는 퓨니코드 도메인을 유니코드 형식으로 변환하는 경우가 많아 공격을 더욱 은폐하고 주소창에 사기성 도메인이 진짜 도메인처럼 보이도록 합니다. 동형이의어 공격은 유사 도메인 과 유사하며, 둘 다 속임수에 의존합니다. 그러나 동형이의어 공격은 유니코드를 사용하여 시각적으로 동일한 사칭에 초점을 맞추는 반면, 더 광범위한 유사 도메인 전술은 완전히 다른 문자를 대체하거나 글자를 추가하는 것과 같은 미묘한 변형을 포함합니다. 수천 개의 유니코드 문자를 사용할 수 있기 때문에 위협 행위자는 실제 도메인과 구별할 수 없을 정도로 거의 무한한 수의 사기성 도메인을 생성할 수 있습니다."}
{"title": "URL", "subtitle": "Punycode를 악용하는 방법 - 맬웨어 페이로드 난독화", "source": "https://abnormal.ai/blog/punycode-attack-protecting-your-inbox-from-deceptive-domains", "text": "공격자는 퓨니코드를 악용하여 악성 URL을 자동화된 보안 도구의 알려진 위협 검색을 회피하는 형식으로 인코딩하여 악성 코드 배포 메커니즘을 은폐할 수도 있습니다. 예를 들어, \"xn--downld-f43a.com\"과 같은 URL은 패턴 인식을 통해 악성 콘텐츠를 식별하는 기존 필터링 시스템에는 문제가 없어 보일 수 있습니다. 피싱 이메일에 이러한 난독화된 URL을 삽입함으로써 위협 행위자는 사용자가 해당 URL을 클릭할 가능성을 높이고, 사용자 인식 및 자동화된 방어 체계를 모두 우회합니다. 이러한 전술은 랜섬웨어 및 드라이브바이 다운로드와 같은 악성코드 공격을 조장하는 데 특히 효과적입니다. 퓨니코드로 인코딩된 URL은 탐지를 우회하고 대응 조치를 지연시킴으로써 악성코드가 더욱 확산될 수 있도록 하여 보안팀이 대응하기 전에 잠재적 피해를 증가시킵니다."}
{"title": "URL", "subtitle": "Punycode를 악용하는 방법 -SOC 분석가 회피", "source": "https://abnormal.ai/blog/punycode-attack-protecting-your-inbox-from-deceptive-domains", "text": "숙련된 SOC 분석가조차도 퓨니코드 기반 위협을 식별하는 데 어려움을 겪을 수 있습니다. 분석가는 도메인 스푸핑 이나 피싱 URL의 명확한 사례를 탐지할 수 있지만, 퓨니코드의 인코딩은 악성 도메인의 실제 속성을 파악하기 어렵게 만듭니다. 퓨니코드로 인코딩된 URL은 종종 무작위 또는 인코딩된 데이터로 나타나 분석 과정에서 즉각적인 의심을 불러일으키지 않을 수 있습니다. 예를 들어, \"보낸 사람\" 필드에 있는 퓨니코드 도메인이 Base64 인코딩처럼 보일 수 있으며, 이는 분석가가 해당 도메인을 우선순위에서 낮추는 결과를 초래할 수 있습니다. 공격자는 퓨니코드 도메인을 단축 URL에 포함시키거나 HTML이 풍부한 피싱 이메일 에 중첩하여 탐지를 더욱 복잡하게 만듭니다. 퓨니코드 이상을 찾아내는 특수 도구가 없다면 이러한 위협은 경고의 배경 소음에 섞여 사이버 범죄자에게 맬웨어를 배포하거나 손상된 시스템 내에서 지속성을 확립하는 등의 목표를 달성할 수 있는 시간이 더 많아질 수 있습니다."}
{"title": "URL", "subtitle": "Punycode를 악용하는 방법 - 레거시 보안 솔루션 우회", "source": "https://abnormal.ai/blog/punycode-attack-protecting-your-inbox-from-deceptive-domains", "text": "보안 이메일 게이트웨이(SEG, secure email gateways)와 같은 기존 보안 솔루션은 악성 활동을 탐지하기 위해 기존의 패턴 인식 및 키워드 필터링에 의존합니다. 퓨니코드는 ASCII와 호환되지만, SEG는 이러한 도메인의 유니코드 표현을 디코딩하고 분석하지 못하는 경우가 많아 시각적으로 기만적이거나 동형이의어가 있는 도메인이 탐지를 우회할 수 있습니다. 또한, SEG는 일반적으로 도메인의 음성 또는 시각적 유사성을 평가하지 않으므로, 퓨니코드로 제작된 악성 도메인은 상황 인식이 부족한 정적 필터링 방식과 정규식 기반 규칙을 우회할 수 있습니다. 예를 들어, SEG는 \"badsite.com\"을 악성으로 표시하지만 인코딩된 도메인이 동일한 유해 사이트로 리디렉션되는 경우에도 \"xn--badsite-123.com\"을 위협으로 인식하지 못할 수 있습니다. 퓨니코드는 공격자가 차단 목록 메커니즘을 회피하는 데에도 도움이 될 수 있습니다. 알려진 악성 도메인의 정적 항목에 의존하는 기존 차단 목록은 퓨니코드에서 생성된 변형을 탐지하는 데 어려움을 겪습니다. 이러한 변형은 아직 악성으로 표시되지 않은 \"새로운\" 도메인으로 표시되기 때문입니다. 퓨니코드를 활용하여 약간의 변형을 생성함으로써 위협 행위자는 정적 방어 체계를 우회하여 탐지되지 않은 채 피해자를 계속 공격할 수 있습니다."}
{"title": "URL", "subtitle": "퓨니코드 공격 사례", "source": "https://abnormal.ai/blog/punycode-attack-protecting-your-inbox-from-deceptive-domains", "text": "위협 행위자가 비싱 공격에서 코인베이스를 사칭: 첫 번째 사례에서 위협 행위자는 인기 있는 암호화폐 거래소인 Coinbase를 사칭하여 대상에게 지원 티켓과 관련된 사기성 알림을 이메일로 보냈습니다. 언뜻 보기에 모든 것이 진짜인 것처럼 보입니다. 발신자 이름은 no-reply@coinbase[.]com으로 보이고, 이메일 형식은 Coinbase에서 보낸 실제 통신과 일치하며, 메시지에는 대상의 성명이 모두 포함되어 있습니다. 그러나 이메일 헤더를 검사해 보면 발신자 주소에 퓨니코드가 포함되어 있고 \"coinbase[.]com\"의 \"i\"는 실제로 유니코드 문자 \"ı\"인 것이 분명해집니다."}
{"title": "URL", "subtitle": "퓨니코드 공격 사례", "source": "https://abnormal.ai/blog/punycode-attack-protecting-your-inbox-from-deceptive-domains", "text": "공격자가 송장 사기 시도에서 임원으로 가장: 두 번째 사례에서 가해자는 산업 장비 회사의 임원을 사칭하여 공급업체에 이메일을 보내 미지급 송장에 대한 정보를 요청했습니다. 다시 한번 말씀드리지만, 이 메시지는 처음에는 합법적인 것처럼 보입니다. 공급업체는 연말에 이런 종류의 요청을 받더라도 놀라지 않을 것이고, 이메일에는 당장 위험 신호가 없습니다. 심지어 사칭된 임원의 실제 서명까지 포함되어 있습니다. 하지만 다시 한번, 축약되지 않은 이메일 헤더를 검토해 보니 퓨니코드가 사용되었고 \"i\"가 \"ì\"로 대체된 사실이 드러났습니다."}
{"title": "URL", "subtitle": "비싱(Vishing) 정의", "source": "https://www.cisco.com/site/us/en/learn/topics/security/what-is-vishing.html", "text": "비싱(Vishing)은 보이스 피싱(Voice Phishing)의 줄임말로, 피해자를 속여 로그인 정보, 신용카드 번호, 은행 계좌 정보와 같은 민감한 정보를 제공하도록 유도하는 사기성 전화나 음성 메시지를 말합니다. 이러한 정보는 사기, 신원 도용, 금융 사기 등의 범죄 활동에 악용될 수 있습니다. 피싱 공격은 흔하고 막대한 비용이 발생합니다. 2022년 피싱은 데이터 유출의 두 번째로 흔한 원인으로 , 기업들은 평균 491만 달러의 유출 비용을 지출했습니다. 비싱 사기에서 공격자는 평판이 좋은 기관(피해자의 은행, 국세청, 택배 배송 서비스 등) 소속인 것처럼 가장하고 예상치 못한 전화를 겁니다. 신뢰할 수 있는 기관으로 위장하기 위해 수신자 부담 전화번호를 사용하거나 인터넷 전화(VoIP) 기술을 사용할 수도 있습니다. 하지만 이러한 공격은 전화 통화에만 국한되지 않습니다. 많은 비싱 공격은 피싱 이메일로 시작하여 수신자에게 특정 번호로 전화를 걸도록 유도합니다. 통화가 연결되면 사기꾼은 소셜 엔지니어링 전략을 사용하여 대상에게 개인 정보를 제공하도록 유도합니다. 비싱 사기는 노년층, 신입 직원, 그리고 업무상 외부 전화를 정기적으로 받는 직원을 표적으로 삼는 경우가 많습니다. 비싱 공격을 방어하려면 경계 태세, 정보에 기반한 예방 조치, 그리고 강력한 이메일 보안 솔루션이 필요합니다."}
{"title": "URL", "subtitle": "SSL/TLS 인증서 유효기간", "source": "https://www.ncsc.go.kr/cop/bbs/selectBoardArticle.do?bbsId=Notification_main&nttId=205980", "text": "2029년부터 SSL/TLS 인증서 유효기간 47일로 단축 * SSL/TLS certificate lifespans reduced to 47 days by 2029 (bleepingcomputer.com) CA/Browser Forum은 보안 강화를 위해 SSL/TLS 인증서의 유효기간을 2029년까지 단계적으로 47일로 줄이기로 결정. 이는 인증서 유출, 구식 암호화, 만료 방치 등의 위험을 줄이고 자동 갱신 시스템 도입을 촉진하기 위한 조치. 단축 일정은 2026년 200일, 2027년 100일, 2029년 47일로 진행되며, 웹사이트 운영자들에게 자동화가 사실상 필수가 될 전망"}
{"title": "URL", "subtitle": "SSL 인증서 정의", "source": "https://cert.crosscert.com/ssl-%EC%A0%95%EC%9D%98/#", "text": "보안서버 SSL인증서는 사용자의 인터넷 브라우저와 사이트의 웹서버 상의 암호화 통신을 지원하여 해킹을 당하더라도 고객의 개인정보를 소중하게 지켜 줍니다. SSL 인증서는 웹서버와 웹사이트에서 이루어지는 모든 정보전송을 https 암호화프로토콜을 통해 안전하게 전송되도록 하는 인증서 입니다. SSL을 사용하면 로그인, 회원가입, 예약 등의 개인정보를 입력하더라도 스니핑(sniffing)에 고객의 개인정보를 소중하게 지켜 줍니다. 또한 SSL 인증서는 전자상거래 기업 또는 공공기관의 신원을 확인하여 고객의 신뢰를 얻을 수 있습니다."}
{"title": "URL", "subtitle": "SSL 인증서 작동 방법", "source": "https://cert.crosscert.com/ssl-%EC%A0%95%EC%9D%98/#", "text": "SSL 인증서는 전자지불, 금융거래, 신용 카드 번호 등과 같은 고객 정보를 안전하게 전달할 수 있는 암호화 통신 채널을 구축합니다. ● SSL “핸드셰이크”:  SSL이 설치된 웹사이트에서는, 최상의 보안 수준 제공을 위해 브라우저에 대한 암호화 통신 채널을 자동으로 생성합니다. ● HTTPS와 자물쇠:  암호화 통신 채널이 생성되면 접속한 URL이 HTTP가 아닌 HTTPS 표시되며 자물쇠가 표시됩니다. 이는 개인 정보 뿐만 아니라 고객의 사이트 활동을 안전하게 공유할 수 있음을 의미합니다. ● 신뢰된 사이트: 방문해도 안전한 사이트인지 확인하려면 해당 사이트의 보안 정보를 확인해 보세요. 또한 이제 웹서버와 주고 받는 모든 정보가 암호화되어 데이터를 거의 해킹할 수 없게 됩니다."}
{"title": "URL", "subtitle": "SSL 인증 사용 효과", "source": "https://cert.crosscert.com/ssl-%EC%A0%95%EC%9D%98/#", "text": "스니핑 방지(Sniffing Prevention), 피싱 방지 (Phishing Prevention), 데이터변조 방지 (Data Modulation Prevention), 기업 신뢰도 향상 (Improved Business Confidence)을 가지고 있습니다."}
{"title": "URL", "subtitle": "크롬에서  '주의요함' 뜨는 경우", "source": "https://cert.crosscert.com/ssl-%EC%A0%95%EC%9D%98/#", "text": "2018년 10월 부터 구글 크롬(Chrome)에서는 모든 웹사이트 http로 접속시 ‘주의요함‘이라고 표시하고 있습니다. 이는 크롬에서 모든 사이트 접속을 https 변화시키기 위한 발판이라고 볼 수 있습니다. ‘주의요함’이라는 경고창을 없애려면 ssl인증서를 설치하고 소스를 https로 접속되도록 수정하면 됩니다."}
{"title": "URL", "subtitle": "EV 인증서 정의", "source": "https://cert.crosscert.com/ssl-%EC%A0%95%EC%9D%98/#", "text": "EV SSL 인증서는 웹브라우저와 웹서버간의 암호화 통신 시, 사용자에게 서버의 안전성과 신뢰성을 전달하기 위하여 브라우저 주소 창을 녹색으로 변화시키고 SSL인증서입니다.(IE기준) 크롬에서는 주소창 앞부분에 영문 회사(기관)명과 국가코드를 보여줍니다. EV SSL 일반 인증서에 비해 보다 심층심사를 하며 사용자가 바로 회사명을 볼 수 있기 때문에 클라이언트는 일반 SSL보다 더 안심하고 인터넷 사용을 즐길 수 있습니다."}
{"title": "URL", "subtitle": "SSL 인증서", "source": "https://cert.crosscert.com/ssl-%EC%A0%95%EC%9D%98/#", "text": "SSL인증서는 보안강도에 따라 3가지로 분류가 됩니다. 도메인인증을 하는 DV인증서(Domain Validation), 인증서에 기관명과 정보를 보여주는 OV인증서(Organization-Validated),그리고 최상의 보안을 유지해주는 EV인증서 (Extended-Validation)로 나뉩니다. 보안강도는 암호화 수준이 아닌 심사에 따른 보안수준을 말하는 것이며 DV<OV<EV 순으로 높아집니다."}
{"title": "URL", "subtitle": "HTTP", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "HTTP(HyperText Transfer Protocol)란 하이퍼텍스트 전송 프로토콜로, 서버/클라이언트 모델을 따라 데이터를 주고받기 위한 프로토콜입니다. HTTP 프로토콜을 사용하여 통신을 수행하면 홈페이지 URL이 ‘http://’로 시작합니다. 간단히 말하자면, HTTP 프로토콜은 네트워크 통신을 작동하게 하는 기본 기술입니다."}
{"title": "URL", "subtitle": "HTTPS", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "HTTPS(HyperText Transfer Protocol Secure)란 HTTP의 확장 버전으로 보다 안전한 버전입니다. HTTPS 프로토콜을 사용하여 통신을 수행하면 홈페이지 URL이 ‘https://’로 시작하고, 통신하는 과정에서 HTTPS는 전송 내용을 암호화합니다. 암호화를 통해 발신자와 수신자를 제외한 중간 매개체에서 통신 내용을 확인할 수 없기 때문에, 발신자가 전송한 암호 및 기밀문서를 보호할 수 있습니다. HTTP와 HTTPS의 가장 큰 차이점은 보안입니다. HTTPS는 HTTP와 다르게, 브라우저와 서버가 데이터를 전송하기 전에 안전하고 암호화된 연결을 설정하기 때문에 보다 안전하다는 장점이 있습니다. HTTPS는 SSL/TLS 프로토콜을 통해 세션 데이터를 암호화합니다."}
{"title": "URL", "subtitle": "HTTP 작동방식", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "HTTP는 OSI(Open Systems Interconnection) 네트워크 통신 모델의 애플리케이션 계층 프로토콜로, 여러 유형의 요청과 응답을 정의하고 있습니다. 숫자 코드 및 데이터 양식으로 서버에서 다양한 유형의 HTTP 응답을 전송하는데요. 몇 가지 예시를 살펴보겠습니다. ex) 200 – OK (정상), 400 – Bad request (잘못된 요청), 404 – Resource not found (리소스를 찾을 수 없음). HTTP는 암호화되지 않은 데이터를 전송해, 제3자가 그 정보를 가로채고 읽을 수 있습니다."}
{"title": "URL", "subtitle": "HTTPS", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "HTTPS는 HTTP 요청 및 응답을 SSL/TLS 기술에 결합합니다. SSL/TLS는 HTTPS의 암호화 방식으로, 이를 통해 HTTPS 암호화를 진행하고 발신자와 수신자만 해당 암호를 해독하여 정보를 주고받을 수 있습니다. HTTPS 암호화를 책임지는 SSL 인증서는 다음과 같이 동작합니다. 기존의 HTTP는 클라이언트 서버 통신을 진행할때 두 당사자만 믿고 통신하게 됩니다. 하지만 HTTPS는 제3자가 등장합니다. 즉 신뢰할 수 있는 다른 기관이 존재하고 해당 기관이 서버 또는 클라이언트에 SSL 인증서를 발급하여 해당 당사자를 보증하는 방법입니다. 위 방법을 통해 우리는 접속할 사이트가 진짜 은행 사이트인지 가짜 은행 사이트인지 SSL 인증서를 통해 신뢰할 수 있게 됩니다. 그 후 신뢰된 당사자 간 암호화된 통신을 진행하면 외부에서는 어떤 내용으로 통신하는지 알 수 없습니다."}
{"title": "URL", "subtitle": "HTTPS 전환 중요성 - 보안에 우수한 HTTPS", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "보안에 우수한 HTTPS: HTTPS는 HTTP와 달리 모든 데이터를 암호화된 형태로 전송합니다. HTTP는 사용자가 민감한 데이터를 전송할 때 제3자가 네트워크를 통해 해당 데이터를 가로챌 수 없어 보안 측면에서 더 우수합니다. 예를 들어, 신용카드 세부 정보 혹은 고객 개인 정보와 같은 민감한 정보를 보호하기 위해서는 HTTPS를 사용하는 것이 좋습니다."}
{"title": "URL", "subtitle": "HTTPS 전환 중요성 - 신뢰성이 높은 HTTPS", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "신뢰성이 높은 HTTPS: HTTP는 HTTPS에 비해 신뢰성이 더 낮기 때문에 검색 엔진은 HTTP 웹사이트 순위를 HTTPS보다 낮게 지정합니다. 또한, 브라우저 주소 표시줄에서 URL 옆에 자물쇠 아이콘을 배치해 사용자에게 HTTPS 연결을 표시하고, 사용자는 추가 보안에 대한 신뢰로 HTTP보다 HTTPS를 선호합니다."}
{"title": "URL", "subtitle": "HTTPS 전환 중요성 - SEO에 좋은 영향을 주는 HTTPS", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "SEO에 좋은 영향을 주는 HTTPS: 앞에서 잠시 언급했듯이, 구글은 몇 년 전부터 HTTPS를 순위 결정 신호로 사용하고 있습니다. HTTP에서 HTTPS로의 전환은 SEO (검색엔진최적화)에 좋은 영향을 미칩니다. 즉, HTTPS를 사용하지 않을 경우 검색 결과에서 하단으로 밀려나게 됩니다. 또한, 구글은 HTTPS를 사용하지 않을 경우 URL 창에 “안전하지 않음”이라는 경고를 띄우는 패널티를 적용하고 있습니다."}
{"title": "URL", "subtitle": "HTTPS 전환 중요성", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "위에서 살펴본 바와 같이 HTTPS는 HTTP의 후속 모델입니다. 따라서 HTTP를 사용할지 HTTPS를 사용할지 결정하기 보단 무조건 보안을 위해 HTTPS를 사용해야 합니다. 추가로 2021년부터 대부분의 브라우저는 HTTP로 통신하는 웹사이트에서 경고 문구를 발생시킵니다. 이 때문에 HTTP 통신을 사용해서 사이트에 방문하게 되면 경고 문구 때문에 바로 진입하지 못하게 됩니다. 이처럼, 사업자로서 고객의 정보를 보호하고 클라이언트 유입과 검색 결과 노출을 위해 웹사이트를 HTTPS로 전환해야 합니다."}
{"title": "URL", "subtitle": "HTTPS 설정 방법", "source": "https://seo.tbwakorea.com/blog/https-http/", "text": "기본적으로 HTTPS는 443 포트를 통해 통신을 진행합니다. 따라서 서버 측에서 코드를 통해 HTTP 통신 방식인 80번 포트를 막고 443 포트를 열어 주셔야 합니다. 또는 80 포트를 열어두지만 80 → 443으로 리디렉션 시켜 최종적으로 443 포트에서 통신이 이루어지게 만들어야 합니다. 서버단 443 포트를 오픈하셨으면 HTTPS 통신을 하실 수 있습니다. 하지만 SSL 인증서가 없기 때문에 신뢰할 수 없는 홈페이지라는 알림이 발생합니다. 이 문제를 해결하기 위해서 신뢰할 수 있는 SSL 인증서 판매 기관에 매년 일정 금액을 지불하고 SSL 인증서를 구매해 발급받아야 합니다. SSL 인증서를 발급받으면 3개의 파일이 주어집니다. 각 파일은 csr키, 비밀키, 인증키로 서버 정보가 담긴 키와 인증서를 발급해 준 신뢰 기관 정보키들로 구성됩니다. 이 파일들을 운영하시는 서버 환경에 맞게 업로드하고 적용해야 HTTPS 통신을 오류창 없이 완벽하게 진행할 수 있습니다. 간략하게 HTTPS 통신 설정 및 SSL 적용 방법에 대해서 알아보았습니다. 사용자에 따라 서버 환경이 다르고 적용하는 방법도 복잡하기 때문에 실제로 적용을 원하시는 분은 전문 업체나 호스팅서버에 문의하시길 바랍니다."}
{"title": "URL", "subtitle": "SSL 인증서 정의", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%95%84%EC%9A%94%EC%84%B1-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-https-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4/", "text": "SSL은 Secure Sockets Layer의 약자로, 인터넷에서 데이터 전송 시 보안을 강화하기 위해 설계된 암호화 프로토콜입니다. 이 인증서는 웹사이트에 보안 연결을 제공하여 방문자의 개인 정보와 민감한 데이터를 보호하는 데 중심적인 역할을 합니다. SSL 인증서는 웹사이트 소유자와 사용자 간의 안전한 통신을 보장하기 위하여 암호화된 채널을 생성하는 디지털 인증서입니다. 이는 사용자의 웹 브라우저와 서버 간의 통신을 보호하여 중간에 있는 공격자가 데이터를 가로채는 것을 방지합니다."}
{"title": "URL", "subtitle": "SSL 인증서 작동원리", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%95%84%EC%9A%94%EC%84%B1-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-https-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4/", "text": "1단계: 사용자가 SSL 인증서를 적용한 웹사이트에 접속하면, 서버는 SSL 인증서를 사용자에게 보냅니다. 2단계: 사용자의 브라우저는 이 인증서를 검증하여 웹사이트의 신뢰성을 확인합니다. 3단계: 인증이 완료되면, 서버와 브라우저 간의 보안 연결이 수립되며, 이때 전송되는 데이터는 암호화되어 안전하게 보호됩니다. 이러한 과정은 웹사이트를 통해 전송되는 모든 데이터가 안전하게 보호되도록 하는데, 사용자는 보안 연결이 수립되었음을 알려주는 자물쇠 아이콘을 통해 이를 확인할 수 있습니다. 이러한 보안 통신 덕분에 고객은 웹사이트에서의 거래나 개인 정보 입력에 있어 더 높은 신뢰를 갖게 됩니다."}
{"title": "URL", "subtitle": "HTTP 한계", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%95%84%EC%9A%94%EC%84%B1-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-https-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4/", "text": "데이터 가로채기: 공격자는 HTTP 연결을 통해 전송되는 데이터를 중간에서 가로챌 수 있습니다. 정보 변조: 해커가 데이터에 접근하여 내용을 변조할 수 있는 위험이 존재합니다. 신뢰성 부족: 사용자는 HTTP 웹사이트에서 제공되는 정보의 신뢰성을 쉽게 의심할 수 있습니다."}
{"title": "URL", "subtitle": "HTTPS", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%95%84%EC%9A%94%EC%84%B1-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-https-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4/", "text": "데이터 암호화: 사용자의 웹 브라우저와 서버 간의 통신이 암호화되어, 제3자가 데이터를 가로채더라도 내용을 확인할 수 없습니다. 인증 보장: SSL 인증서는 웹사이트의 신뢰성을 검증하여 사용자에게 안전한 사이트임을 인증합니다. 무결성 유지: 전송되는 데이터가 중간에 변경되지 않았음을 보장하여 정보의 무결성을 유지합니다."}
{"title": "URL", "subtitle": "TLS", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%95%84%EC%9A%94%EC%84%B1-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-https-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4/", "text": "SSL 인증서는 현재 TLS(Transport Layer Security)로 알려진 더 발전된 프로토콜로 대체되고 있습니다. TLS는 SSL의 후속 버전으로, 더 강력한 보안 기능과 개선된 성능을 제공합니다. TLS의 발전은 다음과 같은 변화로 나타납니다: 향상된 암호화 알고리즘: TLS는 더 강력한 암호화 알고리즘을 사용하여 데이터를 더욱 안전하게 보호합니다. 보안 연결 성능 개선: TLS는 네트워크 지연을 최소화하고, 더 빠른 보안 연결을 제공하여 사용자 경험을 향상시킵니다. 서버 이름 표시: TLS는 보안 연결 시 서버의 이름을 더욱 명확히 표시함으로써 사용자가 신뢰할 수 있는 환경을 제공합니다."}
{"title": "URL", "subtitle": "SSL 정책", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%95%84%EC%9A%94%EC%84%B1-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-https-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4/", "text": "웹 브라우저들은 SSL 인증서 필요성을 더욱 강조하기 위해 다양한 정책 변화에 나섰습니다. 현재 주요 브라우저들이 도입하고 있는 정책은 다음과 같습니다: HTTPS 기본 설정: 많은 브라우저들이 웹사이트에 대한 기본 연결을 HTTPS로 설정하고, HTTP 연결에 대한 경고 메시지를 표시하여 사용자 보호를 강화합니다. SSL 인증서의 유효성 검사 강화: 브라우저는 유효하지 않은 SSL 인증서에 대해 액세스를 차단하며, 사용자가 인터넷을 안전하게 이용할 수 있도록 돕습니다. 신뢰할 수 있는 인증기관 목록 업데이트: 각 브라우저는 신뢰할 수 있는 인증기관(CA)의 목록을 지속적으로 업데이트하여, 사용자가 안전한 SSL 인증서를 사용할 수 있도록 보장합니다."}
{"title": "URL", "subtitle": "SSL 인증서 규제", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%95%84%EC%9A%94%EC%84%B1-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-https-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4/", "text": "SSL 인증서의 중요성이 사회적으로 확산되면서, 다양한 규제가 도입되고 있습니다. 이는 특히 개인정보 보호와 관련된 법적 요구 사항을 포함합니다. 데이터 보호 규정 강화: GDPR(일반 데이터 보호 규정)과 같은 법안들은 웹사이트 운영자에게 SSL 인증서 사용을 의무화하여 사용자 데이터를 보호하도록 요구합니다. 의무적 SSL 인증서 적용: 일부 산업에서는 웹사이트에 SSL 인증서 보유를 법적으로 요구하여 이용자의 권리를 보호하고 있습니다. 공공 기관의 SSL 인증서 사용 확대: 정부 및 공공기관의 웹사이트에서 SSL 인증서 사용을 의무화함으로써, 사용자들에게 안전한 정보 제공을 목표로 하고 있습니다. 이와 같은 최신 SSL 트렌드 및 보안 동향은 SSL 인증서의 필요성을 더욱 확고히 하고 있으며, 웹사이트 운영자들은 이러한 변화를 적극적으로 반영해야 합니다. 향후 웹 보안 환경은 더욱 발전할 것이며, 이에 따른 신뢰성을 높이는 노력이 중요합니다."}
{"title": "URL", "subtitle": "SSL 인증서의 종류 - 도메인 검증(DV) 인증서", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%A1%9C-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%8B%A0%EB%A2%B0%EC%84%B1-%EB%86%92%EC%9D%B4%EA%B8%B0-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95/", "text": "도메인 검증(DV) 인증서는 가장 기본적인 형태의 SSL 인증서로, 인증서 발급을 위해 도메인 소유자임을 확인하는 과정이 필요합니다. 이 인증서는 다음과 같은 특징을 가집니다 → 신속한 발급: 대개 몇 분 이내에 발급이 가능하여 빠른 보안 적용이 필요할 때 유용합니다. 저렴한 가격: 다른 인증서 유형보다 비용이 적게 들어 웹사이트 운영에 경제적 부담이 적습니다. 기본적인 보안: 데이터 암호화 기능을 제공하지만, 기업 신원 확인은 포함되어 있지 않습니다. 이러한 특성으로 인해 DV 인증서는 개인 블로그, 작은 비즈니스 웹사이트, 정보 제공 웹사이트 등에 적합합니다."}
{"title": "URL", "subtitle": "SSL 인증서의 종류 - 기업 검증(EV) 인증서", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%A1%9C-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%8B%A0%EB%A2%B0%EC%84%B1-%EB%86%92%EC%9D%B4%EA%B8%B0-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95/", "text": "기업 검증(EV) 인증서는 고급형 SSL 인증서로, 인증 기관이 기업의 신원과 법적 지위를 철저히 검증 후 발급합니다. EV 인증서의 주요 특징은 다음과 같습니다. → 엄격한 검증 과정: 기업의 법적 등록 정보, 주소, 전화번호 등을 포함한 심층적인 검증이 필요하여, 신뢰성이 높습니다. 브라우저에서의 표시: 지원하는 브라우저에서는 주소창에 회사 이름이 표시되어 사용자가 사이트의 신뢰성을 즉시 인식할 수 있습니다. 고급 보안 기능: 서버와 사용자 간의 암호화된 데이터 전송이 가능하여, 금융 서비스와 같은 높은 수준의 보안이 필요한 환경에서 이상적입니다. 따라서 EV 인증서는 금융 기관, 전자상거래 사이트, 대규모 기업 웹사이트 등에서 주로 사용됩니다."}
{"title": "URL", "subtitle": "SSL 인증서의 종류 - 확장 검증(OV) 인증서", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%A1%9C-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%8B%A0%EB%A2%B0%EC%84%B1-%EB%86%92%EC%9D%B4%EA%B8%B0-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95/", "text": "확장 검증(OV) 인증서는 기업 검증과 도메인 검증 중간 수준으로, 기업의 신원은 검증하되, 해당 도메인 소유권도 확인합니다. OV 인증서의 특성은 다음과 같습니다 → 균형잡힌 신뢰: 기업의 신원 확인을 통한 신뢰성을 제공하면서도, DV 인증서에 비해 더 정교한 보안을 갖추고 있습니다. 자산 보호: 법률적 책임이 필요한 경우에 유리하며, 고객에게 더 높은 신뢰도를 제공합니다. 비용 효율성: EV 인증서보다는 비용이 저렴하여 중소기업에서 활용하기에도 적합합니다. OV 인증서는 중소기업, 비영리 단체, 그리고 일반 서비스 제공업체의 웹사이트에 적합합니다."}
{"title": "URL", "subtitle": "SEO에 SSL의 영향", "source": "https://epart.com/ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%A1%9C-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%B3%B4%EC%95%88%EA%B3%BC-%EC%8B%A0%EB%A2%B0%EC%84%B1-%EB%86%92%EC%9D%B4%EA%B8%B0-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95/", "text": "웹사이트의 보안성을 향상시키기 위한 SSL 인증서 설치가 단순히 데이터 보호를 넘어, 검색 엔진 최적화(SEO)에도 긍정적인 영향을 미친다는 사실을 아는 것이 중요합니다. 1단계: HTTPS와 SEO - 검색 엔진, 특히 구글은 보안성을 중시하는 경향이 있으며, HTTPS 프로토콜을 사용하는 웹사이트에 대해 더 높은 순위를 부여합니다. HTTPS는 SSL 인증서를 통해 데이터를 암호화하여 안전한 통신을 가능하게 하므로, 검색 엔진은 이를 긍정적으로 평가합니다. 다음과 같은 이유로 HTTPS가 SEO에 영향을 미칩니다. 순위 상승: 구글은 HTTPS를 사용하는 사이트에 대해 순위 상승의 혜택을 제공하며, 이는 검색 결과에서 더 많은 클릭 수를 유도할 수 있습니다. 신뢰성 증가: 사용자들은 HTTPS 사이트에 더 많은 신뢰를 보이며, 이는 페이지 조회 수와 체류 시간 향상에 기여할 수 있습니다. 2단계: 사용자 경험의 향상 - SEO에 있어 사용자 경험(UX)은 매우 중요한 요소로, SSL 인증서를 통해 다음과 같은 방식으로 웹사이트의 사용자 경험을 개선할 수 있습니다. 안전함 느끼기: 방문자는 웹사이트가 SSL 인증서를 통해 보안이 강화되었다는 사실을 인식하고, 개인 정보를 입력할 때 더 많은 안심을 느끼게 됩니다. 향상된 리디렉션: HTTP 사이트에서 HTTPS 사이트로 리디렉션이 잘 이루어진다면, 이는 사용자 경험을 개선하는 데 기여하여 이탈률을 줄이는 데 도움을 줍니다. 3단계: 검색 엔진 크롤링 및 색인화 - SSL 인증서를 설치하여 안전한 HTTPS 프로토콜을 채택하면 검색 엔진의 크롤링 및 색인화 과정에서도 긍정적인 영향을 미칠 수 있습니다. 다음과 같은 요소가 있습니다. 크롤링 효율성: 검색 엔진 크롤러는 보안이 강화된 사이트를 선호하며, 이는 사이트의 색인화 속도를 증가시킬 수 있습니다. 중복 콘텐츠 문제: HTTP와 HTTPS에서 동일한 콘텐츠가 존재할 경우, 검색 엔진은 이를 중복 콘텐츠로 인식할 수 있습니다. SSL 인증서를 통해 HTTPS로 간편하게 통합함으로써 이러한 문제를 해결할 수 있습니다. 4단계: 사용자 행동 지표의 개선 - SSL 인증서가 설치된 웹사이트는 사용자 행동 지표 또한 향상시키는 경향이 있습니다. 이는 SEO 성과에 긍정적인 영향을 미칩니다. 구체적인 요소는 다음과 같습니다. 이탈률 감소: 사용자들은 안전한 웹사이트에서 더 오래 머무르고, 이는 결과적으로 이탈률을 줄이는 효과가 있습니다. 상호작용 증가: 사용자들이 웹사이트를 신뢰하면, 더 많은 클릭과 상호작용을 유도하게 됩니다. 이는 SEO 점수에 직접적인 영향을 미칩니다.  결론적으로, SSL 인증서는 웹사이트 보안성을 높일 뿐만 아니라, SEO 성능에 있어서도 다양한 긍정적 효과를 가져옵니다. HTTPS로의 전환은 단순한 권장 사항이 아닌, 성공적인 온라인 비즈니스를 위한 필수 조건으로 자리잡고 있습니다."}
{"title": "URL", "subtitle": "TLS 정의", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "TLS: 전송 계층 보안(Transport Layer Security) TLS은 SSL의 향상된, 더욱 안전한 버전입니다."}
{"title": "URL", "subtitle": "SSL 필요성", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "SSL는 전자상거래만을 위한 것이 아닙니다. SSL은 웹사이트에서 주고 받는 모든 유형의 정보를 보호합니다. 결제 페이지: 고객이 결제 영역과 공유하는 신용카드 정보가 안전하다는 것을 납득하면 구매에 이를 가능성이 더 높습니다. 로그인 패널 및 양식: SSL은 사용자 이름과 비밀번호는 물론 개인 정보 제출에 사용되는 양식, 문서 또는 이미지를 암호화하고 보호합니다. 블로그 및 정보 사이트: 결제정보나 민감한 정보를 수집하지 않는 블로그나 웹사이트도 사용자 활동의 보호를 위해 HTTPS가 필요합니다."}
{"title": "URL", "subtitle": "TLS/SSL 인증서는 어떻게 신뢰를 높이나요?", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "모든 TLS/SSL가 동일하게 생성되지는 않습니다. 암호화 외에도 TLS는 웹사이트 소유자의 신원을 인증하기도 합니다. 이는 사용자가 자물쇠 안의 정보를 확인할 수 있는 추가적인 보호층을 제공합니다. 인증서는 이러한 신원 검증에 있어 3가지 수준으로 제공됩니다. ①Extended Validation SSL 인증서: 가장 높은 수준의 신원 확인을 제공하여 사용자가 웹사이트에서 안전함을 느낄 수 있습니다. 이는 은행과 신망 있는 소매업체들이 자신들의 사이트가 안전함을 소비자에게 알리기 위해 EV를 사용하는 이유입니다. EV 인증서만이 사용자가 자물쇠를 클릭했을 때 웹사이트를 소유한 기업 또는 모기업에 대한 즉각적인 보증을 제공합니다. ②Organization Validated SSL 인증서: 기업이 자신의 브랜드를 보호하는 데 있어 진심임을 고객에게 보여줍니다. OV 인증서는 온라인으로 비즈니스를 수행하는 웹사이트를 위한 미들급 옵션입니다. 인증을 위해 인증 기관은 신청자에게 자신이 도메인 이름을 소유하고 있으며, 해당 조직이 등록되어 있고 법적으로 책임이 있음을 입증하도록 요구합니다. ③Domain Validated SSL 인증서: 가장 기본적인 수준의 SSL 인증인 도메인 검증은 신청자에게 오직 도메인 이름을 관리하고 있음을 입증하도록 요구하는, 신원 확인 없는 인증서입니다. DV 인증서는 사용자로부터 개인 정보를 수집하지 않는 블로그와 같이 비상업적 웹사이트에만 사용되어야 합니다."}
{"title": "URL", "subtitle": "자물쇠 안의 정보 확인", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "주소 표시줄의 자물쇠를 확인하는 것만으로는 더 이상 충분하지 않습니다. URL 표시줄의 자물쇠 아이콘을 클릭하면 웹사이트 소유자의 신원을 확인할 수 있습니다. 불행히도 오늘날 대부분의 피싱 사이트에는 자물쇠와 DV 인증서가 있습니다. 이 때문에 URL 표시줄의 자물쇠 속 정보를 확인하는 것이 중요합니다. 웹사이트가 인증서에 자신의 신원을 넣지 않으려 한다면 신원 정보를 이들과 공유하지 않아야 합니다. 조직의 이름을 확인할 수 있다면 신뢰하는 대상에 대해 더 나은 결정을 할 수 있습니다."}
{"title": "URL", "subtitle": "SSL 인증서는 어떻게 작동하나요?", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "SSL 인증서는 \"SSL 핸드셰이크”라는 과정을 통해 웹사이트/서버와 브라우저 간에 암호화된 연결을 수립합니다. 웹사이트 방문자에게는 이 과정이 보이지 않으며, 순간적으로 이루어집니다. ①인증: 사용자가 웹사이트에서 시작하는 모든 신규 세션에 대해 브라우저와 서버는 각각 다른 SSL 인증서를 교환하고 검증합니다. ② 암호화: 서버는 브라우저와 공개 키를 공유하고, 이어서 브라우저는 이 키를 사용해 프리마스터 키(pre-master key)를 생성, 암호화합니다. 이를 키 교환이라 합니다. ③ 복호화: 서버는 개인 키를 사용해 프리마스터 키를 복호화하고, 세션 기간 동안 사용되는 암호화된 보안 연결을 수립합니다."}
{"title": "URL", "subtitle": "암호화 정의", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "암호화: 읽을 수 있는 (일반 텍스트) 데이터를 이해할 수 없는 형태(암호 텍스트)로 변환해 원본 데이터를 복원할 수 없거나(단방향 암호화) 반대되는 복호화 과정을 사용하지 않고는 복원할 수 없도록 하는 과정(양방향 암호화). Asymmetric cryptography(비대칭 암호화): 암호화 및 복호화 과정 중에 두 개의 키로 구성된 한 쌍의 키를 수반하는 암호화. Symmetric encryption(대칭 암호화): 암호화 및 복호화 과정 중에 모두 동일한 키를 사용하는 암호화 방법."}
{"title": "URL", "subtitle": "자물쇠 정의", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "Padlock(자물쇠): 웹사이트가 HTTPS 암호화로 보호되고 있음을 나타내기 위해 대다수 주요 브라우저의 URL 표시줄에 보이는 아이콘. 자물쇠는 TLS/SSL 인증서의 첫 번째 계층일 뿐입니다. 사용자가 자물쇠 아이콘을 클릭하면 웹사이트가 온라인에서 고객을 안전하게 지키기 위한 상당한 주의 의무를 지켰는지 판단할 수 있습니다. Look beyond the lock(자물쇠 안의 정보 확인): 신뢰도 높은 Extended Validation 인증서를 확인하는 방법에 대한 DigiCert의 소비자 교육 캠페인. 합법적 DV(Domain Validated) 인증서를 사용해서 다른 인증서와 같은 자물쇠가 표시되도록 하여 합법적 기업임을 가장하는 인터넷의 피싱 사이트 급증에 대처하기 위한 목적."}
{"title": "URL", "subtitle": "CSR, CA 정의", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "Certificate signing request(CSR, 인증서 서명 요청): 기계가 판독 가능한 형태의 DigiCert 인증서 애플리케이션. CSR은 대개 공개 키와 요청자의 고유 이름(distinguished name)을 포함합니다. Certificate authority(CA, 인증 기관) Certificate authority(CA, 인증 기관): CPS(Certification Practice Statement)에 따라 인증서의 발급, 중지, 갱신 또는 해지가 허용된 주체. 인증 기관은 자신이 발급한 모든 인증서와 CRL에서 고유 이름으로 식별됩니다. 인증 기관은 자신의 공개 키를 알리거나, 1차 인증 기관의 하급 기관인 경우 자신의 공개 키의 유효성을 증명하는 상급 인증 기관의 인증서를 제공해야 합니다. DigiCert는 1차 인증 기관(Primary Certification Authority, PCA)입니다."}
{"title": "URL", "subtitle": "보안 서버 정의", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "Secure server(보안 서버): SSL 또는 TLS를 사용해 호스트 웹 페이지를 보호하는 서버. 보안 서버가 사용되면 사용자가 서버의 진위를 알 수 있습니다. 사용자 정보는 인터넷을 통해 전송되기 전에 웹 브라우저의 SSL 프로토콜로 암호화됩니다. 해당 정보를 요청한 호스트 사이트만 복호화할 수 있습니다."}
{"title": "URL", "subtitle": "PKI 정의", "source": "https://www.digicert.com/kr/what-is-ssl-tls-and-https", "text": "Public key infrastructure(PKI, 공개 키 인프라): 인증서 기반 공개 키 암호화 시스템의 구현과 운영을 집합적으로 지원하는 아키텍처, 조직, 기법, 수칙 및 절차. PKI는 공개 키 암호화 시스템을 제공하고 구현하기 위해 협력하는 여러 시스템과, 기타 관련 서비스로 구성됩니다."}
{"title": "URL", "subtitle": "무료 SSL인증서 문제", "source": "https://cert.crosscert.com/%ED%95%9C%EA%B5%AD%EC%A0%84%EC%9E%90%EC%9D%B8%EC%A6%9D-%EA%B5%AC%EA%B8%80%EC%9D%98-https-%EA%B0%95%EC%A1%B0-%EB%AC%B4%EB%A3%8C-ssl%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%A1%9C%EB%8A%94-%ED%94%BC/", "text": "한국전자인증(대표 신홍식)에서는 최신 피싱 동향 소식과 진화하고 있는 Chrome에서 HTTPS 사용에 대한 강조가 반드시 필요하다 전했다. SSL인증서 설치를 한 사이트가 보편화 되고 있지만 설치를 못하고 있는 사이트들은 여전히 많다. 2015년 무료 인증서를 제공하는 렛츠 인크립트(Let’s Encrypt)의 등장으로 매년 무료 인증서 발급이 증가하고 코모도(Comodo)의 호스팅 회사들을 통해 무료인증서 발급이 늘어났다. 하지만 이는 유효기간이 90일로 제한적이며, 이에 따라 90일마다 SSL을 교체해 주어야 하는 불편함이 있다. 중요한 것은 회사에 대한 어떤 검증도 하지 않기 때문에 피싱 사이트가 만들어 질 수 있는 위험요소가 크고, 실제 아래 표를 보면 피싱 사이트에는 렛츠 인크립트와 코모도 인증서 인 DV(도메인 권한승인) 인증서가 적용되어 있다. 이 때문에 중요한 서비스에 DV 인증서를 적용하는 것을 권장하지 않는다. SSL인증서에는 인증서 발급에 따른 심사가 필요하고 DV(도메인 권한승인), OV(기업조직 심사), EV(심화된 기업심사) SSL인증서로 나뉜다. 신뢰도를 가장 높게 주려면 보다 심화된 기업인증이 필요하고 인증된 기업이라는 보여주는 방법으로 주소창에 그린 바(Green Bar)를 제공하고 기업조직 명을 주소 창에 표기해주는 EV(Extended Validation) SSL인증서를 사용하는 것이 가장 안전하다. 그리고 가장 주목할 점은 크롬(Chrome) 68에서는(2018년 7월 출시 예정) HTTPS로 적용되지 않은 모든 사이트는 ‘안전하지 않음’이라고 표시된다는 것이다. 이에 따라 많은 웹사이트들이 SSL을 적용해 모든 웹 페이지 접속을 HTTPS로 접속할 수 있게 준비할 것으로 예상된다."}
{"title": "URL", "subtitle": "SSL/TLS 암호화 트래픽 활용한 사이버 위협", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "보안 소켓 계층(SSL: Secure Sockets Layer)/전송 계층 보안(TLS: Transport Layer Security) 암호화 트래픽이 보안 분야 양날의 검이 되고 있다. 웹 브라우저와 웹 서버 간 통신을 인증하고 보호하기 위한 프로토콜인 SSL이 사이버 공격에 활용되고 있는 것이다. 특히 국내에서는 구글 크롬, 모질라 파이어폭스 등 웹 브라우저의 보안 정책 강화로 인해 SSL 암호화 트래픽에 대한 관심이 높다. 최근에는 공공기관을 대상으로 민간 SSL 인증서 전환 장려 정책이 이슈가 되기도 했다. 하지만 이런 SSL/TLS 사용 증가와 함께 SSL 트래픽을 통해 들어오는 사이버 공격에 대한 우려도 높아지고 있다. 복호화 솔루션 또는 기술을 적용하지 않을 경우 기존 네트워크 보안 장비에서 SSL 암호화 트래픽을 검사할 수 없기 때문이다. 복호화 기술과 복호화 솔루션에 대한 관심이 높아지는 이유이다."}
{"title": "URL", "subtitle": "SSL/TLS 기술", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "SSL/TLS 기술이 네트워크 보안 시장에서 주목받고 있다. 시스코 암호화 트래픽 분석에 따르면, 전 세계 웹 트래픽 중 55% 이상이 SSL/TLS 암호화로 이뤄지고 있으며, 가트너는 올해 이러한 트래픽 비중이 80%까지 늘어날 것으로 전망했다. 보안 업계는 현재 이처럼 급증하고 있는 암호화 트래픽을 보호해야 하는 과제에 직면해 있다. 사실 SSL/TLS는 최근에 나온 기술이 아니다. 네트워크의 통신 보안을 제공하기 위해 설계된 암호규약인 SSL/TLS가 처음 발표된 것은 24년 전인 1995년이다. SSL 규약은 처음 넷스케이프가 만들었으며, 1995년 2.0 버전부터 공개됐다. 1999년 국제 인터넷 표준화 기구(IETF: Internet Engineering Task Force)에서 표준 규약으로 정의하면서 TLS로 명칭이 바뀌었다. 현재에는 SSL/TLS를 혼용해서 쓰고 있다. SSL/TLS를 쉽게 접할 수 있는 분야가 바로 웹 브라우저를 통한 인터넷 접속이다. 현재 대부분의 웹사이트가 지원하는 HTTPS는 웹 브라우저와 웹서버가 SSL/TLS 암호화 기술로 데이터를 주고받는다는 것을 의미한다. 웹 사이트 운영자가 웹 서버에 유효한 SSL/TLS 인증서를 설치하면 HTTPS를 구현할 수 있다. SSL/TLS는 인터넷 웹 브라우저에서 인증서로 상대방을 인증하고, 통신에 대한 기밀성과 무결성을 제공한다. SSL/TLS의 기본 절차는 지원 가능한 알고리즘을 교환하고, 키교환 및 인증을 거친다. 이후 대칭키 암호로 암호화하고 메시지를 인증하게 된다. 키 교환과 인증 알고리즘은 공개키(PKI) 방법을 사용하거나 미리 공유된 키를 사용할 수도 있다. 국내에서 SSL/TLS가 본격적으로 주목받기 시작한 것은 구글이 HTTPS 확대 전략을 시행했을 때다."}
{"title": "URL", "subtitle": "SSL/TLS 기술", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "2017년 구글이 웹 브라우저 ‘크롬(Chrome)’에 사이트 보안 수준에 따른 경고 기능을 추가하면서 국내에서 이슈가 됐다. 네이버, 다음 등 국내 대표 포털사이트에 ‘안전하지 않음’이라는 경고가 발생했기 때문이다. 이 때문에 웹 사이트 접속자들이 오해하는 일이 생겼으며, 네이버와 다음 등 많은 사이트들이 HTTPS를 적용하기 시작했다. 더불어 구글 크롬, MS 인터넷익스플로러 및 에지, 모질라 파이어폭스, 애플 사파리 등 4대 브라우저가 2020년까지 TLS 1.2 또는 그 이상을 웹 사이트에 적용한다는 목표로 갖고 있어 SSL/TLS를 적용한 웹사이트는 더욱 늘어날 것으로 예상된다."}
{"title": "URL", "subtitle": "국내 SSL 인증서", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "현재 민간 SSL 인증서는 매우 다양하다. 글로벌사인(GlobalSign), 디지서트(DigiCert), 섹티고(Sectigo, 前 코모도), 써트(Thawte), 지오트러스트(GeoTrust) 등 많은 인증기관이 존재하며, DV(Domain Validation), OV(Organization Validation), EV(Extended Validation) 등 인증서 종류도 다양하다. 현재 전 세계적으로 약 5,800만 개의 인증서가 발급됐으며, 한국에는 약 21,000개의 인증서가 존재한다. 인증서 모니터링 서비스 기업인 넷크래프트 조사에 따르면, 지난해 12월 기준 전 세계 SSL/TLS 인증서의 89%가 DV 인증서였으며, OV 인증서는 11%, EV 인증서는 1% 미만으로 나타났다. 실제 웹 트래픽을 분석해보면, DV 인증을 통한 트래픽이 약 38%였으며, OV가 절반을 차지했다. EV는 13%정도로 나타났다. 더불어 2019년 7월 현재 디지서트는 전 세계 OV 인증서의 95%와 EV 인증서의 60%, 우리나라에서는 OV 인증서의 48%, EV 인증서의 54%를 제공하고 있다."}
{"title": "URL", "subtitle": "국내 SSL 인증서 시장 점유율", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "국내 인증서 시장 점유율 1위는 글로벌사인인 것으로 조사됐다. 지난 3월 넷크래프트 발표 자료에 따르면, 글로벌사인이 점유율 34.9%로 1위를 차지했으며, 2위는 디지서트(31.8%), 3위는 섹티코(18%)로 나타났다. 디지서트가 글로벌 및 국내 시장에서 높은 점유율을 보이고 있는 이유는 2017년 시만텍 인증기관의 인증서 부정 발급에 따른 비신뢰 사태 때문인 것으로 보인다. 당시 시만텍은 세계 최대 상용 인증서 발급 기업이었으나 이 사건으로 인증 사업을 포기했다. 디지서트가 2017년 11월 시만텍의 인증서 부문을 인수했으며, 기존 시만텍 TLS 인증서 사용기업의 인증 재발급 작업을 추진해 약 5백만 개의 글로벌 인증서를 교체했다. 인증서를 국내 공급하는 기업도 매우 다양하다. 한국전자인증, 한국기업보안(유서트), 닷네임코리아(애니서트) 등 인증·보안 기업 외에도 웹 호스팅 기업들이 인증기관과 파트너십을 통해 인증 서비스를 제공하고 있다."}
{"title": "URL", "subtitle": "국내 SSL 인증서", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "인증서 사용 요금에 가장 큰 영향을 주는 것은 종류다. DV는 도메인의 소유권만을 확인하고 인증서를 발급한다. DV 인증서를 무료로 발급하는 곳도 있으며 1년 기준 10만 원 이내의 금액으로 사용할 수 있다. OV는 해당 도메인의 기관을 검증하고 인증서를 발급한다. OV의 경우 1년 기준 30만 원 이내의 요금으로 이용할 수 있다. EV는 기관 검증과 더불어 기관 등록 정보 등을 종합적으로 검사하고 안전한 사이트인지 검증을 마친 뒤 발급한다. 검증과정이 많기 때문에 요금도 가장 비싸다. 현재 1년 기준 100만 원 내외의 요금으로 인증서를 발급받을 수 있다."}
{"title": "URL", "subtitle": "SSL 암호화 트래픽", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "이렇게 급증하고 있는 SSL/TLS 암호화 트래픽은 보안 업계에서도 주요 이슈가 되고 있다. 사이버 공격에 SSL 암호화 트래픽이 이용되기 시작했기 때문이다. SSL 암호화 트래픽은 크게 2가지 방식으로 사이버 공격에 활용되고 있다. 하나는 DV 인증서 발급이 쉽다는 점을 악용해 피싱 사이트에 활용하는 방식이다. DV인증서는 도메인의 소유권만을 확인하기 때문에 피싱 사이트에도 발급이 가능하다. 당연한 얘기지만 피싱 도메인의 소유권을 사이버 공격자가 갖고 있기 때문에 DV 인증서 발급 조건을 충족한다. 이런 피싱 사이트에 의한 피해를 예방하기 위해서는 HTTPS가 적용된 사이트라도, URL 및 인증서를 꼼꼼히 확인할 필요가 있다. 또 다른 위협은 SSL 암호화 트래픽에 악성코드가 첨부될 수 있다는 것이다. 이는 기업 입장에서 심각한 보안 사고를 초래할 수 있다. SSL 암호화 트래픽에 악성코드가 첨부되면 복호화 기술이 탑재되지 않은 네트워크 보안 장비로는 탐지할 수 없다. 기존 네트워크 보안 체계가 SSL 암호화 트래픽으로 뚫리는 것이다. 글로벌 클라우드 보안 기업 제트스케일러 클라우드(Zscaler Cloud)에 따르면, APT 공격의 80%, 해커의 41%가 SSL 암호화 트래픽을 사용하고 있는 것으로 조사됐다. 또한 유해 SSL 활동 공격은 1일 평균 60만 회가 발생하고 있었다. 수산아이앤티가 자체적으로 HTTPS 기반 악성코드를 수집한 결과 월평균 15,000개 공격을 탐지하고 있으며, 2017년 상반기에만 93,000개의 악성코드를 수집했다."}
{"title": "URL", "subtitle": "SSL 사이버 위협 대응", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "SSL 암호화 트래픽을 통한 사이버 공격에 대응하기 위해 기업들은 SSL 복호화 기술을 적용해 네트워크 보안 체계를 보강하고 있다. SSL 암호화 트래픽을 복호화해 가시성을 확보한다는 전략이다. 이에 따라 SSL 복호화 솔루션 시장도 점차 커지고 있으며, 기존 네트워크 보안 장비인 방화벽, 침입방지시스템(IPS) 등에도 복호화 기능이 탑재되고 있다. SSL 복호화 솔루션은 기존 네트워크 구성 변경 없이 운영이 가능하다는 장점이 있다. 네트워크 보안 장비 앞단에 설치돼 SSL 트래픽을 복호화한 후 보안 장비에 전달한다. 이후 보안 장비에서 검사를 마친 트래픽은 다시 SSL로 암호화해 웹 서버에 전달하는 방식이다. 방화벽 등 보안 장비도 복호화 기능을 갖추고 있다. 하지만 이 경우에는 해당 보안 장비만을 위한 복호화를 하기 때문에 네트워크 속도가 늦어지는 원인이 될 수 있다. SSL 기술 도입 초기 기업들은 이러한 지연시간을 줄이기 위해서 SSL 가속기를 사용하는 경우도 있었다. SSL 가속기는 SSL 트래픽을 복호화한 후 다시 암호화하지 않다보니 내부 보안 사고의 위험성이 제기됐다. 이에 따라 SSL 복호화 장비의 필요성이 제기됐다."}
{"title": "URL", "subtitle": "SSL/TLS 관련 시장", "source": "https://www.comworld.co.kr/news/articleView.html?idxno=49687", "text": "SSL/TLS 관련 시장은 지속적으로 성장할 것으로 전망된다. 구글, MS, 모질라, 애플 등 웹 브라우저 업체들이 SSL/TLS 관련 보안 정책을 강화하고 있기 때문이다. 이에 SSL/TLS 인증서 수요는 더욱 증가할 것으로 예상된다. 특히 국내 시장에서는 행정안전부의 정책 변화에 따라 공공기관의 인증서 수요도 급증할 것으로 보인다. 이에 닷네임코리아, 한국기업보안, 한국전자인증 등은 공공기관을 대상으로 SSL/TLS 인증서 지원 프로모션도 진행하고 있다. 특히 한국전자인증은 SSL 인증서의 소유자명을 한글로 보여주는 ICA 서비스를 선보였다. 한국전자인증이 선보인 한국 맞춤형 인증서는 체인 증명서에 ‘대한민국’을 표기하고 SSL 인증서의 소유자명이 한글로 표기된다. 한국전자인증 관계자는 “OV와 EV SSL인증서를 사용하는 행정·공공기관, 교육기관 및 기업, 금융권 사용자들에게 ICA서비스를 제공할 계획”이라면서 “한국전자인증은 웹트러스트 인증을 취득하고 글로벌 수준의 SSL 서비스를 20여 년간 제공하고 있다. ICA 서비스를 통한 한글 기관명을 지원하는 SSL인증서 발급도 가능해짐에 따라 정부 웹사이트에 특화된 맞춤형 서비스를 제공할 수 있다”고 설명했다."}
{"title": "URL", "subtitle": "HTTPS", "source": "https://www.akamai.com/ko/glossary/what-is-https", "text": "인터넷은 HTTP(Hypertext Transfer Protocol)를 포함한 프로토콜을 기반으로 합니다. 웹사이트 URL에서 HTTP에 있는 S가 있으면(즉, HTTPS) 사이트가 HTTP의 보안 버전을 사용함을 나타냅니다. 여기서, 즉 S는 보안을 의미합니다. HTTPS(Hypertext Transfer Protocol Secure)는 원래 온라인 로그인을 보호하고 온라인 뱅킹 및 쇼핑 거래의 보안을 유지하는 데 사용되었습니다. 하지만 2014년, Google 기업은 HTTPS를 랭킹 신호(ranking signal)로 사용해 HTTPS의 위상을 높였습니다. 이후 HTTPS가 널리 도입되었고, 오늘날 전체 웹사이트의 80%가 HTTPS를 사용하고 있습니다."}
{"title": "URL", "subtitle": "HTTPS", "source": "https://www.akamai.com/ko/glossary/what-is-https", "text": "HTTPS 및 관련 보안 프로토콜인 SSL(Secure Sockets Layer)은 Netscape 브라우저를 보호하기 위해 1994년 Netscape에 의해 출시되었습니다. HTTPS 연결은 신뢰를 구축하고 인터넷에서 보안 연결을 생성하는 데 도움이 되는 두 가지 중요한 기능을 지원합니다. 웹 사이트 인증: HTTPS는 apple.com이 Apple Inc.의 웹사이트인 것처럼 사용자가 사이트의 진위를 알 수 있도록 웹사이트를 인증합니다. 데이터 암호화: HTTPS 웹사이트는 TLS(Transport Layer Security) 프로토콜(SSL의 후속 버전)을 사용해 웹 트래픽을 암호화함으로써 클라이언트(예: 웹 브라우저)와 웹 서버 사이에서 민감한 정보를 보호합니다. 예를 들어 온라인으로 물건을 사고 구매를 위해 신용카드 데이터를 보내는 경우 사이트가 HTTPS이면 해당 데이터는 일반 텍스트가 아닌 암호화된 형식으로 웹 서버에 전송됩니다."}
{"title": "URL", "subtitle": "HTTPS 작동", "source": "https://www.akamai.com/ko/glossary/what-is-https", "text": "HTTPS는 PKI(공개 키 인프라)라고 하는 기술에 기반합니다. PKI는 공개 키 암호화 및 디지털 서명을 사용합니다. '키 쌍'은 웹사이트 소유자가 만들고 공개 키는 'CA(인증 기관)'라고 하는 신뢰할 수 있는 기관으로 전송됩니다. 그러면 이 기관은 공개 키에 서명하고, 디지털 인증서라는 문서가 생성됩니다. 이제 웹사이트는 비공개 키와 공개 키를 보관하는 SSL 인증서를 보유합니다. 공개 키는 비공개 키에 의해 서명된 모든 내용을 확인합니다. 디지털 인증서는 웹사이트의 진위를 확인하는 신뢰 및 유효성 검사 체인을 제공합니다. HTTPS는 보안 프로토콜(SSL/TLS)과 함께 작동해 웹 브라우저와 웹 서버 간 통신 및 민감한 데이터를 암호화하고 해독합니다."}
{"title": "URL", "subtitle": "HTTPS 중요성", "source": "https://www.akamai.com/ko/glossary/what-is-https", "text": "HTTPS가 없으면 클라이언트(예: 브라우저)와 웹 서버 사이에서 온라인으로 교환되는 데이터 및 인터넷 사용자는 다음과 같은 리스크에 노출됩니다. 가로채기 공격: HTTPS는 TLS 프로토콜을 사용해 통신을 암호화합니다. 공격자가 통신을 가로채더라도 데이터를 해독하거나 훔칠 수 없습니다. 인증정보 도용: 인증정보 도용은 Ponemon의 보고서에 따르면 보안 사고의 54%를 차지합니다. 웹사이트에 HTTPS가 올바르게 구축된 경우 해당 웹사이트를 통해 제출된 모든 데이터(예: 로그인 인증정보)는 암호화되므로 안전합니다. 신뢰도 저하: HTTPS임을 알리는 웹사이트에는 신뢰할 수 있는 CA에서 디지털 인증서를 발급합니다. CA는 인증서 발급 중에 회사에 대한 실사 검사를 수행합니다. 하지만 APWG(Anti-Phishing Working Group)의 통계에 따르면, 피싱 사이트의 83%가 HTTPS를 사용하므로 여전히 주의해야 합니다."}
{"title": "URL", "subtitle": "HTTPS 흐름", "source": "https://www.akamai.com/ko/glossary/what-is-https", "text": "HTTPS 프로토콜의 요청 및 응답 흐름은 HTTP와 같은 방식으로 시작됩니다. 단, 중간 단계인 1.5단계를 사용해 두 흐름을 구분합니다. 1단계: 탐색 및 시작 → 사용자가 브라우저에 웹 주소를 입력하거나 이메일 또는 기타 통신에 포함된 링크를 클릭합니다. 주소에는 URL(Uniform Resource Locator)이 포함되어 있습니다. URL을 나타내는 문서를 가져올 때 HTTP를 사용함을 브라우저에 알리기 위해 URL에 HTTP가 포함됩니다. 1.5단계: 암호화 동작 → 단계 1.5에서는 브라우저와 웹 서버가 '암호화 동작'을 수행합니다. 여기에 암호화된 메시지의 교환이 포함됩니다. 이 단계를 수행하려면 CA(인증 기관)를 통해 생성된 웹 서버의 공개 및 비공개 키 쌍을 사용해 TLS 프로토콜에서 복잡한 암호화 기능을 수행해야 합니다. 이 단계에서는 웹사이트를 인증하고 클라이언트용 키와 서버용 키 두 개(세션 키)를 새로 만듭니다. 이러한 세션 키는 메시지를 암호화하고 해독하는 데 사용됩니다. 2단계: 클라이언트가 서버로 HTTP 요청 메시지 전송 → 2단계는 HTTP 2단계 요청 및 응답 흐름과 동일합니다. 클라이언트(예: 브라우저)는 웹 서버로 리디렉션되는 요청 메시지를 작성합니다. 메시지에는 요청 엔터티와 같은 요청에 대한 추가 정보가 포함됩니다. 그러나 HTTP와 달리 요청 메시지를 작성한 후 브라우저에서 메시지를 보내기 전에 HTTP(S) 요청은 세션 키를 사용해 메시지를 암호화해야 합니다. 3단계: 웹 서버가 HTTPS 응답을 클라이언트로 다시 전송 → 요청이 수신되면 웹 서버는 세션 키를 사용해 메시지를 해독하고 읽습니다. 그런 다음 웹 서버는 응답 메시지를 작성하고, 세션 키를 사용해 암호화한 후 브라우저로 다시 보냅니다. 4단계: 브라우저에서 메시지 렌더링 → 암호화된 메시지를 수신하면 브라우저는 세션 키를 사용해 암호를 해독하고 메시지를 읽습니다. 이 단계의 마지막 부분에서는 브라우저에서 응답 메시지를 렌더링하고 브라우저에 웹페이지를 표시합니다."}
{"title": "URL", "subtitle": "사이버스쿼팅", "source": "https://www.boannews.com/media/view.asp?idx=90921", "text": "일명 사이버 스쿼터(cybersquatter)라고 하는 공격자들이 한 달 동안 무려 1만 4천여 개의 도메인 이름을 등록했다. 이 중 절반 이상이 악성 공격을 위해 만들어진 것이라고 보안 업체 팔로알토네트웍스(Pal Alto Networks)가 발표했다. 2019년 12월 한 달 동안 등록된 도메인 정보를 수집해 분석한 팔로알토는 1만 4천 개의 ‘사이버스쿼팅’ 도메인을 찾아낼 수 있었다고 한다. 사이버스쿼팅은 타이포스쿼팅과 콤보스쿼팅을 아우르는 용어다. 먼저 타이포스쿼팅은 실제 도메인 이름에서 한두 글자가 빠지거나 추가된 이름을 가진 도메인으로 예를 들어 apple.com을 흉내 낸 appl.com이라든가 naver.com을 흉내 낸 nave.com 등이 있다. 팔로알토는 8개월 동안 이 1만 4천 개의 도메인들에서 벌어지는 활동들을 관찰하고 기록했다. 대부분 피싱 및 사기 공격에 활용되고 있었음을 알 수 있었다. 애플 브랜드를 흉내 낸 타이포스쿼팅 사이트들의 경우, 70%가 악성 공격에 활용되고 있었다. “공격자들은 트래픽의 유행을 민감하게 파악하고, 그에 맞는 사이버스쿼팅 도메인들을 미리미리 준비합니다. 때문에 올해는 코로나와 관련된 가짜 도메인들이 무수히 많이 생성됐죠.”"}
{"title": "URL", "subtitle": "사이버스쿼팅", "source": "https://www.boannews.com/media/view.asp?idx=90921", "text": "타이포스쿼팅이 ‘철자 오류’를 파고드는 공격이라면, 콤보스쿼팅(combosquatting)은 유명 브랜드 이름에 흔히 사용될 법한 단어를 합쳐서 도메인을 만드는 방법이다. secure-wellsfargo.org와 같은 도메인이 좋은 사례다. 공격자들은 이 도메인을 통해 크리덴셜 등 민감한 정보를 가로챘다. 결국 8개월의 모니터링 후 악성으로 분류된 곳은 19%였다. 멀웨어를 적극적으로 퍼트리거나 피싱 공격이 노골적으로 진행되는 곳을 말한다. 악성으로 의심되는 곳은 37%였다. 정황상 악의적인 목적으로 개설되었을 것이 뻔하긴 한데, 구체적인 활동이 아직 나타나지 않은 사이트를 말한다. 둘을 합치면 56%가 나온다. 이런 도메인들은 대부분 정식 등록 기관을 통해 등록되는데, 주로 신청자들을 빡빡하게 심사하지 않거나 자동 등록시켜주는 곳들이 선호된다. 인터넷비에스(Internet.bs)라는 곳이 가장 인기가 높은 것으로 조사됐다. 그 다음은 오픈프로바이더(Openprovider)로, 둘 다 무료 등록 서비스를 자동화 시스템으로 제공하는 것으로 나타났다."}
{"title": "URL", "subtitle": "사이버스쿼팅", "source": "https://www.boannews.com/media/view.asp?idx=90921", "text": "이런 ‘의심스러운’ 도메인들 대부분 HTTPS 프로토콜을 활용하고 있는 것으로 나타나기도 했다. HTTPS를 활용할 경우 브라우저에 따라 안전 표시를 나타내는데, 이것이 사람들의 의심을 해소하는 데 큰 도움이 되기 때문이다. 그래서 팔로알토는 “자물쇠 아이콘을 무조건적으로 신뢰해서는 곤란하다”고 강조한다. 인증서의 도메인 이름이 신뢰 가능한지 확인하는 것이 더 나은 방법이라고 팔로알토는 제안했다. 또한 조직 입장에서는 도메인 이름의 여러 가지 버전들을 꾸준히 등록시키는 것이 좋다고 한다. “도메인 방문자들이 입력할 때 낼 수 있는 오타의 가능성을 많이 고려할수록 고객들이 안전해집니다. 또한 이런 식의 가짜 도메인들을 발견하는 즉시 법적 절차를 밟아 폐쇄시키는 활동도 꾸준히 해야 합니다. 팔로알토는 “담당자 한두 명이 모든 오타 가능성을 상상할 수 없다”며 “모든 직원들이 이런 공격법이 있음을 인지하고 가끔 한 번씩 비슷한 도메인 이름을 검색하도록 장려하는 것도 좋은 방법”이라고 말한다. “한 마디로 그물코를 최대한 촘촘하게 만들라는 것이죠. 발견자에게 적당한 보상을 주는 것도 좋겠죠. 이런 ‘오타’의 가능성까지 방어한다는 건 고객들에게 적잖은 신뢰의 요소가 될 겁니다.”"}
{"title": "URL", "subtitle": "사이버스쿼팅", "source": "https://www.akamai.com/ko/blog/security-research/combosquatting-keyword-analysis-support", "text": "공격자들은 매일 브랜드 웹사이트를 모방하고 있습니다. 실제 세계에서 모방 작업은 어렵습니다. 예를 들어, 필요한 물리적 건물을 구하기 어려울 수 있습니다. 하지만 온라인에서 공격자는 모방 도메인 이름이 포함된 잘 설계된 유사 사이트를 호스팅할 수 있습니다. 이러한 웹사이트는 원래 브랜드의 도메인과 매우 유사한 도메인 이름으로 호스팅되는 경우가 많습니다. 이를 사이버스쿼팅 도메인이라고 합니다. 사이버스쿼팅 도메인은 공격자가 자신이 소유하지 않은 브랜드나 이름의 영업권을 이용해 이익을 얻기 위해 등록하고 사용하는 도메인 이름입니다. 사이버스쿼팅은 멀버타이징 등을 이용한 랜섬웨어 설치, 피싱, ID 도용을 시도하는 캠페인을 가능하게 하는 요소로 간주되는 경우가 많습니다."}
{"title": "URL", "subtitle": "사이버스쿼팅 종류", "source": "https://www.akamai.com/ko/blog/security-research/combosquatting-keyword-analysis-support", "text": "콤보스쿼팅: 브랜드 도메인에 키워드 추가 ex) safebank-security[.]com 타이포스쿼팅: 문자 추가, 제거 또는 교체 ex) safebqnk[.]com 비트스쿼팅: 임의의 ASCII 비트플립 ex) sagebank[.]com IDN 동형이의어: 비슷한 모양의 문자 사용 ex) sǎfebank[.]com TLD 스쿼팅: TLD(Top Level Domain) 교체 ex) safebank[.]co 사운드스쿼팅: 동음이의어 사용 ex) savebank[.]com 도트스쿼팅: 하나 이상의 점 삽입 ex) sa.febank[.]com"}
{"title": "URL", "subtitle": "사이버스쿼팅", "source": "https://www.akamai.com/ko/blog/security-research/combosquatting-keyword-analysis-support", "text": "사이버스쿼팅으로 인한 재정적 피해와 영향은 오랫동안 존재했으며 기업과 개인 모두에게 여전히 엄청난 위협이 되고 있습니다. 사이버스쿼팅이라는 용어는 보다 일반적인 맥락에서 자주 사용됩니다. 일반적인 방법에는 도메인 이름 웨어하우징 과 도메인 이름 프런트러닝이 있습니다. 예를 들면 어떤 사람이 coke[.]net (TLD 스쿼팅)을 구매하고 Coca-Cola Company에 팔아 엄청난 수익을 내려고 하는 경우입니다. 일반적으로 발견되는 또 다른 수익화 종류는 히트 도용을 통한 제휴사 마케팅입니다. 예를 들어 payypal[.]com 을 등록하고 추천 코드를 통해 방문자를 공식 웹사이트로 리디렉션합니다. 이는 수없이 많은 시도를 통해 종종 성공을 거두게 됩니다. 과거에 이러한 성공 사례가 발생함에 따라 미국 사이버스쿼팅 방지 소비자 보호법(ACPA) 등의 다양한 법과 규제가 통과됐습니다."}
{"title": "URL", "subtitle": "사이버스쿼팅 피해 사례", "source": "https://www.akamai.com/ko/blog/security-research/combosquatting-keyword-analysis-support", "text": "2023년 Reddit은 특정 대상을 겨냥한 피싱 캠페인의 피해자가 되었습니다. 공격에는 사이버스쿼팅 도메인에 호스팅된 인트라넷 게이트웨이의 행동을 복제하는 웹사이트가 연관되어 있었으며, 이 웹사이트는 Reddit의 보안 인시던트 대응에 암묵적으로 언급되었습니다. 공격자들은 직원과 광고주의 제한된 정보에 접속할 수 있었습니다. 2011년에는 Facebook이 피해자가 되었는데, 간단한 철자 오류를 통해 생성된 100여 개의 유사 도메인 이름을 이용한 경우였습니다. 이후 Facebook은 약 280만 달러의 손해 배상을 받았습니다. 소비자도 직접 표적이 될 수 있습니다. 2022년 10월 Bleepingcomputer는 사람들이 멀웨어 감염 앱을 설치하게 하는 것이 목적인 광범위한 타이포스쿼팅 캠페인 을 보고했습니다. 피해자들은 키로거와 멀웨어에 감염되어 은행 계정과 암호화폐 지갑의 인증 정보를 도난당했습니다."}
{"title": "URL", "subtitle": "콤보스쿼팅", "source": "https://www.akamai.com/ko/blog/security-research/combosquatting-keyword-analysis-support", "text": "Akamai의 2022년 분석에 따르면 고유한 도메인 이름 측면에서 콤보스쿼팅이 가장 일반적으로 관찰되고 있습니다. 즉 공격자들은 공격 기법의 일환으로 다른 종류의 사이버스쿼팅보다 콤보스쿼팅을 훨씬 더 자주 사용하고 있습니다. 또한 콤보스쿼팅은 DNS 쿼리를 가장 많이 생성하는 것으로 보이며, 이들 각 쿼리는 악성 도메인을 방문한 잠재적 피해자를 나타냅니다. 이러한 두 가지 요소로 인해 Akamai는 콤보스쿼팅이 가장 큰 사이버스쿼팅 위협이 된다고 분석했습니다. 콤보스쿼팅은 브랜드의 도메인에 키워드가 추가되는 사이버스쿼팅의 한 종류입니다. 키워드는 특정 감정을 불러일으킵니다. verification(인증), account(계정), login(로그인) → 안전, 권한 | now(지금), alert(경고) → 긴급성 | free(무료), promo(프로모션) → 놓칠지도 모른다는 두려움"}
{"title": "URL", "subtitle": "콤보스쿼팅 키워드", "source": "https://www.akamai.com/ko/blog/security-research/combosquatting-keyword-analysis-support", "text": "도메인 필터링을 통해 추출한 상위 10개 콤보스쿼팅 키워드를 인기에 따라 나열했습니다. support, com, login, help, secure, www, account, app, verify, service, us, id, jp, find, online, info, update, security, web, maps, my, alert, mail, verification, signin, auth, map, services, location, gift, accounts, live, track, uk, es, co, supports, findmyphone, device, fr, pay, chat, inc, log, fmi, nitro, center, event"}
{"title": "URL", "subtitle": "사이버스쿼팅 피해 사례", "source": "https://m.efnews.co.kr/news/articleView.html?idxno=87097", "text": "보안 기업인 팔로알토 네트웍스(Palo Alto Networks®)는 자사의 사이버 보안 연구소 유닛42(Unit42) 발표를 인용해 페이스북, 애플, 아마존, 넷플릭스 등의 유명 도메인의 유관 사이트인 것처럼 위장하거나, 사용자의 타이핑 실수로 유사 사이트에 연결되도록 하는 사이버스쿼팅 보안 위협 사례 조사 결과를 20일 발표했다. 사이버 스쿼팅은 주로 유명 기업이나 단체 등의 이름과 유사한 인터넷 도메인을 영리 목적으로 선점하는 행위로, 이전에는 해당 업체에 고액의 프리미엄을 요구하는 사례로 악용되었으나 최근 악성 프로그램을 심는 등 보안 위협이 진화하고 있다. 팔로알토 네트웍스 조사에 따르면 2019년 12월에 등록된 스쿼팅 도메인은 1만3천857건으로, 일평균 450여개 수준이고, 이 가운데 2천595개(18.59%)는 멀웨어 배포 및 피싱 공격을 일으키는 악성 사이트인 것으로 나타났다. 또 5천104개(36.57%)의 불법 도메인은 사이트 방문자가 높은 위험에 노출되는데, 악성 URL로 연결되거나 다크웹 및 범죄자들에게 인기가 높은 ‘방탄호스팅(bulletproof hosting)’과 관계된 것으로 분석됐다."}
{"title": "URL", "subtitle": "사이버스쿼팅", "source": "https://m.efnews.co.kr/news/articleView.html?idxno=87097", "text": "사이버스쿼팅의 가장 흔한 수법은 의도적으로 철자 오류를 사용한 타이포스쿼팅(Typosquatting)이다. apple.com을 흉내 낸 appl.com이라든가 whatsapp.com 대신 whatsalpp.com 등이 그 예이다. 악용 빈도가 높은 상위 20개 도메인에는 페이팔(paypal), 애플(apple), 넷플릭스(netfilx), 아마존(amazon), 드롭박스(dropbox) 등 소셜 미디어, 금융, 쇼핑 등 민감한 정보를 다루는 수익성 높은(profitable) 타깃이 포함됐다. 악성 도메인의 주요 목적으로는 피싱, 멀웨어 배포, C2(command and control), 재청구 방식의 스캠(Re-bill scam), 잠재적 유해 프로그램(PUP) 배포 등이다. 도메인 스쿼터들이 선호하는 등록 대행기관(registrar)은 무료 등록이 가능한 '인터넷비에스(Internet.bs)' 및 싼 값에 대량 등록이 가능한 '오픈프로바이더(Openprovider)' 등으로 조사됐다. 또한 HTTPS가 보편화되면서 사이버 범죄자들은 자신들의 웹사이트를 합법적으로 위장하기 위해 인증서를 사용하는 사례가 늘고 있는 것으로 나타났다. 사이버스쿼팅에 가장 많이 활용한 인증서로는 무료 SSL 암호화 번들을 제공하는 클라우드플레어(Cloudflare)로 집계됐으며, 이외에도 AutoSSL 서비스를 간편하게 사용할 수 있는 cPanel Inc CA 등이 높은 빈도로 사용됐다. 팔로알토 네트웍스는 유해사이트 차단을 위한 'URL 필터링(URL Filtering)', DNS 트래픽 관리 서비스 'DNS 시큐리티(DNS Security)', 클라우드 기반 위협 탐지 솔루션 '와일드파이어(WildFire)', 선제 방어(Threat Prevention) 플랫폼을 통해 사이버스쿼팅 도메인에 대응하고 있다."}
{"title": "URL", "subtitle": "WHOIS 데이터베이스", "source": "https://kr.godaddy.com/whois", "text": "WHOIS 데이터베이스는 현재 전 세계에 등록된 모든 단일 도메인을 검색할 수 있는 목록입니다. 등록자의 연락처 정보, 관리 및 기술 연락처, 등록 및 만료 날짜, 도메인의 이름 서버 등 도메인 이름 등록 세부 정보를 쿼리하는 중앙 디렉터리 역할을 합니다. WHOIS 데이터베이스는 ICANN(Internet Corporation for Assigned Names and Numbers, 국제 인터넷 주소 관리 기구)에서 관리합니다. ICANN의 정책에 따라 도메인을 등록하는 모든 사용자는 이름, 주소, 전화번호, 이메일 주소 등 연락처 정보를 제공해야 합니다. 해당 정보는 WHOIS 데이터베이스를 통해 공개적으로 제공됩니다. 그러나 도메인 등록기관에서 제공하는 개인정보 보호 서비스가 시행되면서 일부 등록자는 스팸이나 신원 도용을 방지하기 위해 개인정보를 숨기기로 선택할 수 있기 때문에 WHOIS 데이터가 항상 종합적인 정보를 제공하는 것은 아닙니다."}
{"title": "URL", "subtitle": "WHOIS", "source": "https://kr.godaddy.com/whois", "text": "WHOIS 데이터는 주로 관리 및 법적 목적으로 활용합니다. 다음과 같은 일부 일반적인 용도가 포함됩니다. 도메인 등록 인증: 개인 및 조직은 WHOIS를 사용하여 도메인 이름의 등록 세부 정보를 확인하여 합법성과 소유권을 확인할 수 있습니다. 도메인 소유자 문의: 기업, 법 집행 기관 및 개인은 상표 분쟁 해결, 불량이용 신고, 도메인 구매 협상 등 다양한 이유로 도메인 소유자에게 문의해야 할 수 있습니다. 조사 및 법적 절차: 법 집행 기관, 변호사 및 수사관은 사이버 범죄, 사기 또는 지적 재산권 침해 사건을 비롯한 법적 절차에 필요한 증거를 수집하기 위해 WHOIS 데이터를 사용할 수 있습니다. 네트워크 문제 해결: IT 전문가와 네트워크 관리자는 도메인 이름 서버(DNS) 구성 문제의 책임자를 식별하는 등 도메인 이름과 관련된 기술적 문제를 해결하기 위해 WHOIS를 사용하는 경우가 많습니다. 연구 및 분석: 연구자와 분석가는 도메인 등록 동향 연구, 네트워크 매핑 또는 시장 조사에 WHOIS 데이터를 사용할 수 있습니다."}
{"title": "URL", "subtitle": "WHOIS 관리", "source": "https://kr.godaddy.com/whois", "text": "WHOIS 조회와 관련된 모든 사항은 ICANN(Internet Corporation for Assigned Names and Numbers, 국제 인터넷 주소 관리 기구)에서 관리합니다. 이 기관은 인터넷이 빠르게 성장하여 온라인 공간을 관리하고 유지하는 데 필요한 모든 절차를 담당할 공인 기관의 필요성이 대두됨에 따라 1998년에 설립되었습니다. 현재 로스앤젤레스에 소재한 비영리 단체인 ICANN은 어느 나라에서나 무료로 이용할 수 있는 WHOIS 확인을 2016년부터 운영하기 시작했습니다. ICANN은 16명의 이사회 구성원과 전 세계의 담당 관계자가 운영하고 있습니다. 또한, ICANN은 통신 제공업체 등과 같은 수많은 인터넷 관련 조직으로부터 정보를 제공받고 있습니다."}
{"title": "URL", "subtitle": "WHOIS 필요성", "source": "https://kr.godaddy.com/whois", "text": "WHOIS 확인은 도메인 거래 비즈니스에 종사하는 사람들에게 필수적입니다. 소위 ‘도메이너(domainer)’라고 불리는 이들은 거래에 대해 커뮤니케이션할 방법이 필요합니다. WHOIS 검색은 특정 웹 주소의 현재 소유자에게 연락하는 방법을 다양하게 제공합니다. WHOIS 데이터베이스는 온라인에서 비즈니스를 운영하는 사람들의 신뢰를 지켜주기 위한 하나의 방식입니다. 예를 들어, 누군가가 내 상표를 다른 웹사이트에서 도용했다고 생각될 경우 WHOIS 데이터베이스는 이러한 분쟁을 해결할 수 있는 수많은 방법을 제공합니다."}
{"title": "URL", "subtitle": "ICANN", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "인터넷에서 다른 사람을 만나려면 컴퓨터에 주소, 이름 또는 번호를 입력해야 합니다. 이 주소는 여러 컴퓨터가 각 위치를 찾을 수 있도록 고유해야 합니다. ICANN은 전 세계의 이러한 고유 식별자를 조정합니다. 이러한 조정이 없다면 하나의 세계적인 인터넷을 갖출 수 없었을 것입니다. ICANN은 1998년 설립된 세계적인 비영리 파트너십으로서 인터넷을 안전하고 안정적이며 상호 운영 가능하도록 하기 위해 노력하고 있습니다. 또한 경쟁을 촉진하고 인터넷의 고유한 식별자에 대한 정책을 수립하고 있습니다. ICANN은 인터넷의 컨텐츠를 제어하지는 않습니다. 스팸을 차단하거나 인터넷 액세스를 취급하는 일도 하지 않습니다. 하지만 인터넷 명명 시스템의 조정적 역할을 통해 인터넷의 확장과 발전에 중요한 영향을 미치고 있습니다."}
{"title": "URL", "subtitle": "DNS 정의", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "도메인 이름 시스템(DNS)은 사람들이 인터넷에 액세스할 수 있게 고안된 시스템입니다. 인터넷을 구성하고 있는 수많은 컴퓨터는 주로 일련의 번호를 통해서 서로를 인식합니다. 이러한 각 번호(\"IP 주소\")는 다양한 장치와 상관관계가 있습니다. 그러나 긴 숫자 목록은 기억하기 어려우므로 DNS는 숫자 대신에 문자를 사용하고 일련의 문자를 정확한 일련의 숫자에 링크합니다. 결과적으로 ICANN의 웹 사이트는 “192.0.32.7”이 아니라 “icann.org”에서 찾을 수 있습니다. 이와 같은 방식으로 네트워크에 있는 컴퓨터가 주소를 인식합니다. 사람들이 네트워크를 훨씬 쉽게 이용할 수 있게 해준다는 점 외에도 이 시스템의 한 장점은 특정 도메인 이름을 하나의 특정 컴퓨터에 연결할 필요가 없다는 점입니다. 특정 도메인과 특정 IP 주소 간의 링크를 쉽고 빠르게 변경할 수 있기 때문입니다. 이러한 변경 사항은 지속적으로 업데이트되는 DNS 인프라 덕분에 48시간 내에 전체 인터넷에서 인식됩니다. 따라서 이 시스템은 매우 유연합니다."}
{"title": "URL", "subtitle": "레지스트리", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "도메인 이름 자체는 \"점\" 앞뒤의 두 개 요소로 구성되어 있습니다. 점 뒷부분인 “com”, “net”, “org” 등은 “최상위 도메인” 또는 TLD로 알려져 있습니다. 각 경우에 한 회사(레지스트리라고 불림)가 특정 TLD로 끝나는 모든 도메인을 책임지고 있으며 해당 이름 바로 아래에 있는 전체 도메인 목록 및 이러한 이름이 연관되어 있는 IP 주소에 액세스할 수 있습니다. 점 앞부분은 사용자가 등록하는 도메인 이름이며 웹 사이트, 전자 메일 등과 같은 온라인 시스템을 제공하는 데 사용됩니다. 이러한 도메인은 다수의 \"등록기관\"에 의해 판매되며, 등록기관은 도메인에 원하는 비용을 부과할 수 있습니다. 단, 판매할 때마다 등록기관은 도메인이 등록되는 이름에 따른 특정 레지스트리에 정해진 도메인별 요금을 지불합니다. ICANN은 각 레지스트리와 계약을 체결합니다. 또한 등록기관 인가 시스템을 운영하기도 합니다. 이러한 계약이 도메인 이름 시스템(결국, 인터넷)에 일관되고 안정적인 환경을 제공합니다."}
{"title": "URL", "subtitle": "루트서버", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "루트 서버는 상황이 전혀 다릅니다. 루트 서버는 13개가 있습니다. 더욱 정확하게 말하자면 인터넷에는 루트 서버를 찾을 수 있는 IP 주소가 13개 있습니다. 13개의 IP 주소 중 하나가 있는 서버는 수십 개의 물리적 위치에 있을 수 있습니다. 이러한 서버는 모두 인터넷의 주소록에 대한 주요 색인 역할을 하는 동일한 파일의 사본을 저장합니다. 여기에서는 각 최상위 도메인(.com, .de 등)의 주소가 나열되고 레지스트리 고유의 주소록을 찾을 수 있습니다. 실제로는 루트 서버는 인터넷의 규모를 고려할 때 그다지 자주 찾지 않습니다. 네트워크에 있는 컴퓨터가 보유하고 있는 특정 최상위 도메인의 주소를 한 번 알게 되면 주소가 변경되지 않았는지 가끔씩만 재확인하기 때문입니다. 하지만 루트 서버는 인터넷이 원활하게 동작하는 데 있어 여전히 중요합니다."}
{"title": "URL", "subtitle": "ICANN 역할", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "ICANN의 역할은 수많은 컴퓨터가 인터넷에서 서로를 찾을 수 있게 하는, 상호 연결된 대규모의 복잡한 고유 식별자 네트워크를 감독하는 것입니다. 이를 일반적으로 “보편적 분해능”이라고 하며 네트워크나 전 세계 어느 곳에 있든 간에 네트워크에 액세스할 때 예측 가능한 동일한 결과를 얻는다는 것을 의미합니다. 이러한 역할이 없으면 사용자 위치에 따라 인터넷이 완전히 다르게 작동할 수 있습니다."}
{"title": "URL", "subtitle": "ICANN 구성", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "세 개의 “지원 조직”이 있습니다. IP 주소를 다루는 조직, 도메인 이름을 다루는 조직, 국가 코드 최상위 도메인의 관리자(특별 예외는 아래에 설명됨). 그런 다음 ICANN에 자문과 추천을 하는 네 개의 \"자문 위원회\"가 있습니다. 이들은 각기 다음을 대변합니다. 정부 및 국제 협약 조직, 루트 서버 운영자, 인터넷 보안 관리 그룹, 평균적인 인터넷 사용자를 의미하는 “일반” 커뮤니티. 마지막으로 인터넷 기술의 기본 프로토콜을 고안하는 조직과 협업하는 기술 연락 그룹이 있습니다. ICANN의 최종 결정은 이사회에서 내려집니다. 이사회는 21명의 회원으로 구성되며 이 중 15명은 투표권이 있고 6명은 투표권이 없습니다. 투표권이 있는 구성원 중 다수(8명)는 독립적인 지명위원회에 의해 선출되고 나머지는 지원 조직의 지정된 구성원입니다."}
{"title": "URL", "subtitle": "ICANN 책임", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "외부적으로 ICANN은 미국 내 캘리포니아주의 법에 따른 조직입니다. 즉 ICANN은 미국 법을 준수해야 하며 법률 체계에 따른 책임을 질 수 있습니다. 즉 ICANN은 법정에 출두할 수 있습니다. 또한 ICANN은 비영리 공익 기업으로, 이사들이 기업법에 따라 의무를 다할 법적 책임이 있습니다. 내부적으로 ICANN은 다음을 통해 커뮤니티에 책임을 집니다. 내규, 전 세계 ICANN 이사회의 대표 구성, 투표권이 있는 이사회 구성원 대다수를 선출하는 독립 지명 위원회, 매년 이사회가 선출하는 선임 실무진, 세 개의 분쟁 해결 절차(이사회 재고 위원회, 독립 검토 패널, 옴부즈맨)"}
{"title": "URL", "subtitle": "ICANN 책임", "source": "https://www.icann.org/resources/pages/what-2012-02-25-ko", "text": "독일의 경우 .de와 영국의 경우 .uk와 같은 \"국가 코드 최상위 도메인\"(ccTLD)의 양식에 이에 대한 중요한 예외가 있습니다. 250개가 넘는 ccTLD가 있으며 이 중 일부는 ICANN과 계약이 되어 있고, 나머지는 ICANN과의 작업 협정에 서명했으며, 이 중 일부는 아직 ICANN과 공식 계약을 체결하지 않습니다. 하지만 ICANN은 모든 인터넷 사용자들이 찾을 수 있도록 모든 ccTLD의 주 주소가 나열된 \"IANA 기능\"을 수행합니다. 또한 ICANN은 더 넓은 시스템에 새로운 TLD를 추가할 수 있습니다. 2000년과 2004년에는 7개와 6개의 새로운 TLD를 각각 \"루트에 추가\"했습니다."}
{"title": "URL", "subtitle": "gTLD", "source": "https://library.gabia.com/contents/domain/713/", "text": "일반 최상위 도메인(gTLD, generic Top Level Domain): New gTLD나 ccTLD에 비해 가격대가 낮음. 비교적 오랜 역사를 가지고 있어 시스템이 안정화되어 있고, 인지도도 높음. 일부를 제외하고 신청 자격에 제한이 없음. com, net, org, biz, info, name, asia, jobs, mobi, tel, travel, xxx"}
{"title": "URL", "subtitle": "New gTLD", "source": "https://library.gabia.com/contents/domain/713/", "text": "신규 일반 최상위 도메인(New gTLD, New generic Top Level Domain): gTLD에 비해 가격이 높으나 프로모션을 통해 낮은 각경에 등록 가능. 2014년 신규 출시되어, 모바일 및 특정 브라우저에 접속이 불안할 수 있음. 신청자격에 제한이 없음. email, coffee, camera, rent, website, xyz, news, blackfriday, loan"}
{"title": "URL", "subtitle": "ccTLD", "source": "https://library.gabia.com/contents/domain/713/", "text": "국가 코드 최상위 도메인(ccTLD, country code Top Level Domain): 대체로 가격대가 높음. 각 aTLD는 도메인 등록자나 단체의 소속 국가 혹은 활동 국가를 보여줌. 관할 국의 상황, 정책에 따라 시스템이 불안정할 수 있음. 신청 자격에 제한이 있을 수 있음. kr, jp, cn, in, mx, us, de, tv, me"}
{"title": "URL", "subtitle": "ccTLD", "source": "https://xn--3e0bx5euxnjje69i70af08bea817g.xn--3e0b707e/jsp/infoboard/dataView.jsp?bNo=202&dNo=317", "text": "국가최상위도메인(ccTLD): ISO-3166-1(국가와 부속영토 명칭 부호) 표준에 따라 할당됨. 영문은 「.kr」, 한글은 「.한국」이 우리나라의 국가최상위도메인. 2014년 9월 19일 기준 국가최상위도메인은 총 316개이며, 이 중 영문 국가최상위도메인은 255개, 다국어 국가최상위도메인(영문 외 언어)은 61개임"}
{"title": "URL", "subtitle": "gTLD", "source": "https://xn--3e0bx5euxnjje69i70af08bea817g.xn--3e0b707e/jsp/infoboard/dataView.jsp?bNo=202&dNo=317", "text": "일반최상위도메인(gTLD): 도메인이름시스템(DNS) 상에서 최상위도메인(TLD)의 하나로, .com, .net 등 2012년 이전까지 총 23개가 생성된 바 있으나 ICANN의 신규 gTLD 도입 정책에 따라 2012년 상반기에 총 1,930개의 신규 gTLD 신청서가 접수되었으며, 2014년 9월 19일 기준 IDN(다국어 도메인)을 포함하여 1263개의 신규 gTLD가 생성되었음"}
{"title": "URL", "subtitle": "RDAP와 WHOIS 차이점", "source": "https://www.arin.net/resources/registry/whois/rdap/", "text": "RFC STD 95 에 정의된 RDAP는 JSON 형식으로 표준화된 응답을 제공하는 HTTP 기반 REST 방식 프로토콜인 반면, Whois( RFC 3912 )는 특수 프로토콜과 포트를 사용하는 텍스트 기반 프로토콜입니다. RDAP는 업계에서 인정하는 웹 기반 RESTful 프로토콜 정의를 충족합니다. RDAP는 다양한 리소스를 구분하기 위해 URL을 사용하여 HTTP/HTTPS를 통해 JSON 응답을 제공합니다. RDAP에서 사용하는 유일한 HTTP 메서드는 HEAD 및  GET 입니다. RDAP 응답 데이터 개체는 영어 외의 언어로 쉽게 번역되지만 Whois 응답 데이터 개체는 그렇지 않을 수 있습니다. RDAP 응답은 다른 RIR에 대한 직접적인 추천을 제공하는 반면, Whois는 질의나 응답을 정의하지 않으며 DNR 및 RIR과의 상호 작용은 상당히 다를 수 있습니다."}
{"title": "URL", "subtitle": "CA(인증 기관)", "source": "https://www.digicert.com/kr/faq/compliance/what-is-a-certificate-authority-ca", "text": "CA(인증 기관)는 브라우저에서 TLS/SSL 및 기타 형식의 인증서를 발급할 수 있는 권한을 부여받은 회사 또는 법인입니다. 이러한 조직은 제3자에 의해 연례 감사를 받으며, CA/B Forum에서 규정한 Baseline Requirements에 명시된 대로 인증서 검증, 발급, 해지에 대해 정의된 정책과 절차를 준수하고 있는지 확인을 거칩니다. CA에서 발급한 인증서로 보호되지 않는 웹 페이지를 방문하는 인터넷 사용자는 브라우저 보안 경고를 받게 됩니다."}
{"title": "URL", "subtitle": "CA 시장 점유율", "source": "https://w3techs.com/technologies/overview/ssl_certificate", "text": "Let's Encrypt는 전체 웹사이트의 59.8%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 63.4%에 해당합니다. GlobalSign은 전체 웹사이트의 21.9%에서 사용되고 , SSL 인증 기관 시장 점유율 23.2%에 해당. Sectigo는 전체 웹사이트의 6.0%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 6.4%에 해당. GoDaddy Group은 전체 웹사이트의 3.8%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 4.0%에 해당. DigiCert Group은 전체 웹사이트의 2.4%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 2.5%에 해당. Actalis는 전체 웹사이트의 0.6%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 0.6%에 해당. Certum은 전체 웹사이트의 0.6%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 0.6%에 해당. Secom Trust는 전체 웹사이트의 0.3%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 0.3%에 해당. SSL.com은 전체 웹사이트의 0.1%에서 사용되며, 이는 SSL 인증 기관 시장 점유율 0.1%에 해당. 다음 SSL 인증 기관의 시장 점유율은 0.1% 미만입니다. IdenTrust, Entrust, TWCA, WISeKey Group, Harica, ZeroSSL, Buypass, SwissSign, Chunghwa Telecom, Trustwave, Deutsche Telekom, GoGetSSL, Gandi, Certigna, D-Trust, Microsec, Izenpe, NetLock, Network Solutions, CertSIGN, Hongkong Post, TÜBİTAK, Disig, E-Tugra, Firmaprofesional, StartCom, Camerfirma, Amazon"}
{"title": "URL", "subtitle": "CA", "source": "https://ko.wikipedia.org/wiki/%EC%9D%B8%EC%A6%9D_%EA%B8%B0%EA%B4%80", "text": "암호학에서 인증 기관(Certificate Authority, CA)은 다른 곳에서 사용하기 위한 디지털 인증서를 발급하는 하나의 단위이다. 인증 기관은 많은 공개 키 기반구조( PKI, public key infrastructure)에 설명되어 있다. 이러한 서비스로 요금을 부과하는 상업 목적의 인증 기관들이 많이 있으며, 공익 단체나 정부들도 저만의 인증 기관을 가지고 있으며 무료 인증 기관들도 있다. 기업이나 단체별로 운영하는 인증 기관도 있는데, 이 경우 사설 인증기관으로 분류하기도 한다."}
{"title": "URL", "subtitle": "IANA", "source": "https://ko.wikipedia.org/wiki/IANA", "text": "IANA(Internet Assigned Numbers Authority)는 인터넷 할당 번호 관리기관의 약자로 IP 주소, 최상위 도메인 등을 관리하는 단체이다. 현재 ICANN이 관리하고 있다. 처음에는 미국 캘리포니아 로스앤젤레스에 위치하고 있는 서던캘리포니아 대학교 정보 과학 학회의 존 퍼스텔이 서던캘리포니아 대학교 정보 과학 학회와 미국 국방부 간에 맺어진 계약 아래 관리했으며, 퍼스텔은 미국 상무부 계약으로 ICANN이 설립 될 때까지 이 업무를 수행했다."}
{"title": "URL", "subtitle": "RDAP", "source": "https://www.icann.org/en/contracted-parties/registry-operators/resources/registration-data-access-protocol", "text": "등록 데이터 접근 프로토콜(RDAP)은 사용자가 현재 등록 데이터에 접근할 수 있도록 하며, WHOIS 프로토콜을 대체하기 위해 개발되었습니다. RDAP는 IETF(Internet Engineering Task Force)의 기술 커뮤니티에서 개발되었습니다. RDAP는 WHOIS처럼 등록 데이터를 전달하는 프로토콜이지만, 구현 방식상 데이터 접근 및 쿼리 응답 형식이 변경되고 표준화될 것입니다. RDAP는 국제화 지원, 안전한 데이터 접근, 등록 데이터에 대한 차등 접근 제공 등 WHOIS 프로토콜에 비해 여러 가지 장점을 가지고 있습니다."}
{"title": "URL", "subtitle": "WHOIS", "source": "https://who.is/", "text": "WHOIS는 도메인 이름, IP 주소, 자율 시스템(AS)에 등록된 사용자에 대한 정보가 저장된 데이터베이스를 쿼리하는 데 널리 사용되는 인터넷 프로토콜입니다. 소유자 연락처 정보, 등록 날짜, 네임서버 정보를 찾는 데 도움이 됩니다."}
{"title": "URL", "subtitle": "RDAP", "source": "https://who.is/", "text": "RDAP(등록 데이터 접근 프로토콜)는 WHOIS의 최신 버전입니다. 등록 데이터에 접근하는 표준화되고 안전하며 더욱 체계적인 방법을 제공하며, 더욱 풍부한 정보와 향상된 개인정보 보호 기능을 제공합니다."}
{"title": "URL", "subtitle": "X.509", "source": "https://ko.wikipedia.org/wiki/X.509", "text": "X.509는 암호학에서 공개키 인증서와 인증알고리즘의 표준 가운데에서 공개 키 기반(PKI)의 ITU-T 표준이다. X.509는 1988년 7월 3일 X.500 표준안의 일환으로 시작되었다. 1993년 인증기관 고유 식별자와 주체고유 식별자가 추가된 v2가 발표되었으며, 1996년에 확장 기능(Extension)을 이용해 데이터를 추가할 수 있는 v3가 발표되어 현재 쓰이고 있다. PGP처럼 상호 신뢰를 기반으로 하는 웹 모델과 달리, X.509는 매우 엄격한 수직적 구조를 채택하였다. 따라서 하나의 인증 기관을 정점으로하는 트리 구조를 갖게 된다. 이러한 형태의 불편함을 해소하기 위해, v3는 보다 유연한 구조를 채택하여 몇 개의 신용할만한 Root CA끼리는 상호 인증, 혹은 자가 인증을 허용하고 있다."}
{"title": "URL", "subtitle": "X.509", "source": "https://ko.wikipedia.org/wiki/X.509", "text": "X.509 시스템에서 CA는 X.500 규약에 따라 서로 구별되는 공개키를 가진 인증서를 발행한다. 한 조직의 인증된 루트 인증서는 그 PKI 시스템을 사용하는 모든 직원들에 분배될 수 있다. 인터넷 익스플로러(Internet Explorer)나 모질라(Mozilla), 오페라(Opera)와 같은 브라우저는 SSL 인증서라 불리는 미리 설치된 루트 인증서가 있다. 사용자가 이 루트 인증서를 제거하거나 사용중지할 수도 있기는 하지만, 거의 그러지는 않는다. X.509는 또한 CRL (certificate revocation list) 구현을 위한 표준도 포함한다. IETF에서 승인된 인증서 유효성 점검 방법은 OCSP(Online Certificate Status Protocol)이다."}
{"title": "URL", "subtitle": "ITU-T", "source": "https://ko.wikipedia.org/wiki/ITU-T", "text": "ITU-T(국제전기통신연합 전기통신표준화부문, International Telecommunication Union Telecommunication Standardization Sector) 은 국제 전기 통신 연합 부문의 하나로 통신 분야의 표준을 책정하며 스위스 제네바 시에 위치해 있다. ITU의 표준화 작업은 국제 전신 연합의 탄생과 더불어 1865년으로 거슬러 올라간다. 1947년에 이 부문은 국제 연합의 전문 부서가 되었으며 국제 전신과(CCITT)는 1956년에 창설되었다. 이것이 1993년에 ITU-T라는 이름으로 바뀌었다. ITU-T의 임무는 때에 맞춰 모든 전기통신 분야에 적용하는 표준을 효율적으로 만들어내는 것이다. 또, 국제 전기 통신 서비스를 위한 규정 요금과 회계 원칙을 정의하기도 한다."}
{"title": "URL", "subtitle": "단축 URL", "source": "https://www.menlosecurity.com/ko-kr/blog/url-shortening-allows-threats-to-evade-url-filtering-and-categorization-tools", "text": "널리 사용되는 URL 단축 서비스는 공격자가 사용자가 자신도 모르게 악성 링크를 클릭하도록 속이는 것을 방지합니다.시장 분석을 통해 짧고 읽기 쉬우거나 기억하기 쉬운 URL이 긴 URL보다 클릭률이 높다는 증거가 오랫동안 제공되어 왔으며, 이러한 관행은 브랜드와 고객 사이에서 널리 받아들여지고 있습니다. 문제는 URL 단축이 링크의 실제 목적지를 가리므로 사용자는 링크가 자신을 적절한 페이지 또는 웹 사이트로 안내할지 여부를 알 수 없다는 것입니다. 브랜드 로고, 어조 및 스타일을 정확하게 모방할 수 있는 피싱 이메일이 점점 더 정교해지고 있는 상황에서 이러한 공격은 사용자가 너무 늦기 전까지는 악성 링크를 식별하는 것을 사실상 불가능하게 만듭니다."}
{"title": "URL", "subtitle": "URL 철자 오류", "source": "https://www.digicert.com/kr/blog/how-to-identify-fake-websites", "text": "URL에 철자 오류가 있는지 확인: 가짜 사이트의 주요 특징 중 하나는 URL의 철자 오류입니다. 사기범들은 amazon.com에서 URL 이름을 살짝 바꾸거나(예: amaz0n.com), 도메인 확장자를 바꾸고는 합니다(예: amazon.org)."}
{"title": "URL", "subtitle": "사이트 인증마크 확인", "source": "https://www.digicert.com/kr/blog/how-to-identify-fake-websites", "text": "사이트 인증마크(seal)는 신뢰할 수 있는 사이트임을 나타내는 표시로, 일반적으로 인증마크를 클릭하면 웹사이트에 대한 자세한 정보와 인증을 받은 방법을 확인할 수 있습니다. 클릭해도 아무 동작이 일어나지 않는 마크는 불법 복제 마크일 가능성이 높으므로 신뢰해서는 안 됩니다."}
{"title": "URL", "subtitle": "자물쇠 표시 찾기", "source": "https://www.digicert.com/kr/blog/how-to-identify-fake-websites", "text": "웹사이트에 있는 자물쇠 표시는 사용자 데이터를 암호화하는 TLS/SSL 인증서로 사이트가 보호되고 있음을 의미합니다. 자물쇠 표시는 주소창 왼쪽 상단에서 찾을 수 있습니다. 자물쇠가 표시되는 TLS 인증서에는 세 가지 유형, 즉, 도메인 검증, 조직 검증, 확장 검증이 있습니다."}
{"title": "URL", "subtitle": "HTTP 헤더 (HTTP Header)", "source": "https://developer.mozilla.org/en-US/docs/Glossary/HTTP_header", "text": "HTTP 헤더는 HTTP 요청 또는 응답의 필드로, 요청 또는 응답에 대한 추가적인 컨텍스트와 메타데이터를 전달합니다. 예를 들어, 요청 메시지는 헤더를 사용하여 선호하는 미디어 형식을 나타낼 수 있으며, 응답은 헤더를 사용하여 반환된 본문의 미디어 형식을 나타낼 수 있습니다. 헤더는 대소문자를 구분하지 않으며, 줄의 시작 부분에서 시작하고 바로 뒤에는 ':'와 헤더에 따라 달라지는 값이 옵니다."}
{"title": "URL", "subtitle": "요청 헤더(Request header)", "source": "https://developer.mozilla.org/en-US/docs/Glossary/Request_header", "text": "요청 헤더(Request header)는 HTTP 요청에서 요청 컨텍스트에 대한 정보를 제공하는 데 사용되는 HTTP 헤더 입니다 . 이를 통해 서버는 응답을 맞춤 설정할 수 있습니다. 예를 들어, Accept-*헤더는 허용되고 선호되는 응답 형식을 나타냅니다. 다른 헤더는 인증 정보(예: Authorization)를 제공하거나, 캐싱을 제어하거나, 사용자 에이전트 또는 리퍼러에 대한 정보를 얻는 데 사용될 수 있습니다."}
{"title": "URL", "subtitle": "표현 헤더 (Representation header)", "source": "https://developer.mozilla.org/en-US/docs/Glossary/Representation_header", "text": "표현 헤더(Representation header, 또는 '표현 메타데이터')는 메시지에 포함된 데이터를 해석하는 방법을 설명하는 HTTP 헤더 입니다. 예를 들어, 특정 메시지의 콘텐츠는 전송을 위해 인코딩될 수 있고, 전체 리소스는 XML, JSON, HTML 또는 마크다운과 같은 특정 미디어 유형으로 포맷되거나, 특정 문자 언어 또는 지역에 맞게 로컬라이제이션되거나, 특정 알고리즘을 사용하여 압축될 수 있습니다. 표현 헤더를 통해 기본 데이터를 추출하고 이해할 수 있습니다. 각 경우 기본 리소스는 의미적으로 동일하지만 표현 방식은 다릅니다."}
{"title": "URL", "subtitle": "표현 헤더 (Representation header)", "source": "https://developer.mozilla.org/en-US/docs/Glossary/Representation_header", "text": "클라이언트는 콘텐츠 협상 중에 보내고 싶은 형식을 헤더를 사용하여 지정하고, 표현 헤더는 클라이언트에게 수신한 선택된 표현Accept-* 의 형식을 알려줍니다. 표현 헤더는 HTTP 요청과 응답 메시지 모두에서 다양한 메서드로 존재할 수 있습니다. HEAD 요청에 대한 응답으로 전송되는 경우, GET 요청과 함께 리소스가 요청된 경우 선택될 신체 콘텐츠 표현을 설명합니다."}
{"title": "URL", "subtitle": "응답 헤더 (Response header)", "source": "https://developer.mozilla.org/en-US/docs/Glossary/Response_header", "text": "응답 헤더(Response header)는 HTTP 응답에 사용될 수 있는 HTTP 헤더로 , 메시지 내용과는 관련이 없습니다. 응답 헤더(예: 연령, 위치 또는 서버)는 응답에 대한 보다 자세한 컨텍스트를 제공하는 데 사용됩니다. 응답에 나타나는 모든 헤더가 사양에 따라 응답 헤더로 분류되는 것은 아닙니다. 예를 들어, Content-Type 헤더는 응답 메시지 본문에 있는 원래 데이터 유형을 나타내는 표현 헤더입니다(Content-Encoding 표현 헤더에 인코딩이 적용되기 전). 그러나 \"대화적으로\" 모든 헤더는 일반적으로 응답 메시지에서 응답 헤더라고 불립니다."}
{"title": "URL", "subtitle": "메타데이터 요청 헤더 가져오기 (Fetch metadata request header)", "source": "https://developer.mozilla.org/ko/docs/Glossary/Fetch_metadata_request_header", "text": "메타데이터 가져오기 요청 헤더는 요청이 시작된 맥락에 대한 추가 정보를 제공하는 HTTP 요청 헤더입니다. 이를 통해 서버는 요청이 어디서 왔는지와 리소스를 어떻게 사용하는지에 따라 요청을 허용할지 여부를 결정할 수 있습니다. 이 정보를 사용하여 서버는 리소스 격리 정책을 구현할 수 있고, 이를 통해 외부 사이트에서는 공유하기로 의도된, 적절하게 사용되는 리소스만 요청할 수 있습니다. 이 접근 방식은 CSRF, 교차 사이트 스크립트 포함(Cross-site Script Inclusion, 'XSSI'), 타이밍 공격 및 교차 출처 정보 유출(cross-origin information leaks)과 같이, 일반적인 교차 사이트 웹 취약점을 완화하는 데 도움이 될 수 있습니다."}
{"title": "URL", "subtitle": "교차 사이트 요청 위조 (CSRF)", "source": "https://developer.mozilla.org/ko/docs/Glossary/CSRF", "text": "교차 사이트 요청 위조(Cross-Site Request Forgery, CSRF)는 신뢰할 수 있는 사용자를 사칭해 웹 사이트에 원하지 않는 명령을 보내는 공격입니다. 예를 들면, 다른 곳으로 이동하려 하는 링크 뒤 URL에 악성 매개변수를 포함하는 식으로 할 수 있습니다."}
{"title": "URL", "subtitle": "HTTP 헤더", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers", "text": "HTTP 헤더(HTTP headers)는 클라이언트와 서버가 요청 또는 응답 메시지와 함께 추가 정보를 전달할 수 있도록 합니다. HTTP/1.X에서 헤더는 대문자와 소문자를 구분하지 않는 이름이며, 그 다음에는 콜론이, 그 다음에는 선택적인 공백이 무시되며, 마지막으로 값에 따라 (예: 허용: POST) 표시됩니다. HTTP/2 이상에서는 개발자 도구에서 볼 때 헤더가 소문자로 표시되며(*/*), 특정 의사 헤더 그룹(상태: 200)의 경우 콜론으로 접두사가 붙습니다. 각 프로토콜 버전의 구문에 대한 자세한 정보는 HTTP 메시지 페이지에서 확인할 수 있습니다."}
{"title": "URL", "subtitle": "페이로드 헤더 (Payload header)", "source": "https://developer.mozilla.org/en-US/docs/Glossary/Payload_header", "text": "페이로드 헤더(Payload header)는 하나 이상의 메시지에서 원래 자원 표현의 안전한 전송 및 재구성과 관련된 페이로드 정보를 설명하는 HTTP 헤더입니다. 여기에는 메시지 페이로드의 길이, 이 페이로드에 포함되는 자원의 일부(다중 메시지의 경우), 전송에 적용되는 인코딩, 메시지 무결성 검사 등과 같은 정보가 포함됩니다. 페이로드 헤더는 HTTP 요청 메시지와 응답 메시지(즉, 페이로드 데이터를 전송하는 모든 메시지)에 모두 존재할 수 있습니다."}
{"title": "URL", "subtitle": "End-to-end headers", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "엔드 투 엔드 헤더(End-to-end headers)는 메시지의 최종 수신자인 요청 서버 또는 응답 클라이언트에게 전송되어야 합니다. 중간 프록시는 이러한 헤더를 수정 없이 재전송해야 하며 캐시는 헤더를 저장해야 합니다."}
{"title": "URL", "subtitle": "Hop-by-hop headers", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "홉 바이 홉 헤더(Hop-by-hop headers)는 단일 전송 수준의 연결에만 의미가 있으며 프록시에 의해 재전송되거나 캐시되어서는 안 됩니다. 연결 헤더를 사용하여 홉 바이 홉 헤더만 설정할 수 있습니다."}
{"title": "URL", "subtitle": "헤더 - Authentication", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "WWW-Authenticate: 리소스에 액세스하는 데 사용해야 하는 인증 방법을 정의합니다. Authorization: 서버에 사용자 에이전트를 인증하기 위한 자격 증명이 포함되어 있습니다. Proxy-Authenticate: 프록시 서버 뒤에 있는 리소스에 액세스하는 데 사용해야 하는 인증 방법을 정의합니다. Proxy-Authorization: 프록시 서버로 사용자 에이전트를 인증하기 위한 자격 증명이 포함되어 있습니다."}
{"title": "URL", "subtitle": "헤더 - 캐싱 (Caching)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Age: 객체가 프록시 캐시에 있었던 시간(초)입니다. Cache-Control: 요청과 응답 모두에 캐싱 메커니즘을 적용하기 위한 지침입니다. Clear-Site-Data: 요청한 웹사이트와 관련된 탐색 데이터(쿠키, 저장소, 캐시 등)를 지웁니다. Expires: 해당 날짜/시간 이후에는 응답이 오래된 것으로 간주됩니다. No-Vary-Search 실험적: URL의 쿼리 매개변수가 캐시 매칭에 미치는 영향을 정의하는 규칙 집합을 지정합니다. 이 규칙은 URL 매개변수가 다른 동일한 URL을 별도의 브라우저 캐시 항목으로 저장할지 여부를 결정합니다."}
{"title": "URL", "subtitle": "헤더 - 조건문 (Conditionals)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Last-Modified: 리소스의 마지막 수정 날짜로, 동일한 리소스의 여러 버전을 비교하는 데 사용됩니다. 보다 정확도는 떨어지지만 ETag, 일부 환경에서는 계산하기가 더 쉽습니다. If-Modified-Since및 를 사용하는 조건부 요청은 If-Unmodified-Since이 값을 사용하여 요청의 동작을 변경합니다. ETag: 리소스 버전을 식별하는 고유 문자열입니다. If-Match및 를 사용하는 조건부 요청은 If-None-Match이 값을 사용하여 요청의 동작을 변경합니다. If-Match: 요청을 조건부로 만들고, 저장된 리소스가 주어진 ETag 중 하나와 일치하는 경우에만 메서드를 적용합니다. If-None-Match: 요청을 조건부로 만들고, 저장된 리소스가 주어진 ETag와 일치 하지 않는 경우에만 메서드를 적용합니다. 이는 안전한 요청을 위해 캐시를 업데이트하거나, 이미 리소스가 있는 경우 새 리소스를 업로드하는 것을 방지하는 데 사용됩니다. If-Modified-Since: 요청을 조건부로 설정하고, 지정된 날짜 이후에 리소스가 수정된 경우에만 전송되도록 합니다. 캐시가 오래된 경우에만 데이터를 전송하는 데 사용됩니다. If-Unmodified-Since: 요청을 조건부로 설정하고, 지정된 날짜 이후에 수정되지 않은 리소스만 전송되도록 합니다. 이를 통해 특정 범위의 새 조각과 이전 조각의 일관성을 보장하거나, 기존 문서를 수정할 때 낙관적 동시성 제어 시스템을 구현할 수 있습니다. Vary: 원본 서버에서 새로운 응답을 요청하는 대신 캐시된 응답을 사용할 수 있는지 여부를 결정하기 위해 요청 헤더를 일치시키는 방법을 결정합니다."}
{"title": "URL", "subtitle": "헤더 - 연결 관리 (Connection management)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Connection: 현재 거래가 완료된 후 네트워크 연결이 계속 열려 있는지 여부를 제어합니다. Keep-Alive: 지속적인 연결이 열려 있어야 하는 기간을 제어합니다"}
{"title": "URL", "subtitle": "Content negotiation", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Accept: 서버에 다시 보낼 수 있는 데이터 유형을 알려줍니다. Accept-Encoding: 리소스에 다시 전송될 때 사용할 수 있는 인코딩 알고리즘(일반적으로 압축 알고리즘) 입니다. Accept-Language: 서버가 반환할 것으로 예상되는 인간 언어를 서버에 알려줍니다. 이는 힌트일 뿐이며 사용자가 완전히 제어할 수 있는 것은 아닙니다.  서버는 드롭다운에서 언어를 선택하는 등 명시적인 사용자 선택을 무시하지 않도록 항상 주의해야 합니다. Accept-Patch: 서버가 PATCH 요청에서 어떤 미디어 유형을 이해할 수 있는지 알리는 요청 내용 협상 응답 헤더 입니다. Accept-Post: 서버가 POST 요청에서 어떤 미디어 유형을 이해할 수 있는지 알리는 요청 내용 협상 응답 헤더 입니다."}
{"title": "URL", "subtitle": "헤더 - Controls", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Expect: 요청을 적절하게 처리하기 위해 서버가 충족해야 하는 기대 사항을 나타냅니다. Max-Forwards: TRACE를 사용하면 요청이 보낸 사람에게 반영되기 전에 수행할 수 있는 최대 홉 수를 나타냅니다."}
{"title": "URL", "subtitle": "헤더 - 쿠키 (Cookies)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Cookie: 서버가 이전에 Set-Cookie 헤더와 함께 보낸 HTTP 쿠키를 저장합니다. Set-Cookie: 서버에서 사용자 에이전트로 쿠키를 보냅니다."}
{"title": "URL", "subtitle": "교차 출처 리소스 공유(CORS)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS", "text": "CORS ( Cross-Origin Resource Sharing )는 HTTP 헤더 기반 메커니즘으로, 서버가 브라우저가 리소스 로딩을 허용해야 하는 출처 (도메인, 스킴 또는 포트)를 자신의 출처가 아닌 다른 출처로 지정할 수 있도록 합니다. CORS는 또한 브라우저가 해당 출처 리소스를 호스팅하는 서버에 \"사전 요청(preflight)\"을 보내는 메커니즘을 사용하여 서버가 실제 요청을 허용하는지 확인합니다. 이 사전 요청에서 브라우저는 HTTP 메서드와 실제 요청에 사용될 헤더를 나타내는 헤더를 전송합니다."}
{"title": "URL", "subtitle": "헤더 - CORS", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Access-Control-Allow-Credentials: 자격 증명 플래그가 참일 때 요청에 대한 응답을 노출할 수 있는지 여부를 나타냅니다. Access-Control-Allow-Headers: 실제 요청을 할 때 어떤 HTTP 헤더를 사용할 수 있는지 나타내기 위해 사전 요청 에 대한 응답으로 사용됩니다. Access-Control-Allow-Methods: 사전 요청에 대한 응답으로 리소스에 액세스할 때 허용되는 방법을 지정합니다. Access-Control-Allow-Origin: 응답을 공유할 수 있는지 여부를 나타냅니다. Access-Control-Expose-Headers: 이름을 나열하여 응답의 일부로 노출될 수 있는 헤더를 나타냅니다. Access-Control-Max-Age: 프리플라이트 요청의 결과를 캐시할 수 있는 기간을 나타냅니다. Access-Control-Request-Headers: 실제 요청이 이루어질 때 어떤 HTTP 헤더가 사용될지 서버에 알리기 위해 사전 요청을 발행하는 데 사용됩니다. Access-Control-Request-Method: 실제 요청이 이루어질 때 어떤 HTTP 메서드가 사용될지 서버에 알리기 위해 사전 요청을 발행하는 데 사용됩니다. Origin: 페치(fetch)가 시작된 곳을 나타냅니다. Timing-Allow-Origin: Resource Timing API 의 기능을 통해 검색된 속성 값을 볼 수 있는 출처를 지정합니다 . 이 값은 교차 출처 제한으로 인해 0으로 보고될 수 있습니다."}
{"title": "URL", "subtitle": "CORS", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS", "text": "보안상의 이유로 브라우저는 스크립트에서 시작된 교차 출처 HTTP 요청을 제한합니다. 예를 들어, 예를 들어, fetch()와 XMLHTtpRequest는 동일한 오리진 정책을 따릅니다. 즉, 해당 API를 사용하는 웹 애플리케이션은 다른 출처의 응답에 올바른 CORS 헤더가 포함되어 있지 않는 한, 애플리케이션이 로드된 동일한 출처에서만 리소스를 요청할 수 있습니다."}
{"title": "URL", "subtitle": "XMLHttpRequest", "source": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest", "text": "XMLHttpRequest(XHR) 객체는 서버와 상호 작용하는 데 사용됩니다. 전체 페이지를 새로 고치지 않고도 URL에서 데이터를 가져올 수 있습니다. 이를 통해 웹 페이지는 사용자 작업을 방해하지 않고 페이지의 일부만 업데이트할 수 있습니다."}
{"title": "URL", "subtitle": "헤더 - 다운로드 (Downloads)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Content-Disposition: 전송된 리소스를 인라인으로 표시해야 하는지(헤더 없이 기본 동작), 아니면 다운로드처럼 처리하고 브라우저에 \"다른 이름으로 저장\" 대화 상자를 표시해야 하는지를 나타냅니다."}
{"title": "URL", "subtitle": "헤더 - Integrity digests", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Content-Digest Experimental: HTTP 메시지(메시지 내용)에서 콘텐츠 인코딩 및 콘텐츠 범위에 따라 프레임된 옥텟 스트림의 다이제스트를 제공합니다. Repr-Digest Experimental: 전송 전에 대상 리소스의 선택된 표현에 대한 요약을 제공합니다. Content-Digest 와 달리 다이제스트는 콘텐츠 인코딩 또는 콘텐츠 범위를 고려하지 않습니다. Want-Content-Digest Experimental: Content-Digest 헤더에 대한 바람을 나타냅니다. 이 헤더는 Want-Repr-Digest의 Content- 아날로그입니다. Want-Repr-Digest Experimental: Repr-Digest 헤더에 대한 소망을 나타냅니다. 이 헤더는 Want-Content-Digest의 Repr- 아날로그입니다."}
{"title": "URL", "subtitle": "헤더 - 무결성 정책(Integrity-Policy)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "무결성 정책(Integrity-Policy): 사용자 에이전트가 로드하는 모든 리소스(특정 유형의 리소스)가 하위 리소스 무결성을 보장받도록 합니다. 무결성-정책-보고서 전용(Integrity-Policy-Report-Only): 사용자 에이전트가 서브리소스 무결성을 위반할 수 있는 리소스에 대한 보고서는 무결성 정책이 시행될 경우(무결성-정책 헤더를 사용하여) 이를 보장합니다."}
{"title": "URL", "subtitle": "헤더 - 메시지 본문 정보", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Content-Length: 리소스의 크기(바이트 단위의 십진수)입니다. Content-Type: 리소스의 미디어 유형을 나타냅니다. Content-Encoding: 압축 알고리즘을 지정하는 데 사용됩니다. Content-Language: 청중을 대상으로 하는 인간 언어를 설명하여 사용자가 자신의 선호하는 언어에 따라 구별할 수 있도록 합니다. Content-Location: 반환된 데이터에 대한 대체 위치를 나타냅니다."}
{"title": "URL", "subtitle": "헤더 - Prefer", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "클라이언트는 요청 및 응답에 대한 선택적 동작을 나타내기 위해 요청과 함께 환경 설정을 전송할 수 있습니다. Prefer: 요청 처리 중 특정 서버 동작에 대한 기본 설정을 나타냅니다. 예를 들어, 최소 응답 콘텐츠(return=minimal) 또는 비동기 처리( respond-async)를 요청할 수 있습니다. 헤더가 지원되지 않는 경우 서버는 요청을 정상적으로 처리합니다. Preference-Applied: Prefer헤더에 지정된 환경 설정 중 어떤 것이 서버에 의해 적용되었는지 클라이언트에게 알려줍니다 . 환경 설정 처리에 대한 투명성을 제공하는 응답 전용 헤더입니다."}
{"title": "URL", "subtitle": "헤더 - 프록시 (Proxy)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Forwarded: 요청 경로에 프록시가 관련될 때 변경되거나 손실되는 프록시 서버의 클라이언트 측 정보를 포함합니다. Via: 정방향 프록시와 역방향 프록시 모두에 의해 추가되며 요청 헤더와 응답 헤더에 나타날 수 있습니다."}
{"title": "URL", "subtitle": "헤더 - 범위 요청 (Range requests)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "HTTP 범위 요청을 통해 클라이언트는 서버에 리소스의 일부를 요청할 수 있습니다. 범위 요청은 랜덤 액세스를 지원하는 미디어 플레이어, 대용량 파일의 일부만 필요한 데이터 도구, 사용자가 다운로드를 일시 중지하고 다시 시작할 수 있는 다운로드 관리자와 같은 애플리케이션에 유용합니다. Accept-Ranges: 서버가 범위 요청을 지원하는지 여부를 나타내며, 지원하는 경우 범위를 표현할 수 있는 단위를 나타냅니다. Range: 서버가 반환해야 하는 문서의 부분을 나타냅니다. If-Range: 주어진 etag 또는 날짜가 원격 리소스와 일치하는 경우에만 실행되는 조건부 범위 요청을 생성합니다. 호환되지 않는 버전의 리소스에서 두 범위를 다운로드하는 것을 방지하는 데 사용됩니다. Content-Range: 전체 본문 메시지에서 일부 메시지가 어디에 속하는지 나타냅니다."}
{"title": "URL", "subtitle": "헤더 - 리디렉션 (Redirection)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Location: 페이지를 리디렉션할 URL을 나타냅니다. Refresh: 브라우저가 페이지를 다시 로드하거나 다른 페이지로 리디렉션하도록 지시합니다. http-equiv=\"refresh\"를 사용하는 메타 요소와 동일한 값을 갖습니다."}
{"title": "URL", "subtitle": "헤더 - 요청 컨텍스트 (Request Context)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "From: 요청하는 사용자 에이전트를 제어하는 인간 사용자의 인터넷 이메일 주소가 포함되어 있습니다. Host: 서버의 도메인 이름(가상 호스팅의 경우)과 (선택적으로) 서버가 수신하는 TCP 포트 번호를 지정합니다. Referer: 현재 요청한 페이지로 연결되는 링크가 있는 이전 웹 페이지의 주소입니다. Referrer-Policy: 헤더에 전송된 참조자 정보 중 어떤 정보를 Referer요청에 포함해야 하는지를 결정합니다. User-Agent: 네트워크 프로토콜 피어가 요청하는 소프트웨어 사용자 에이전트의 애플리케이션 유형, 운영 체제, 소프트웨어 공급업체 또는 소프트웨어 버전을 식별할 수 있도록 하는 특성 문자열을 포함합니다."}
{"title": "URL", "subtitle": "헤더 - 응답 컨텍스트 (Response Context)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Allow: 리소스가 지원하는 HTTP 요청 방법 세트를 나열합니다. Server: 요청을 처리하기 위해 원본 서버에서 사용하는 소프트웨어에 대한 정보가 포함되어 있습니다."}
{"title": "URL", "subtitle": "헤더 - 보안 (Security)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Cross-Origin-Embedder-Policy (COEP): 서버가 특정 문서에 대한 임베더 정책을 선언할 수 있도록 합니다. Cross-Origin-Opener-Policy (COOP): 다른 도메인이 창을 열거나 제어하는 것을 방지합니다. Cross-Origin-Resource-Policy (CORP): 이 헤더가 적용된 리소스의 응답을 다른 도메인이 읽는 것을 방지합니다. Content-Security-Policy (CSP): 사용자 에이전트가 특정 페이지에 로드할 수 있는 리소스를 제어합니다. Content-Security-Policy-Report-Only: 웹 개발자는 정책의 효과를 모니터링하면서도 강제하지 않음으로써 정책을 실험할 수 있습니다. 이러한 위반 보고서는 HTTP POST 요청을 통해 지정된 URI로 전송된 JSON 문서로 구성됩니다. Expect-CT Deprecated: 사이트가 인증서 투명성의 보고 및 집행을 선택하여 해당 사이트에서 잘못 발급된 인증서 사용을 감지할 수 있도록 합니다."}
{"title": "URL", "subtitle": "헤더 - 보안 (Security)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "Permissions-Policy: 웹사이트 자체 프레임과 내장된 <ifframe>에서 브라우저 기능의 사용을 허용하거나 거부할 수 있는 메커니즘을 제공합니다. Reporting-Endpoints: 웹사이트 소유자가 CSP 위반 보고서, Cross-Origin-Opener-Policy 보고서 또는 기타 일반적인 위반과 같은 오류를 수신하는 데 사용되는 하나 이상의 엔드포인트를 지정할 수 있는 응답 헤더입니다. Strict-Transport-Security(HSTS): HTTP 대신 HTTPS를 사용하여 통신을 강제합니다. Upgrade-Insecure-Requests: 서버에 암호화되고 인증된 응답에 대한 클라이언트의 선호도를 나타내는 신호를 보내며, 업그레이드-보안 요청 지시를 성공적으로 처리할 수 있음을 나타냅니다."}
{"title": "URL", "subtitle": "헤더 - 보안 (Security)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#end-to-end_headers", "text": "X-Content-Type-Options: MIME 스니핑을 비활성화하고 브라우저가 콘텐츠 유형에 지정된 유형을 사용하도록 강제합니다. X-Frame-Options(XFO): 브라우저가 페이지를 <frame>, <ifframe>, <embed> 또는 <object>로 렌더링할 수 있는지 여부를 나타냅니다. X-Permitted-Cross-Domain-Policies:  교차 도메인 정책 파일은 Adobe Acrobat이나 Apache Flex 등의 클라이언트에게 동일 출처 정책(Same-Origin Policy)으로 인해 제한될 수 있는 도메인 간 데이터 처리 권한을 부여할 수 있습니다 . X-Permitted-Cross-Domain-Policies헤더는 이러한 정책 파일을 재정의하여 클라이언트가 원치 않는 요청을 차단할 수 있도록 합니다. X-Powered-By:환경이나 기타 프레임워크를 호스팅하여 설정할 수 있으며, 애플리케이션이나 방문자에게 유용성을 제공하지 않으면서 이에 대한 정보를 포함할 수 있습니다. 잠재적인 취약점이 노출되지 않도록 이 헤더를 해제하세요. X-XSS-Protection: 사이트 간 스크립팅 필터링을 가능하게 합니다."}
{"title": "URL", "subtitle": "HTTP 헤더", "source": "https://www.httpdebugger.com/http/http_header.html", "text": "HTTP 헤더는 http 프로토콜을 통해 전송되는 HTTP 트랜잭션에 필요한 중요한 정보를 제공합니다. 일반적인 HTTP 헤더 형식은 헤더 필드에 콜론으로 구분된 이름-값 쌍을 포함합니다. 각 이름-값 쌍은 캐리지 리턴(CR)과 줄 바꿈(LF) 문자 시퀀스로 끝납니다. 각 헤더 끝의 빈 필드는 헤더의 끝을 나타냅니다."}
{"title": "URL", "subtitle": "일반 헤더 (General Header)", "source": "https://www.httpdebugger.com/http/http_header.html", "text": "일반 헤더 필드는 요청 및 응답 메시지에 공통적으로 적용됩니다. 헤더 필드는 전송된 메시지에만 적용되며 전송된 엔티티에는 적용되지 않습니다. 구조: Cache-Control, Connection, Date, Pragma, Trailer, Transer-Encoding, Upgrade, Via, Warning"}
{"title": "URL", "subtitle": "요청 헤더 (Request Header)", "source": "https://www.httpdebugger.com/http/http_header.html", "text": "요청 헤더 필드를 통해 클라이언트는 요청 정보와 클라이언트 정보를 서버에 추가로 전달할 수 있습니다. 구조: Accept, Accept-Charset, Accept-Encoding, Accept-Language, Authorization, Expect, From, Host, If-Match, If-Modified-Since, If-None-Match, If-Range, If-Unmodified-Since, Max-Forwards, Proxy-Authorization, Range, Referer, TE, User-Agent"}
{"title": "URL", "subtitle": "응답 헤더(Response Header)", "source": "https://www.httpdebugger.com/http/http_header.html", "text": "응답 헤더 필드는 서버가 단순 상태 줄 응답 이외의 응답을 통해 추가 정보를 전달할 수 있도록 합니다. 구조: Accept-Ranges, Ages, ETag, Location, Proxy-Authenticate, Retry-After, Server, Vary, WWW-Authenticate"}
{"title": "URL", "subtitle": "헤더 - 메타데이터 가져오기 요청 헤더 (Fetch metadata request headers)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "Sec-Fetch-Site: 요청 시작자의 출처와 대상의 출처 간의 관계를 나타냅니다. 이 헤더는cross-site, same-origin, same-site, none 값을 가진 토큰의 값을 나타냅니다. Sec-Fetch-Mode: 서버에 요청의 모드를 나타냅니다. 이 헤더는 구조화된 헤더로, 값이 cors, navigation, no-cors, same-origin, websocket 등 가능한 값을 가진 토큰입니다. Sec-Fetch-User: 사용자 활성화로 인해 탐색 요청이 트리거되었는지 여부를 나타냅니다. 이 헤더는 부울 값이므로 가능한 값은 false일 경우는 0, true일 경우는 1입니다. Sec-Fetch-Dest: 요청의 목적지를 나타냅니다. 이 헤더는 audio, audioworklet, document, embed, empty, font, image, manifest, object, paintworklet, report, script, serviceworker, sharedworker, style, track, video, worker 및 xslt 값을 가진 토큰입니다."}
{"title": "URL", "subtitle": "헤더 - Server-sent events", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "Reporting-Endpoints: Reporting API를 사용할 때 브라우저가 경고 및 오류 보고서를 보내야 하는 서버 엔드포인트를 지정하는 데 사용되는 응답 헤더입니다. Report-To:  Reporting API를 사용할 때 브라우저가 경고 및 오류 보고서를 보내야 하는 서버 엔드포인트를 지정하는 데 사용되는 응답 헤더입니다. 더 이상 사용하지 않음."}
{"title": "URL", "subtitle": "헤더 - 전송 코딩", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "Transfer-Encoding: 리소스를 사용자에게 안전하게 전송하는 데 사용되는 인코딩 형식을 지정합니다. TE: 사용자 에이전트가 허용할 전송 인코딩을 지정합니다. Trailer: 보낸 사람이 청크 메시지의 끝에 추가 필드를 포함할 수 있도록 합니다."}
{"title": "URL", "subtitle": "헤더 - 웹소켓 (Websocket)", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "Sec-WebSocket-Access: 서버가 WebSocket 연결로 업그레이드할 의향이 있음을 나타내는 응답 헤더입니다. Sec-WebSocket-Extensions: 요청에서 이 헤더는 클라이언트가 지원하는 WebSocket 확장자를 선호하는 순서대로 나타냅니다. 응답에서는 클라이언트의 기본 설정에서 서버가 선택한 확장자를 나타냅니다. Sec-WebSocket-Key: 클라이언트가 웹소켓을 열 의도가 있음을 명시적으로 확인하는 키가 포함된 요청 헤더. Sec-WebSocket-Protocol: 요청에서 이 헤더는 클라이언트가 지원하는 하위 프로토콜을 선호하는 순서대로 나타냅니다. 응답에서는 클라이언트의 기본 설정에서 서버가 선택한 하위 프로토콜을 나타냅니다. Sec-WebSocket-Version: 요청에서 이 헤더는 클라이언트가 사용하는 WebSocket 프로토콜의 버전을 나타냅니다. 응답에서는 요청된 프로토콜 버전이 서버에서 지원되지 않는 경우에만 전송되며, 서버가 지원하는 버전이 나열됩니다"}
{"title": "URL", "subtitle": "사용되지 않는 헤더", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "Pragma: 요청-응답 체인 어디에서나 다양한 영향을 미칠 수 있는 구현 전용 헤더입니다. 캐시-컨트롤 헤더가 아직 존재하지 않는 HTTP/1.0 캐시와의 하위 호환성을 위해 사용됩니다. Warning: 발생 가능한 문제에 대한 일반적인 경고 정보"}
{"title": "URL", "subtitle": "헤더 - Alt-Svc", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "이 서비스에 도달하는 대체 방법을 나열하는 데 사용됩니다."}
{"title": "URL", "subtitle": "헤더 - Alt-Used", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "사용 중인 대체 서비스를 식별하는 데 사용됩니다."}
{"title": "URL", "subtitle": "헤더 - Date", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "메시지가 시작된 날짜와 시간이 포함되어 있습니다"}
{"title": "URL", "subtitle": "헤더 - Link", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "이 엔티티 헤더 필드는 HTTP 헤더에서 하나 이상의 링크를 직렬화하는 수단을 제공합니다. 이 필드는 HTML <link> 요소와 의미적으로 동등합니다."}
{"title": "URL", "subtitle": "헤더 - Retry-After", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "사용자 에이전트가 후속 요청을 하기 전에 기다려야 하는 시간을 나타냅니다."}
{"title": "URL", "subtitle": "헤더 - Server-Timing", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "주어진 요청-응답 주기에 대한 하나 이상의 지표와 설명을 전달합니다."}
{"title": "URL", "subtitle": "헤더 - Service-Worker", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "Service-Worker: Service-Worker 스크립트 리소스 가져오기에 포함됩니다. 이 헤더는 관리자가 모니터링 목적으로 v 스크립트 요청을 기록하는 데 도움이 됩니다. Service-Worker-Allowed: Service-Worker 스크립트의 응답에 이 헤더를 포함시켜 경로 제한을 제거하는 데 사용됩니다."}
{"title": "URL", "subtitle": "헤더 - SourceMap", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "디버거가 생성되거나 변환된 코드 대신 원본 소스 코드를 통과할 수 있도록 소스 맵에 대한 링크입니다."}
{"title": "URL", "subtitle": "헤더 - Upgrade", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "HTTP/1.1 (단일) 헤더는 이미 설정된 클라이언트/서버 연결을 동일한 전송 프로토콜을 통해 다른 프로토콜로 업그레이드하는 데 사용할 수 있습니다. 예를 들어, 클라이언트가 HTTP 1.1에서 HTTP 2.0으로 연결을 업그레이드하거나 HTTP 또는 HTTPS 연결을 WebSocket으로 업그레이드하는 데 사용할 수 있습니다."}
{"title": "URL", "subtitle": "헤더 - Priority", "source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers#other", "text": "특정 연결에 대한 특정 리소스 요청의 우선순위에 대한 힌트를 제공합니다. 이 값은 클라이언트 우선순위를 나타내는 요청으로 전송되거나 서버가 요청의 우선순위를 다시 지정하기로 선택한 경우 응답으로 전송될 수 있습니다."}
